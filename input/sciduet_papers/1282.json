{"title": "Adversarial Training for Satire Detection: Controlling for Confounding Variables", "abstract": "The automatic detection of satire vs. regular news is relevant for downstream applications (for instance, knowledge base population) and to improve the understanding of linguistic characteristics of satire. Recent approaches build upon corpora which have been labeled automatically based on article sources. We hypothesize that this encourages the models to learn characteristics for different publication sources (e.g., \"The Onion\" vs. \"The Guardian\") rather than characteristics of satire, leading to poor generalization performance to unseen publication sources. We therefore propose a novel model for satire detection with an adversarial component to control for the confounding variable of publication source. On a large novel data set collected from German news (which we make available to the research community), we observe comparable satire classification performance and, as desired, a considerable drop in publication classification performance with adversarial training. Our analysis shows that the adversarial component is crucial for the model to learn to pay attention to linguistic properties of satire.", "text": [{"id": 0, "string": "Introduction Satire is a form of art used to criticize in an entertaining manner (cf."}, {"id": 1, "string": "Sulzer, 1771, p."}, {"id": 2, "string": "995ff.)"}, {"id": 3, "string": "."}, {"id": 4, "string": "It makes use of different stylistic devices, e.g., humor, irony, sarcasm, exaggerations, parody or caricature (Knoche, 1982; Colletta, 2009 )."}, {"id": 5, "string": "The occurrence of harsh, offensive or banal and funny words is typical (Golbert, 1962; Brummack, 1971) ."}, {"id": 6, "string": "Satirical news are written with the aim of mimicking regular news in diction."}, {"id": 7, "string": "In contrast to misinformation and disinformation (Thorne and Vlachos, 2018) , it does not have the intention of fooling the readers into actually believing something wrong in order to manipulate their opinion."}, {"id": 8, "string": "* Work was done at University of Stuttgart."}, {"id": 9, "string": "The task of satire detection is to automatically distinguish satirical news from regular news."}, {"id": 10, "string": "This is relevant, for instance, for downstream applications, such that satirical articles can be ignored in knowledge base population."}, {"id": 11, "string": "Solving this problem computationally is challenging."}, {"id": 12, "string": "Even human readers are sometimes not able to precisely recognize satire (Allcott and Gentzkow, 2017) ."}, {"id": 13, "string": "Thus, an automatic system for satire detection is both relevant for downstream applications and could help humans to better understand the characteristics of satire."}, {"id": 14, "string": "Previous work mostly builds on top of corpora of news articles which have been labeled automatically based on the publication source (e.g., \"The New York Times\" articles would be labeled as regular while \"The Onion\" articles as satire 1 )."}, {"id": 15, "string": "We hypothesize that such distant labeling approach leads to the model mostly representing characteristics of the publishers instead of actual satire."}, {"id": 16, "string": "This has two main issues: First, interpretation of the model to obtain a better understanding of concepts of satire would be misleading, and second, generalization of the model to unseen publication sources would be harmed."}, {"id": 17, "string": "We propose a new model with adversarial training to control for the confounding variable of publication sources, i.e., we debias the model."}, {"id": 18, "string": "Our experiments and analysis show that (1) the satire detection performance stays comparable when the adversarial component is included, and (2) that adversarial training is crucial for the model to pay attention to satire instead of publication characteristics."}, {"id": 19, "string": "(3), we publish a large German data set for satire detection which is a) the first data set in German, b) the first data set including publication sources, enabling the experiments at hand, and c) the largest resource for satire detection so far."}, {"id": 20, "string": "2 2 Previous Work Previous work tackled the task of automatic English satire detection with handcrafted features, for instance, the validity of the context of entity mentions (Burfoot and Baldwin, 2009 ), or the coherence of a story (Goldwasser and Zhang, 2016) ."}, {"id": 21, "string": "Rubin et al."}, {"id": 22, "string": "(2016) use distributions of parts-ofspeech, sentiment, and exaggerations."}, {"id": 23, "string": "In contrast to these approaches, our model uses only word embeddings as input representations."}, {"id": 24, "string": "Our work is therefore similar to Yang et al."}, {"id": 25, "string": "(2017) and De Sarkar et al."}, {"id": 26, "string": "(2018) who also use artificial neural networks to predict if a given text is satirical or regular news."}, {"id": 27, "string": "They develop a hierarchical model of convolutional and recurrent layers with attention over paragraphs or sentences."}, {"id": 28, "string": "We follow this line of work but our model is not hierarchical and introduces less parameters."}, {"id": 29, "string": "We apply attention to words instead of sentences or paragraphs, accounting for the fact that satire might be expressed on a sub-sentence level."}, {"id": 30, "string": "Adversarial training is popular to improve the robustness of models."}, {"id": 31, "string": "Originally introduced by Goodfellow et al."}, {"id": 32, "string": "(2014) as generative adversarial networks with a generative and a discriminative component, Ganin et al."}, {"id": 33, "string": "(2016) show that a related concept can also be used for domain adaptation: A domain-adversarial neural network consists of a classifier for the actual class labels and a domain discriminator."}, {"id": 34, "string": "The two components share the same feature extractor and are trained in a minimax optimization algorithm with gradient reversal: The sign of the gradient of the domain discriminator is flipped when backpropagating to the feature extractor."}, {"id": 35, "string": "Building upon the idea of eliminating domain-specific input representations, Wadsworth et al."}, {"id": 36, "string": "(2018) debias input representations for recidivism prediction, or income prediction (Edwards and Storkey, 2016; Beutel et al., 2017; Madras et al., 2018; Zhang et al., 2018) ."}, {"id": 37, "string": "Debiasing mainly focuses on word embeddings, e.g., to remove gender bias from embeddings (Bolukbasi et al., 2016) ."}, {"id": 38, "string": "Despite previous positive results with adversarial training, a recent study by Elazar and Goldberg (2018) calls for being cautious and not blindly trusting adversarial training for debiasing."}, {"id": 39, "string": "We therefore analyze whether it is possible at all to use adversarial training in another setting, namely to control for the confounding variable of publication sources in satire detection (see Section 3.1)."}, {"id": 40, "string": "3 Methods for Satire Classification Limitations of Previous Methods The data set used by Yang et al."}, {"id": 41, "string": "(2017) and De Sarkar et al."}, {"id": 42, "string": "(2018) consists of text from 14 satirical and 6 regular news websites."}, {"id": 43, "string": "Although the satire sources in train, validation, and test sets did not overlap, the sources of regular news were not split up according to the different data sets (Yang et al., 2017) ."}, {"id": 44, "string": "We hypothesize that this enables the classifier to learn which articles belong to which publication of regular news and classify everything else as satire, given that one of the most frequent words is the name of the website itself (see Section 4.1)."}, {"id": 45, "string": "Unfortunately, we cannot analyze this potential limitation since their data set does not contain any information on the publication source 3 ."}, {"id": 46, "string": "Therefore, we create a new corpus in German (see Section 4.1) including this information and investigate our hypothesis on it."}, {"id": 47, "string": "Model Motivated by our hypothesis in Section 3.1, we propose to consider two different classification problems (satire detection and publication identification) with a shared feature extractor."}, {"id": 48, "string": "Figure 1 provides an overview of our model."}, {"id": 49, "string": "We propose to train the publication identifier as an adversary."}, {"id": 50, "string": "Feature Extractor Following De Sarkar et al."}, {"id": 51, "string": "(2018) , we only use word embeddings and no further handcrafted features to represent the input."}, {"id": 52, "string": "We pretrain word embeddings of 300 dimensions on the whole corpus using word2vec (Mikolov et al., 2013) ."}, {"id": 53, "string": "The feature generator f takes the embeddings of the words of each article as input for a bidirectional LSTM (Hochreiter and Schmidhuber, 1997) , followed by a self-attention layer as proposed by Lin et al."}, {"id": 54, "string": "(2017) ."}, {"id": 55, "string": "We refer to the union of all the parameters of the feature extractor as \u03b8 f in the following."}, {"id": 56, "string": "Satire Detector The gray part of Figure 1 shows the model part for our main task -satire detection."}, {"id": 57, "string": "The satire detector feeds the representation from the feature extractor into a softmax layer and performs a binary classification task (satire: yes or no)."}, {"id": 58, "string": "Note that, in contrast to De Sarkar et al."}, {"id": 59, "string": "(2018) , we classify satire solely on the document level, as this is sufficient to analyze the impact of the adversarial component and the influence of the publication source."}, {"id": 60, "string": "Publication Identifier The second classification branch of our model aims at identifying the publication source of the input."}, {"id": 61, "string": "Similar to the satire detector, the publication identifier consists of a single softmax layer which gets the extracted features as an input."}, {"id": 62, "string": "It then performs a multi-class classification task since our dataset consists of 15 publication sources (see Table 1 )."}, {"id": 63, "string": "Adversarial Training Let \u03b8 f be the parameters of the feature extractors and \u03b8 s and \u03b8 p be the parameters of the satire detector and the publication identifier, respectively."}, {"id": 64, "string": "The objective function for satire detection is J s = \u2212E (x,ys)\u223cp data log P \u03b8 f \u222a\u03b8s (y s , x) , (1) while the objective for publication identification is J p = \u2212E (x,yp)\u223cp data log P \u03b8 f \u222a\u03b8p (y p , x) ."}, {"id": 65, "string": "(2) Note that the parameters of the feature extractor \u03b8 f are part of both model parts."}, {"id": 66, "string": "Since our goal is to control for the confounding variable of publication sources, we train the publication identifier as an adversary: The parameters of the classification part \u03b8 p are updated to optimize the publication identification while the parameters of the shared feature generator \u03b8 f are updated to fool the publication identifier."}, {"id": 67, "string": "This leads to the following update equations for the parameters \u03b8 s := \u03b8 s \u2212 \u03b7 \u2202J s \u2202\u03b8 s (3) \u03b8 p := \u03b8 p \u2212 \u03b7 \u2202J p \u2202\u03b8 p (4) \u03b8 f := \u03b8 f \u2212 \u03b7 \u2202J s \u2202\u03b8 f \u2212 \u03bb \u2202J p \u2202\u03b8 f (5) with \u03b7 being the learning rate and \u03bb being a weight for the reversed gradient that is tuned on the development set."}, {"id": 68, "string": "Figure 1 depicts Figure 1 : Architecture of the model."}, {"id": 69, "string": "The gray area on the left shows the satire detector; the white area on the right is the adversary (publication identifier); the gradient flow with and without adversarial training is shown with blue arrows pointing upwards."}, {"id": 70, "string": "\u2202 J s \u2202 \u03b8 s \u2202 J s \u2202 \u03b8 f \u2202 J p \u2202\u03b8 p \u2212\u03bb \u2202 J p \u2202 \u03b8 f sources of the corpus, consisting of almost 330k articles."}, {"id": 71, "string": "The corpus contains articles published between January 1st, 2000 and May 1st, 2018."}, {"id": 72, "string": "Each publication has individual typical phrases and different most common words."}, {"id": 73, "string": "Among the most common words is typically the name of each publication, e.g., \"Der Spiegel\" has \"SPIEGEL\" as fifth and \"Der Postillon\" \"Postillon\" as third most common word."}, {"id": 74, "string": "We did not delete those words to keep the dataset as realistic as possible."}, {"id": 75, "string": "We randomly split the data set into training, development (dev) and test (80/10/10 %) with the same label distributions in all sets."}, {"id": 76, "string": "Given the comparable large size of the corpus, we opt for using a well-defined test set for reproducability of our experiments in contrast to a crossvalidation setting."}, {"id": 77, "string": "Research questions."}, {"id": 78, "string": "We discuss two questions."}, {"id": 79, "string": "RQ1: How does a decrease in publication classification performance through adversarial training affect the satire classification performance?"}, {"id": 80, "string": "RQ2: Is adversarial training effective for avoiding that the model pays most attention to the characteristics of publication source rather than actual satire?"}, {"id": 81, "string": "Baseline."}, {"id": 82, "string": "As a baseline model, we train the satire detector part (gray area in Figure 1 ) on the satire task."}, {"id": 83, "string": "Then, we freeze the weights of the feature extractor and train the publication classifier on top of it."}, {"id": 84, "string": "In addition, we use a majority baseline model which predicts the most common class."}, {"id": 85, "string": "Hyperparameters."}, {"id": 86, "string": "We cut the input sentences to a maximum length of 500 words."}, {"id": 87, "string": "This enables us to fully represent almost all satire articles and capture most of the content of the regular articles while keeping the training time low."}, {"id": 88, "string": "As mentioned before, we represent the input words with 300 dimensional embeddings."}, {"id": 89, "string": "The feature extractor consists of a biLSTM layer with 300 hidden units in each direction and a self-attention layer with an internal hidden representation of 600."}, {"id": 90, "string": "For training, we use Adam (Kingma and Ba, 2014) with an initial learning rate of 0.0001 and a decay rate of 10 \u22126 ."}, {"id": 91, "string": "We use mini-batch gradient descent training with a batch size of 32 and alternating batches of the two branches of our model."}, {"id": 92, "string": "We avoid overfitting by early stopping based on the satire F1 score on the development set."}, {"id": 93, "string": "Evaluation."}, {"id": 94, "string": "For evaluating satire detection, we use precision, recall and F1 score of the satire class."}, {"id": 95, "string": "For publication identification, we calculate a weighted macro precision, recall and F1 score, i.e., a weighted sum of class-specific scores with weights determined by the class distribution."}, {"id": 96, "string": "Selection of Hyperparameter \u03bb Table 2 (upper part) shows results for different values of \u03bb, the hyperparameter of adversarial training, on dev."}, {"id": 97, "string": "For \u03bb \u2208 {0.2, 0.3, 0.5}, the results are comparably, with \u03bb = 0.2 performing best for satire detection."}, {"id": 98, "string": "Setting \u03bb = 0.7 leads to a performance drop for satire but also to F 1 = 0 for publication classification."}, {"id": 99, "string": "Hence, we chose \u03bb = 0.2 (the best performing model on satire classification) and \u03bb = 0.7 (the worst performing model on publication identification) to investigate RQ1."}, {"id": 100, "string": "Results (RQ1) The bottom part of Table 2 shows the results on test data."}, {"id": 101, "string": "The majority baseline fails since the corpus contains more regular than satirical news articles."}, {"id": 102, "string": "In comparison to the baseline model without adversarial training (no adv), the model with \u03bb = 0.2 achieves a comparable satire classification performance."}, {"id": 103, "string": "As expected, the publication identification performance drops, especially the precision declines from 44.2 % to 30.8 %."}, {"id": 104, "string": "Thus, a model which is punished for identifying publication sources can still learn to identify satire."}, {"id": 105, "string": "Similar to the results on dev, the recall of the model with \u03bb = 0.7 drops to (nearly) 0 %."}, {"id": 106, "string": "In this case, the satire classification performance also drops."}, {"id": 107, "string": "This suggests that there are overlapping features (cues) for both satire and publication classification."}, {"id": 108, "string": "This indicates that the two tasks cannot be entirely untangled."}, {"id": 109, "string": "Analysis (RQ2) To address RQ2, we analyze the results and attention weights of the baseline model and our model with adversarial training."}, {"id": 110, "string": "Shift in Publication Identification The baseline model (no adv) mostly predicts the correct publication for a given article (in 55.7 % of the cases)."}, {"id": 111, "string": "The model with \u03bb = 0.2 mainly (in 98.2 % of the cases) predicts the most common publication in our corpus (\"S\u00fcddeutsche Zeitung\")."}, {"id": 112, "string": "The model with \u03bb = 0.7 shifts the majority of predictions (98.7 %) to a rare class (namely \"Eine Zeitung\"), leading to its bad performance."}, {"id": 113, "string": "English translation: no adv After all , the proposal to allow family reunion only inclusive mothers-in-law is being discussed , whereof the Union hopes for an off-putting effect ."}, {"id": 114, "string": "adv After all , the proposal to allow family reunion only inclusive mothers-in-law is being discussed , whereof the Union hopes for an off-putting effect ."}, {"id": 115, "string": "Figure 2 exemplifies the attention weights for a selection of satirical instances."}, {"id": 116, "string": "In the first example the baseline model (no adv) focuses on a single word (\"dpo\" as a parody of the German newswire \"dpa\") which is unique to the publication the article was picked from (\"Der Postillon\")."}, {"id": 117, "string": "In comparison the model using adversarial training (\u03bb = 0.2) ignores this word completely and pays attention to \"die Mordserie\" (\"series of murders\") instead."}, {"id": 118, "string": "In the second example, there are no words unique to a publication and the baseline spreads the attention evenly across all words."}, {"id": 119, "string": "In contrast, the model with adversarial training is able to find cues for satire, being humor in this example (\"family reunion [for refugees] is only allowed including mothers-in-law\")."}, {"id": 120, "string": "Interpretation of Attention Weights Conclusion and Future Work We presented evidence that simple neural networks for satire detection learn to recognize characteristics of publication sources rather than satire and proposed a model that uses adversarial training to control for this effect."}, {"id": 121, "string": "Our results show a considerable reduction of publication identification performance while the satire detection remains on comparable levels."}, {"id": 122, "string": "The adversarial component enables the model to pay attention to linguistic characteristics of satire."}, {"id": 123, "string": "Future work could investigate the effect of other potential confounding variables in satire detection, such as the distribution of time and region of the articles."}, {"id": 124, "string": "Further, we propose to perform more quantitative but also more qualitative analysis to better understand the behaviour of the two classifier configurations in comparison."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 39}, {"section": "Limitations of Previous Methods", "n": "3.1", "start": 40, "end": 46}, {"section": "Model", "n": "3.2", "start": 47, "end": 49}, {"section": "Feature Extractor", "n": "3.2.1", "start": 50, "end": 55}, {"section": "Satire Detector", "n": "3.2.2", "start": 56, "end": 59}, {"section": "Publication Identifier", "n": "3.2.3", "start": 60, "end": 62}, {"section": "Adversarial Training", "n": "3.2.4", "start": 63, "end": 95}, {"section": "Selection of Hyperparameter \u03bb", "n": "4.2", "start": 96, "end": 99}, {"section": "Results (RQ1)", "n": "5", "start": 100, "end": 106}, {"section": "Analysis (RQ2)", "n": "6", "start": 107, "end": 109}, {"section": "Shift in Publication Identification", "n": "6.1", "start": 110, "end": 119}, {"section": "Conclusion and Future Work", "n": "7", "start": 120, "end": 124}], "figures": [{"filename": "../figure/image/1282-Figure1-1.png", "caption": "Figure 1: Architecture of the model. The gray area on the left shows the satire detector; the white area on the right is the adversary (publication identifier); the gradient flow with and without adversarial training is shown with blue arrows pointing upwards.", "page": 2, "bbox": {"x1": 309.59999999999997, "x2": 522.24, "y1": 62.879999999999995, "y2": 229.92}}, {"filename": "../figure/image/1282-Figure2-1.png", "caption": "Figure 2: Attention weight examples for satirical articles, with and without adversary.", "page": 4, "bbox": {"x1": 72.0, "x2": 286.08, "y1": 418.56, "y2": 487.2}}, {"filename": "../figure/image/1282-Table2-1.png", "caption": "Table 2: Results on dev and independent test data.", "page": 3, "bbox": {"x1": 317.76, "x2": 515.04, "y1": 62.4, "y2": 204.95999999999998}}, {"filename": "../figure/image/1282-Table1-1.png", "caption": "Table 1: Corpus statistics (average length in words)", "page": 3, "bbox": {"x1": 80.64, "x2": 281.28, "y1": 62.879999999999995, "y2": 280.32}}]}