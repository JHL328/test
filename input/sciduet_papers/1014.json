{"title": "Integrating Semantic Knowledge to Tackle Zero-shot Text Classification", "abstract": "Insufficient or even unavailable training data of emerging classes is a big challenge of many classification tasks, including text classification. Recognising text documents of classes that have never been seen in the learning stage, so-called zero-shot text classification, is therefore difficult and only limited previous works tackled this problem. In this paper, we propose a two-phase framework together with data augmentation and feature augmentation to solve this problem. Four kinds of semantic knowledge (word embeddings, class descriptions, class hierarchy, and a general knowledge graph) are incorporated into the proposed framework to deal with instances of unseen classes effectively. Experimental results show that each and the combination of the two phases achieve the best overall accuracy compared with baselines and recent approaches in classifying real-world texts under the zeroshot scenario. * Piyawat Lertvittayakumjorn and Jingqing Zhang contributed equally to this project.", "text": [{"id": 0, "string": "Introduction As one of the most fundamental problems in machine learning, automatic classification has been widely studied in several domains."}, {"id": 1, "string": "However, many approaches, proven to be effective in traditional classification tasks, cannot catch up with a dynamic and open environment where new classes can emerge after the learning stage (Romera-Paredes and Torr, 2015) ."}, {"id": 2, "string": "For example, the number of topics on social media is growing rapidly, and the classification models are required to recognise the text of the new topics using only general information (e.g., descriptions of the topics) since labelled training instances are unfeasible to obtain for each new topic (Lee et al., 2011) ."}, {"id": 3, "string": "This scenario holds in many real-world domains such as object recognition and medical diagnosis (Xian et al., 2017; World Health Organization, 1996) ."}, {"id": 4, "string": "Zero-shot learning (ZSL) for text classification aims to classify documents of classes which are absent from the learning stage."}, {"id": 5, "string": "Although it is challenging for a machine to achieve, humans are able to learn new concepts by transferring knowledge from known to unknown domains based on high-level descriptions and semantic representations (Thrun and Pratt, 1998) ."}, {"id": 6, "string": "Therefore, without labelled data of unseen classes, a zero-shot learning framework is expected to exploit supportive semantic knowledge (e.g., class descriptions, relations among classes, and external domain knowledge) to generally infer the features of unseen classes using patterns learned from seen classes."}, {"id": 7, "string": "So far, three main types of semantic knowledge have been employed in general zero-shot scenarios ."}, {"id": 8, "string": "The most widely used one is semantic attributes of classes such as visual concepts (e.g., colours, shapes) and semantic properties (e.g., behaviours, functions) (Lampert et al., 2009; Zhao et al., 2018) ."}, {"id": 9, "string": "The second type is concept ontology, including class hierarchy and knowledge graphs, which represents relationships among classes and features Fergus et al., 2010) ."}, {"id": 10, "string": "The third type is semantic word embeddings which capture implicit relationships between words thanks to a large training text corpus (Socher et al., 2013; Norouzi et al., 2013) ."}, {"id": 11, "string": "Nonetheless, concerning ZSL in text classification particularly, there are few studies exploiting one of these knowledge types and none has considered the combinations of them (Pushp and Srivastava, 2017; Dauphin et al., 2013) ."}, {"id": 12, "string": "Moreover, some previous works used different datasets to train and test, but there is similarity between classes in the training and testing set."}, {"id": 13, "string": "For example, in (Dauphin et al., 2013) , the class \"imdb.com\" in the training set naturally corresponds to the class \"Movies\" in the testing set."}, {"id": 14, "string": "Hence, these methods are not working under a strict zero-shot scenario."}, {"id": 15, "string": "To tackle the zero-shot text classification problem, this paper proposes a novel two-phase framework together with data augmentation and feature augmentation (Figure 1 )."}, {"id": 16, "string": "In addition, four kinds of semantic knowledge including word embeddings, class descriptions, class hierarchy, and a general knowledge graph (ConceptNet) are exploited in the framework to effectively learn the unseen classes."}, {"id": 17, "string": "Both of the two phases are based on convolutional neural networks (Kim, 2014) ."}, {"id": 18, "string": "The first phase called coarse-grained classification judges if a document is from seen or unseen classes."}, {"id": 19, "string": "Then, the second phase, named finegrained classification, finally decides its class."}, {"id": 20, "string": "Note that all the classifiers in this framework are trained using labelled data of seen classes (and augmented text data) only."}, {"id": 21, "string": "None of the steps learns from the labelled data of unseen classes."}, {"id": 22, "string": "The contributions of our work can be summarised as follows."}, {"id": 23, "string": "\u2022 We propose a novel deep learning based twophase framework, including coarse-grained and fine-grained classification, to tackle the zero-shot text classification problem."}, {"id": 24, "string": "Unlike some previous works, our framework does not require semantic correspondence between classes in a training stage and classes in an inference stage."}, {"id": 25, "string": "In other words, the seen and unseen classes can be clearly different."}, {"id": 26, "string": "\u2022 We propose a novel data augmentation technique called topic translation to strengthen the capability of our framework to detect documents from unseen classes effectively."}, {"id": 27, "string": "\u2022 We propose a method to perform feature augmentation by using integrated semantic knowledge to transfer the knowledge learned from seen to unseen classes in the zero-shot scenario."}, {"id": 28, "string": "In the remainder of this paper, we firstly explain our proposed zero-shot text classification framework in section 2."}, {"id": 29, "string": "Experiments and results, which demonstrate the performance of our framework, are presented in section 3."}, {"id": 30, "string": "Related works are discussed in section 4."}, {"id": 31, "string": "Finally, section 5 concludes our work and mentions possible future work."}, {"id": 32, "string": "Methodology Problem Formulation Let C S and C U be disjoint sets of seen and unseen classes of the classification respectively."}, {"id": 33, "string": "In the learning stage, a training set {(x 1 , y 1 ), ."}, {"id": 34, "string": "."}, {"id": 35, "string": "."}, {"id": 36, "string": ", (x n , y n )} is given where x i is the i-th document containing a sequence of words [w i 1 , w i 2 , ."}, {"id": 37, "string": "."}, {"id": 38, "string": "."}, {"id": 39, "string": ", w i t ] and y i \u2208 C S is the class of x i ."}, {"id": 40, "string": "In the inference stage, the goal is to predict the class of each document,\u0177 i , in a testing set which has the same data format as the training set except that y i comes from C S \u222a C U ."}, {"id": 41, "string": "Note that (i) every class comes with a class label and a class description ( Figure 2a ); (ii) a class hierarchy showing superclass-subclass relationships is also provided ( Figure 2b) ; (iii) the documents from unseen classes cannot be observed to train the framework."}, {"id": 42, "string": "Overview and Notations As discussed in the Introduction, our proposed classification framework consists of two phases ( Figure 1 )."}, {"id": 43, "string": "The first phase, coarse-grained classification, predicts whether an input document comes from seen or unseen classes."}, {"id": 44, "string": "We also apply a data augmentation technique in this phase to help the classifiers be aware of the existence of unseen classes without accessing their real data."}, {"id": 45, "string": "Then the second phase, fine-grained classification, finally specifies the class of the input document."}, {"id": 46, "string": "It uses either a traditional classifier or a zero-shot classifier depending on the coarse-grained prediction given by Phase 1."}, {"id": 47, "string": "Also, feature augmentation based on semantic knowledge is used to provide additional information which relates the document and the unseen classes to generalise the zero-shot reasoning."}, {"id": 48, "string": "We use the following notations in Figure 1 and throughout this paper."}, {"id": 49, "string": "\u2022 The list of embeddings of each word in the document x i is denoted by v i w = [v i w 1 , v i w 2 , ."}, {"id": 50, "string": "."}, {"id": 51, "string": "."}, {"id": 52, "string": ", v i wt ]."}, {"id": 53, "string": "\u2022 The embedding of each class label c is denoted by v c , \u2200c \u2208 C S \u222a C U ."}, {"id": 54, "string": "It is assumed that each class has a one-word class label."}, {"id": 55, "string": "If the class label has more than one word, a similar one-word class label is provided to find v c ."}, {"id": 56, "string": "\u2022 As augmented features, the relationship vec-tor v i w j ,c shows the degree of relatedness between the word w j and the class c according to semantic knowledge."}, {"id": 57, "string": "Hence, the list of relationship vectors between each word in x i and each class c \u2208 C S \u222a C U is denoted by v i w,c = [v i w 1 ,c , v i w 2 ,c , ."}, {"id": 58, "string": "."}, {"id": 59, "string": "."}, {"id": 60, "string": ", v i wt,c ]."}, {"id": 61, "string": "We will explain the construction method in section 2.4.1."}, {"id": 62, "string": "Phase 1: Coarse-grained Classification Given a document x i , Phase 1 performs a binary classification to decide whether\u0177 i \u2208 C S or\u0177 i / \u2208 C S ."}, {"id": 63, "string": "In this phase, each seen class c s \u2208 C S has its own CNN classifier (with a subsequent dense layer and a sigmoid output) to predict the confidence that x i comes from the class c s , i.e., p(\u0177 i = c s |x i )."}, {"id": 64, "string": "The classifier uses v i w as an input and it is trained using a binary cross entropy loss with all documents of its class in the training set as positive examples and the rest as negative examples."}, {"id": 65, "string": "For a test document x i , this phase computes p(\u0177 i = c s |x i ) for every seen class c s in C S ."}, {"id": 66, "string": "If there exists a class c s such that p(\u0177 i = c s |x i ) > \u03c4 s , it predicts\u0177 i \u2208 C S ; otherwise,\u0177 i / \u2208 C S ."}, {"id": 67, "string": "\u03c4 s is a classification threshold for the class c s , calculated based on the threshold adaptation method from (Shu et al., 2017) ."}, {"id": 68, "string": "Data Augmentation During the learning stage, the classifiers in Phase 1 use negative examples solely from seen classes, so they may not be able to differentiate the positive class from unseen classes."}, {"id": 69, "string": "Hence, when the names of unseen classes are known in the inference stage, we try to introduce them to the classifiers in Phase 1 via augmented data so they can learn to reject the instances likely from unseen classes."}, {"id": 70, "string": "We do data augmentation by translating a document from its original seen class to a new unseen class using analogy."}, {"id": 71, "string": "We call this process topic translation."}, {"id": 72, "string": "In the word level, we translate a word w in a document of class c to a corresponding word w in the context of a target class c by solving an analogy question \"c:w :: c :?\"."}, {"id": 73, "string": "For example, solving the analogy \"company:firm :: village:?\""}, {"id": 74, "string": "via word embeddings , we know that the word \"firm\" in a document of class \"company\" can be translated into the word \"hamlet\" in the context of class \"village\"."}, {"id": 75, "string": "Our framework adopts the 3COSMUL method by Levy and Goldberg (2014) to solve the analogy question and find candidates of w : w = argmax x\u2208V cos(x, c ) cos(x, w) cos(x, c) + where V is a vocabulary set and cos(a, b) is a cosine similarity score between the vectors of word a and word b."}, {"id": 76, "string": "Also, is a small number (i.e., 0.001) added to prevent division by zero."}, {"id": 77, "string": "In the document level, we follow Algorithm 1 to translate a document of class c into the topic of another class c ."}, {"id": 78, "string": "To explain, we translate all nouns, verbs, adjectives, and adverbs in the given document to the target class, word-by-word, using the word-level analogy."}, {"id": 79, "string": "The word to replace must have the same part of speech as the original word and all the replacements in one document are 1-to-1 relations, enforced by replace dict in Algorithm 1."}, {"id": 80, "string": "With this idea, we can create augmented documents for the unseen classes by topic-translation from the documents of seen classes in the training dataset."}, {"id": 81, "string": "After that, we can use the augmented documents as additional negative examples for all the CNNs in Phase 1 to make them aware of the tone of unseen classes."}, {"id": 82, "string": "Phase 2 decides the most appropriate class\u0177 i for x i using two CNN classifiers: a traditional classifier and a zero-shot classifier as shown in Figure  1 ."}, {"id": 83, "string": "If\u0177 i \u2208 C S predicted by Phase 1, the traditional classifier will finally select a class c s \u2208 C S as\u0177 i ."}, {"id": 84, "string": "Otherwise, if\u0177 i / \u2208 C S , the zero-shot classifier will be used to select a class c u \u2208 C U as\u0177 i ."}, {"id": 85, "string": "The traditional classifier and the zero-shot classifier have an identical CNN-based structure followed by two dense layers but their inputs and outputs are different."}, {"id": 86, "string": "The traditional classifier is a multi-class classifier (|C S | classes) with a softmax output, so it requires only the word embeddings v i w as an input."}, {"id": 87, "string": "This classifier is trained using a cross entropy loss with a training dataset whose examples are from seen classes only."}, {"id": 88, "string": "In contrast, the zero-shot classifier is a binary classifier with a sigmoid output."}, {"id": 89, "string": "Specifically, it takes a text document x i and a class c as inputs and predicts the confidence p(\u0177 i = c|x i )."}, {"id": 90, "string": "However, in practice, we utilise v i w to represent x i , v c to represent the class c, and also augmented features v i w,c to provide more information on how intimate the connections between words and the class c are."}, {"id": 91, "string": "Altogether, for each word w j , the classifier receives the concatenation of three vectors (i.e., [v i w j ; v c ; v i w j ,c ]) as an input."}, {"id": 92, "string": "This classifier is trained using a binary cross entropy loss with a training data from seen classes only, but we expect this classifier to work well on unseen classes thanks to the distinctive patterns of v i w,c in positive examples of every class."}, {"id": 93, "string": "This is how we transfer knowledge from seen to unseen classes in ZSL."}, {"id": 94, "string": "Feature Augmentation The relationship vector v w j ,c contains augmented features we input to the zero-shot classifier."}, {"id": 95, "string": "v w j ,c shows how the word w j and the class c are related considering the relations in a general knowledge graph."}, {"id": 96, "string": "In this work, we use ConceptNet providing general knowledge of natural language words and phrases (Speer and Havasi, 2013) ."}, {"id": 97, "string": "A subgraph of ConceptNet is shown in Figure 2c as an illustration."}, {"id": 98, "string": "Nodes in ConceptNet are words or phrases, while edges connecting two nodes show how they are related either syntactically or semantically."}, {"id": 99, "string": "We firstly represent a class c as three sets of nodes in ConceptNet by processing the class hierarchy, class label, and class description of c. (1) the class nodes is a set of nodes of the class label c and any tokens inside c if c has more than one word."}, {"id": 100, "string": "(2) superclass nodes is a set of nodes of all the superclasses of c according to the class hierarchy."}, {"id": 101, "string": "(3) description nodes is a set of nodes of all nouns in the description of the class c. For example, if c is the class \"Educational Institution\", according to Figure 2a -2b, the three sets of Con-ceptNet nodes for this class are: (1) educational institution, educational, institution (2) organization, agent (3) place, people, ages, education."}, {"id": 102, "string": "To construct v w j ,c , we consider whether the word w j is connected to the members of the three sets above within K hops by particular types of relations or not 1 ."}, {"id": 103, "string": "For each of the three sets, we construct a vector with 3K + 1 dimensions."}, {"id": 104, "string": "\u2022 v[0] = 1 if w j is a node in that set; otherwise, v[0] = 0."}, {"id": 105, "string": "\u2022 for k = 0, ."}, {"id": 106, "string": "."}, {"id": 107, "string": "."}, {"id": 108, "string": ", K \u2212 1: v[3k + 1] = 1 if there is a node in the set whose shortest path to w j is k + 1."}, {"id": 109, "string": "Otherwise, v[3k + 1] = 0."}, {"id": 110, "string": "-v[3k + 2] is the number of nodes in the set whose shortest path to w j is k + 1."}, {"id": 111, "string": "-v[3k +3] is v[3k +2 ] divided by the total number of nodes in the set."}, {"id": 112, "string": "Thus, the vector associated to each set shows how w j is semantically close to that set."}, {"id": 113, "string": "Finally, we concatenate the constructed vectors from the three sets to become v w j ,c with 3\u00d7(3K+1) dimensions."}, {"id": 114, "string": "Experiments Datasets We used two textual datasets for the experiments."}, {"id": 115, "string": "The vocabulary size of each dataset was limited by 20,000 most frequent words and all numbers were excluded."}, {"id": 116, "string": "(1) DBpedia ontology dataset  includes 14 non-overlapping classes and textual data collected from Wikipedia."}, {"id": 117, "string": "Each class has 40,000 training and 5,000 testing samples."}, {"id": 118, "string": "(2) The 20newsgroups dataset 2 has 20 topics each of which has approximately 1,000 documents."}, {"id": 119, "string": "70% of the documents of each class were randomly selected for training, and the remaining 30% were used as a testing set."}, {"id": 120, "string": "Implementation Details 3 In our experiments, two different rates of unseen classes, 50% and 25%, were chosen and the corresponding sizes of C S and C U are shown in Table 1 ."}, {"id": 121, "string": "For each dataset and each unseen rate, the random 1 In this paper, we only consider the most common types of positive relations which are RelatedTo, IsA, PartOf, and AtLocation."}, {"id": 122, "string": "They cover \u223c60% of all edges in ConceptNet."}, {"id": 123, "string": "2 http://qwone.com/\u223cjason/20Newsgroups/ 3 Code: https://github.com/JingqingZ/KG4ZeroShotText."}, {"id": 124, "string": "selection of (C S , C U ) were repeated ten times and these ten groups were used by all the experiments with this setting for a fair comparison."}, {"id": 125, "string": "All documents from C U were removed from the training set accordingly."}, {"id": 126, "string": "Finally, the results from all the ten groups were averaged."}, {"id": 127, "string": "In Phase 1, the structure of each classifier was identical."}, {"id": 128, "string": "The CNN layer had three filter sizes [3, 4, 5] with 400 filters for each filter size and the subsequent dense layer had 300 units."}, {"id": 129, "string": "For data augmentation, we used gensim with an implementation of 3COSMUL (\u0158eh\u016f\u0159ek and Sojka, 2010) to solve the word-level analogy (line 5 in Algorithm 1)."}, {"id": 130, "string": "Also, the numbers of augmented text documents per unseen class for every setting (if used) are indicated in Table 1 ."}, {"id": 131, "string": "These numbers were set empirically considering the number of available training documents to be translated."}, {"id": 132, "string": "In Phase 2, the traditional classifier and the zero-shot classifier had the same structure, in which the CNN layer had three filter sizes [2, 4, 8] with 600 filters for each filter size and the two intermediate dense layers had 400 and 100 units respectively."}, {"id": 133, "string": "For feature augmentation, the maximum path length K in ConceptNet was set to 3 to create the relationship vectors 4 ."}, {"id": 134, "string": "The DBpedia ontology 5 was used to construct a class hierarchy of the DBpedia dataset."}, {"id": 135, "string": "The class hierarchy of the 20newsgroups dataset was constructed based on the namespaces initially provided by the dataset."}, {"id": 136, "string": "Meanwhile, the classes descriptions of both datasets were picked from Macmillan Dictionary 6 as appropriate."}, {"id": 137, "string": "For both phases, we used 200-dim GloVe vectors 7 for word embeddings v w and v c (Pennington et al., 2014)."}, {"id": 138, "string": "All the deep neural networks were implemented with TensorLayer (Dong et al., 2017a) and TensorFlow (Abadi et al., 2016) ."}, {"id": 139, "string": "Baselines and Evaluation Metrics We compared each phase and the overall framework with the following approaches and settings."}, {"id": 140, "string": "Phase 1: Proposed by (Shu et al., 2017) , DOC is a state-of-the-art open-world text classification approach which classifies a new sample into a seen class or \"reject\" if the sample does not belong to any seen classes."}, {"id": 141, "string": "The DOC uses a single CNN and a 1-vs-rest sigmoid output layer with threshold adjustment."}, {"id": 142, "string": "Unlike DOC, the classifiers in the proposed Phase 1 work individually."}, {"id": 143, "string": "However, for a fair comparison, we used DOC only as a binary classifier in this phase (\u0177 i \u2208 C S or\u0177 i / \u2208 C S )."}, {"id": 144, "string": "Phase 2: To see how well the augmented feature v w,c work in ZSL, we ran the zero-shot classifier with different combinations of inputs."}, {"id": 145, "string": "Particularly, five combinations of v w , v c , and v w,c were tested with documents from unseen classes only (traditional ZSL)."}, {"id": 146, "string": "The whole framework: (1) Count-based model selected the class whose label appears most frequently in the document as\u0177 i ."}, {"id": 147, "string": "(2) Label similarity (Sappadla et al., 2016) is an unsupervised approach which calculates the cosine similarity between the sum of word embeddings of each class label and the sum of word embeddings of every n-gram (n = 1, 2, 3) in the document."}, {"id": 148, "string": "We adopted this approach to do single-label classification by predicting the class that got the highest similarity score among all classes."}, {"id": 149, "string": "(3) RNN Au-toEncoder was built based on a Seq2Seq model with LSTM (512 hidden units), and it was trained to encode documents and class labels onto the same latent space."}, {"id": 150, "string": "The cosine similarity was applied to select a class label closest to the document on the latent space."}, {"id": 151, "string": "(4) RNN+FC refers to the architecture 2 proposed in (Pushp and Srivastava, 2017) ."}, {"id": 152, "string": "It used an RNN layer with LSTM (512 hidden units) followed by two dense layers with 400 and 100 units respectively."}, {"id": 153, "string": "(5) CNN+FC replaced the RNN in the previous model with a CNN, which has the identical structure as the zero-shot classifier in Phase 2."}, {"id": 154, "string": "Both RNN+FC and CNN+FC predicted the confidence p(\u0177 i = c|x i ) given v w and v c ."}, {"id": 155, "string": "The class with the highest confidence was selected as\u0177 i ."}, {"id": 156, "string": "For Phase 1, we used the accuracy for binary classification (y,\u0177 i \u2208 C S or y,\u0177 i / \u2208 C S ) as an evaluation metric."}, {"id": 157, "string": "In contrast, for Phase 2 and the whole framework, we used the multi-class classification accuracy (\u0177 i = y i ) as a metric."}, {"id": 158, "string": "Results and Discussion The evaluation of Phase 1 (coarse-grained classification) checks if each x i was correctly delivered to the right classifier in Phase 2."}, {"id": 159, "string": "Table 3 shows the performance of Phase 1 with and without augmented data compared with DOC."}, {"id": 160, "string": "Considering test documents from seen classes only, our framework outperformed DOC on both datasets."}, {"id": 161, "string": "In addition, the augmented data improved the accuracy of detecting documents from unseen classes clearly and led to higher overall accuracy in every setting."}, {"id": 162, "string": "Despite no real labelled data from unseen classes, the augmented data generated by topic translation helped Phase 1 better detect documents from unseen classes."}, {"id": 163, "string": "Table 4 shows some examples of augmented data from the DBpedia dataset."}, {"id": 164, "string": "Even if they are not completely understandable, they contain the tone of the target classes."}, {"id": 165, "string": "Although Phase 1 provided confidence scores for all seen classes, we could not use them to predict\u0177 i directly since the distribution of scores of positive examples from different CNNs are different."}, {"id": 166, "string": "Figure 3 shows that the distribution of confidence scores of the class \"Artist\" had a noticeably larger variance and was clearly different from the class \"Building\"."}, {"id": 167, "string": "Hence, even if p(\u0177 i = \"Building\"|x i ) > p(\u0177 i = \"Artist\"|x i ), we cannot conclude that x i is more likely to come from the class \"Building\"."}, {"id": 168, "string": "This is why a traditional classifier in Phase 2 is necessary."}, {"id": 169, "string": "Regarding Phase 2, fine-grained classification is in charge of predicting\u0177 i and it employs two classifiers which were tested separately."}, {"id": 170, "string": "Assuming Phase 1 is perfect, the classifiers in Phase 2 should be able to find the right class."}, {"id": 171, "string": "The purpose of Table 5 is to show that the traditional CNN classifier in Phase 2 was highly accurate."}, {"id": 172, "string": "Mitra perdulca is a species of sea snail a marine gastropod mollusk in the family Mitridae the miters or miter snails."}, {"id": 173, "string": "Animal \u2192 Plant Arecaceae perdulca is a flowering of port aster a naval mollusk gastropod in the fabaceae Clusiaceae the tiliaceae or rockery amaryllis."}, {"id": 174, "string": "Animal \u2192 Athlete Mira perdulca is a swimmer of sailing sprinter an Olympian limpets gastropod in the basketball Middy the miters or miter skater."}, {"id": 175, "string": "Table 4 : Examples of augmented data translated from a document of the original class \"Animal\" into two target classes \"Plant\" and \"Athlete\"."}, {"id": 176, "string": "Besides, given test documents from unseen classes only, the performance of the zero-shot classifier in Phase 2 is shown in Table 6 ."}, {"id": 177, "string": "Based on the construction method, v w,c quantified the relatedness between words and the class but, unlike v w and v c , it did not include detailed semantic meaning."}, {"id": 178, "string": "Thus, the classifier using v w,c only could not find out the correct unseen class and neither   hand, the combination of [v w ; v c ], which included semantic embeddings of both words and the class label, increased the accuracy of predicting unseen classes clearly."}, {"id": 179, "string": "However, the zero-shot classifier fed by the combination of all three types of inputs [v w ; v c ; v w,c ] achieved the highest accuracy in all settings."}, {"id": 180, "string": "It asserts that the integration of semantic knowledge we proposed is an effective means for knowledge transfer from seen to unseen classes in the zero-shot scenario."}, {"id": 181, "string": "Last but most importantly, we compared the whole framework with four baselines as shown in Table 2 ."}, {"id": 182, "string": "First, the count-based model is a rulebased model so it failed to predict documents from seen classes accurately and resulted in unpleasant overall results."}, {"id": 183, "string": "This was similar to the label similarity approach even though it had higher degree of flexibility."}, {"id": 184, "string": "Next, the RNN Autoencoder was trained without any supervision since\u0177 i was predicted based on the cosine similarity."}, {"id": 185, "string": "We believe the implicit semantic relatedness between classes caused the failure of the RNN Autoencoder."}, {"id": 186, "string": "Besides, the CNN+FC and RNN+FC had same inputs and outputs and it was clear that CNN+FC performed better than RNN+FC in the experiment."}, {"id": 187, "string": "However, neither CNN+FC nor RNN+FC was able to transfer the knowledge learned from seen to unseen classes."}, {"id": 188, "string": "Finally, our two-phase framework has competitive prediction accuracy on unseen classes while maintaining the accuracy on seen classes."}, {"id": 189, "string": "This made it achieve the highest overall accuracy on both datasets and both unseen rates."}, {"id": 190, "string": "In conclusion, by using integrated semantic knowledge, the proposed two-phase framework with data and feature augmentation is a promising step to tackle this challenging zero-shot problem."}, {"id": 191, "string": "[v w ; v w,c ] and [v c ; v w, Furthermore, another benefit of the framework is high flexibility."}, {"id": 192, "string": "As the modules in Figure 1 has less coupling to one another, it is flexible to improve or customise each of them."}, {"id": 193, "string": "For example, we can deploy an advanced language understanding model, e.g., BERT (Devlin et al., 2018) , as a traditional classifier."}, {"id": 194, "string": "Moreover, we may replace Con-ceptNet with a domain-specific knowledge graph to deal with medical texts."}, {"id": 195, "string": "Related Work Zero-shot Text Classification There are a few more related works to discuss besides recent approaches we compared with in the experiments (explained in section 3.3)."}, {"id": 196, "string": "Dauphin et al."}, {"id": 197, "string": "(2013) predicted semantic utterance of texts by mapping class labels and text samples into the same semantic space and classifying each sample to the closest class label."}, {"id": 198, "string": "learned the embeddings of classes, documents, and words jointly in the learning stage."}, {"id": 199, "string": "Hence, it can perform well in domain-specific classification, but this is possible only with a large amount of training data."}, {"id": 200, "string": "Overall, most of the previous works exploited semantic relationships between classes and documents via embeddings."}, {"id": 201, "string": "In contrast, our proposed framework leverages not only the word embeddings but also other semantic knowledge."}, {"id": 202, "string": "While word embeddings are used to solve analogy for data augmentation in Phase 1, the other semantic knowledge sources (in Figure 2 ) are integrated into relationship vectors and used as augmented features in Phase 2."}, {"id": 203, "string": "Furthermore, our framework does not require any semantic correspondences between seen and unseen classes."}, {"id": 204, "string": "Data Augmentation in NLP In the face of insufficient data, data augmentation has been widely used to improve generalisation of deep neural networks especially in computer vision (Krizhevsky et al., 2012) and multimodality (Dong et al., 2017b) , but it is still not a common practice in natural language processing."}, {"id": 205, "string": "Recent works have explored data augmentation in NLP tasks such as machine translation and text classification (Saito et al., 2017; Fadaee et al., 2017; Kobayashi, 2018) , and the algorithms were designed to preserve semantic meaning of an original document by using synonyms (Zhang and Le-Cun, 2015) or adding noises (Xie et al., 2017) , for example."}, {"id": 206, "string": "In contrast, our proposed data augmentation technique translates a document from one meaning (its original class) to another meaning (an unseen class) by analogy in order to substitute unavailable labelled data of the unseen class."}, {"id": 207, "string": "Feature Augmentation in NLP Apart from improving classification accuracy, feature augmentation is also used in domain adaptation to transfer knowledge between a source and a target domain (Pan et al., 2010b; Fang and Chiang, 2018; Chen et al., 2018 )."}, {"id": 208, "string": "An early research paper applying feature augmentation in NLP is Daume III (2007) which targeted domain adaptation on sequence labelling tasks."}, {"id": 209, "string": "After that, feature augmentation was used in several NLP tasks such as cross-domain sentiment classification (Pan et al., 2010a), multi-domain machine translation (Clark et al., 2012) , semantic argument classification (Batubara et al., 2018) , etc."}, {"id": 210, "string": "Our work is different from previous works not only that we applied this technique to zero-shot text classification but also that we integrated many types of semantic knowledge to create the augmented features."}, {"id": 211, "string": "Conclusion and Future Work To tackle zero-shot text classification, we proposed a novel CNN-based two-phase framework together with data augmentation and feature augmentation."}, {"id": 212, "string": "The experiments show that data augmentation by topic translation improved the accuracy in detecting instances from unseen classes, while feature augmentation enabled knowledge transfer from seen to unseen classes for zero-shot learning."}, {"id": 213, "string": "Thanks to the framework and the integrated semantic knowledge, our work achieved the highest overall accuracy compared with all the baselines and recent approaches in all settings."}, {"id": 214, "string": "In the future, we plan to extend our framework to do multi-label classification with a larger amount of data, and also study how semantic units defined by linguists can be used in the zero-shot scenario."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 31}, {"section": "Problem Formulation", "n": "2.1", "start": 32, "end": 41}, {"section": "Overview and Notations", "n": "2.2", "start": 42, "end": 61}, {"section": "Phase 1: Coarse-grained Classification", "n": "2.3", "start": 62, "end": 67}, {"section": "Data Augmentation", "n": "2.3.1", "start": 68, "end": 93}, {"section": "Feature Augmentation", "n": "2.4.1", "start": 94, "end": 113}, {"section": "Datasets", "n": "3.1", "start": 114, "end": 119}, {"section": "Implementation Details 3", "n": "3.2", "start": 120, "end": 138}, {"section": "Baselines and Evaluation Metrics", "n": "3.3", "start": 139, "end": 157}, {"section": "Results and Discussion", "n": "3.4", "start": 158, "end": 194}, {"section": "Zero-shot Text Classification", "n": "4.1", "start": 195, "end": 203}, {"section": "Data Augmentation in NLP", "n": "4.2", "start": 204, "end": 206}, {"section": "Feature Augmentation in NLP", "n": "4.3", "start": 207, "end": 210}, {"section": "Conclusion and Future Work", "n": "5", "start": 211, "end": 214}], "figures": [{"filename": "../figure/image/1014-Figure3-1.png", "caption": "Figure 3: The distributions of confidence scores of positive examples from four seen classes of DBpedia in Phase 1.", "page": 5, "bbox": {"x1": 315.36, "x2": 517.4399999999999, "y1": 61.919999999999995, "y2": 192.0}}, {"filename": "../figure/image/1014-Figure1-1.png", "caption": "Figure 1: The overview of the proposed framework with two phases. The coarse-grained phase judges if an input document xi comes from seen or unseen classes. The fine-grained phase finally decides the class y\u0302i. All notations are defined in section 2.1-2.2.", "page": 1, "bbox": {"x1": 78.72, "x2": 526.0799999999999, "y1": 62.879999999999995, "y2": 213.12}}, {"filename": "../figure/image/1014-Table6-1.png", "caption": "Table 6: The accuracy of the zero-shot classifier in Phase 2 given documents from unseen classes only.", "page": 6, "bbox": {"x1": 306.71999999999997, "x2": 527.04, "y1": 351.84, "y2": 439.2}}, {"filename": "../figure/image/1014-Table4-1.png", "caption": "Table 4: Examples of augmented data translated from a document of the original class \u201cAnimal\u201d into two target classes \u201cPlant\u201d and \u201cAthlete\u201d.", "page": 6, "bbox": {"x1": 73.92, "x2": 289.44, "y1": 462.71999999999997, "y2": 575.04}}, {"filename": "../figure/image/1014-Table2-1.png", "caption": "Table 2: The accuracy of the whole framework compared with the baselines.", "page": 6, "bbox": {"x1": 78.72, "x2": 518.4, "y1": 62.879999999999995, "y2": 229.92}}, {"filename": "../figure/image/1014-Table3-1.png", "caption": "Table 3: The accuracy of Phase 1 with and without augmented data compared with DOC .", "page": 6, "bbox": {"x1": 75.84, "x2": 286.08, "y1": 270.71999999999997, "y2": 415.2}}, {"filename": "../figure/image/1014-Table5-1.png", "caption": "Table 5: The accuracy of the traditional classifier in Phase 2 given documents from seen classes only.", "page": 6, "bbox": {"x1": 307.68, "x2": 525.12, "y1": 270.71999999999997, "y2": 305.28}}, {"filename": "../figure/image/1014-Figure2-1.png", "caption": "Figure 2: Illustrations of semantic knowledge integrated into our framework: (a) class labels and class descriptions (b) class hierarchy and (c) a subgraph of the general knowledge graph (ConceptNet).", "page": 2, "bbox": {"x1": 72.96, "x2": 290.4, "y1": 63.839999999999996, "y2": 312.0}}, {"filename": "../figure/image/1014-Table1-1.png", "caption": "Table 1: The rates of unseen classes and the numbers of augmented documents (per unseen class) in the experiments", "page": 4, "bbox": {"x1": 306.71999999999997, "x2": 534.24, "y1": 591.84, "y2": 655.1999999999999}}]}