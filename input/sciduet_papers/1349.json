{"title": "Paraphrase to Explicate: Revealing Implicit Noun-Compound Relations", "abstract": "Revealing the implicit semantic relation between the constituents of a nouncompound is important for many NLP applications. It has been addressed in the literature either as a classification task to a set of pre-defined relations or by producing free text paraphrases explicating the relations. Most existing paraphrasing methods lack the ability to generalize, and have a hard time interpreting infrequent or new noun-compounds. We propose a neural model that generalizes better by representing paraphrases in a continuous space, generalizing for both unseen noun-compounds and rare paraphrases. Our model helps improving performance on both the noun-compound paraphrasing and classification tasks.", "text": [{"id": 0, "string": "Introduction Noun-compounds hold an implicit semantic relation between their constituents."}, {"id": 1, "string": "For example, a 'birthday cake' is a cake eaten on a birthday, while 'apple cake' is a cake made of apples."}, {"id": 2, "string": "Interpreting noun-compounds by explicating the relationship is beneficial for many natural language understanding tasks, especially given the prevalence of nouncompounds in English (Nakov, 2013) ."}, {"id": 3, "string": "The interpretation of noun-compounds has been addressed in the literature either by classifying them to a fixed inventory of ontological relationships (e.g."}, {"id": 4, "string": "Nastase and Szpakowicz, 2003) or by generating various free text paraphrases that describe the relation in a more expressive manner (e.g."}, {"id": 5, "string": "Hendrickx et al., 2013) ."}, {"id": 6, "string": "Methods dedicated to paraphrasing nouncompounds usually rely on corpus co-occurrences of the compound's constituents as a source of explicit relation paraphrases (e.g."}, {"id": 7, "string": "Wubben, 2010; Versley, 2013) ."}, {"id": 8, "string": "Such methods are unable to generalize for unseen noun-compounds."}, {"id": 9, "string": "Yet, most noun-compounds are very infrequent in text (Kim and Baldwin, 2007) , and humans easily interpret the meaning of a new noun-compound by generalizing existing knowledge."}, {"id": 10, "string": "For example, consider interpreting parsley cake as a cake made of parsley vs. resignation cake as a cake eaten to celebrate quitting an unpleasant job."}, {"id": 11, "string": "We follow the paraphrasing approach and propose a semi-supervised model for paraphrasing noun-compounds."}, {"id": 12, "string": "Differently from previous methods, we train the model to predict either a paraphrase expressing the semantic relation of a noun-compound (predicting '[w 2 ] made of [w 1 ]' given 'apple cake'), or a missing constituent given a combination of paraphrase and noun-compound (predicting 'apple' given 'cake made of [w 1 ]')."}, {"id": 13, "string": "Constituents and paraphrase templates are represented as continuous vectors, and semantically-similar paraphrase templates are embedded in proximity, enabling better generalization."}, {"id": 14, "string": "Interpreting 'parsley cake' effectively reduces to identifying paraphrase templates whose \"selectional preferences\" (Pantel et al., 2007) on each constituent fit 'parsley' and 'cake'."}, {"id": 15, "string": "A qualitative analysis of the model shows that the top ranked paraphrases retrieved for each noun-compound are plausible even when the constituents never co-occur (Section 4)."}, {"id": 16, "string": "We evaluate our model on both the paraphrasing and the classification tasks (Section 5)."}, {"id": 17, "string": "On both tasks, the model's ability to generalize leads to improved performance in challenging evaluation settings."}, {"id": 18, "string": "1 2 Background Noun-compound Classification Noun-compound classification is the task concerned with automatically determining the semantic relation that holds between the constituents of a noun-compound, taken from a set of pre-defined relations."}, {"id": 19, "string": "Early work on the task leveraged information derived from lexical resources and corpora (e.g."}, {"id": 20, "string": "Girju, 2007; \u00d3 S\u00e9aghdha and Copestake, 2009; Tratz and Hovy, 2010) ."}, {"id": 21, "string": "More recent work broke the task into two steps: in the first step, a nouncompound representation is learned from the distributional representation of the constituent words (e.g."}, {"id": 22, "string": "Mitchell and Lapata, 2010; Zanzotto et al., 2010; Socher et al., 2012) ."}, {"id": 23, "string": "In the second step, the noun-compound representations are used as feature vectors for classification (e.g."}, {"id": 24, "string": "Dima and Hinrichs, 2015; Dima, 2016) ."}, {"id": 25, "string": "The datasets for this task differ in size, number of relations and granularity level (e.g."}, {"id": 26, "string": "Nastase and Szpakowicz, 2003; Kim and Baldwin, 2007; Tratz and Hovy, 2010) ."}, {"id": 27, "string": "The decision on the relation inventory is somewhat arbitrary, and subsequently, the inter-annotator agreement is relatively low (Kim and Baldwin, 2007) ."}, {"id": 28, "string": "Specifically, a noun-compound may fit into more than one relation: for instance, in Tratz (2011) , business zone is labeled as CONTAINED (zone contains business), although it could also be labeled as PURPOSE (zone whose purpose is business)."}, {"id": 29, "string": "Noun-compound Paraphrasing As an alternative to the strict classification to predefined relation classes, Nakov and Hearst (2006) suggested that the semantics of a noun-compound could be expressed with multiple prepositional and verbal paraphrases."}, {"id": 30, "string": "For example, apple cake is a cake from, made of, or which contains apples."}, {"id": 31, "string": "The suggestion was embraced and resulted in two SemEval tasks."}, {"id": 32, "string": "SemEval 2010 task 9 (Butnariu et al., 2009 ) provided a list of plausible human-written paraphrases for each nouncompound, and systems had to rank them with the goal of high correlation with human judgments."}, {"id": 33, "string": "In SemEval 2013 task 4 (Hendrickx et al., 2013) , systems were expected to provide a ranked list of paraphrases extracted from free text."}, {"id": 34, "string": "Various approaches were proposed for this task."}, {"id": 35, "string": "Most approaches start with a pre-processing step of extracting joint occurrences of the constituents from a corpus to generate a list of candidate paraphrases."}, {"id": 36, "string": "Unsupervised methods apply information extraction techniques to find and rank the most meaningful paraphrases (Kim and Nakov, 2011; Xavier and Lima, 2014; Pasca, 2015; Pavlick and Pasca, 2017) , while supervised approaches learn to rank paraphrases using various features such as co-occurrence counts (Wubben, 2010; Li et al., 2010; Surtani et al., 2013; Versley, 2013) or the distributional representations of the nouncompounds (Van de Cruys et al., 2013) ."}, {"id": 37, "string": "One of the challenges of this approach is the ability to generalize."}, {"id": 38, "string": "If one assumes that sufficient paraphrases for all noun-compounds appear in the corpus, the problem reduces to ranking the existing paraphrases."}, {"id": 39, "string": "It is more likely, however, that some noun-compounds do not have any paraphrases in the corpus or have just a few."}, {"id": 40, "string": "The approach of Van de Cruys et al."}, {"id": 41, "string": "(2013) somewhat generalizes for unseen noun-compounds."}, {"id": 42, "string": "They represented each noun-compound using a compositional distributional vector (Mitchell and Lapata, 2010) and used it to predict paraphrases from the corpus."}, {"id": 43, "string": "Similar noun-compounds are expected to have similar distributional representations and therefore yield the same paraphrases."}, {"id": 44, "string": "For example, if the corpus does not contain paraphrases for plastic spoon, the model may predict the paraphrases of a similar compound such as steel knife."}, {"id": 45, "string": "In terms of sharing information between semantically-similar paraphrases, Nulty and Costello (2010) and Surtani et al."}, {"id": 46, "string": "(2013) learned \"is-a\" relations between paraphrases from the co-occurrences of various paraphrases with each other."}, {"id": 47, "string": "For example, the specific '[w 2 ] extracted from [w 1 ]' template (e.g."}, {"id": 48, "string": "in the context of olive oil) generalizes to '[w 2 ] made from [w 1 ]'."}, {"id": 49, "string": "One of the drawbacks of these systems is that they favor more frequent paraphrases, which may co-occur with a wide variety of more specific paraphrases."}, {"id": 50, "string": "Noun-compounds in other Tasks Noun-compound paraphrasing may be considered as a subtask of the general paraphrasing task, whose goal is to generate, given a text fragment, additional texts with the same meaning."}, {"id": 51, "string": "However, general paraphrasing methods do not guarantee to explicate implicit information conveyed in the original text."}, {"id": 52, "string": "Moreover, the most notable source for extracting paraphrases is multiple translations of the same text (Barzilay and McKeown, (23 2001; Ganitkevitch et al., 2013; Mallinson et al., 2017) ."}, {"id": 53, "string": "If a certain concept can be described by an English noun-compound, it is unlikely that a translator chose to translate its foreign language equivalent to an explicit paraphrase instead."}, {"id": 54, "string": "Another related task is Open Information Extraction (Etzioni et al., 2008) , whose goal is to extract relational tuples from text."}, {"id": 55, "string": "Most system focus on extracting verb-mediated relations, and the few exceptions that addressed noun-compounds provided partial solutions."}, {"id": 56, "string": "Pal and Mausam (2016) focused on segmenting multi-word nouncompounds and assumed an is-a relation between the parts, as extracting (Francis Collins, is, NIH director) from \"NIH director Francis Collins\"."}, {"id": 57, "string": "Xavier and Lima (2014) enriched the corpus with compound definitions from online dictionaries, for example, interpreting oil industry as (industry, produces and delivers, oil) based on the Word-Net definition \"industry that produces and delivers oil\"."}, {"id": 58, "string": "This method is very limited as it can only interpret noun-compounds with dictionary entries, while the majority of English noun-compounds don't have them (Nakov, 2013) ."}, {"id": 59, "string": "Paraphrasing Model As opposed to previous approaches, that focus on predicting a paraphrase template for a given nouncompound, we reformulate the task as a multitask learning problem (Section 3.1), and train the model to also predict a missing constituent given the paraphrase template and the other constituent."}, {"id": 60, "string": "Our model is semi-supervised, and it expects as input a set of noun-compounds and a set of constrained part-of-speech tag-based templates that make valid prepositional and verbal paraphrases."}, {"id": 61, "string": "Section 3.2 details the creation of training data, and Section 3.3 describes the model."}, {"id": 62, "string": "Multi-task Reformulation Each training example consists of two constituents and a paraphrase (w 2 , p, w 1 ), and we train the model on 3 subtasks: (1) predict p given w 1 and w 2 , (2) predict w 1 given p and w 2 , and (3) predict w 2 given p and w 1 ."}, {"id": 63, "string": "Figure 1 demonstrates the predictions for subtasks (1) (right) and (2) (left) for the training example (cake, made of, apple)."}, {"id": 64, "string": "Effectively, the model is trained to answer questions such as \"what can cake be made of?"}, {"id": 65, "string": "\", \"what can be made of apple?"}, {"id": 66, "string": "\", and \"what are the possible relationships between cake and apple?\"."}, {"id": 67, "string": "The multi-task reformulation helps learning better representations for paraphrase templates, by embedding semantically-similar paraphrases in proximity."}, {"id": 68, "string": "Similarity between paraphrases stems either from lexical similarity and overlap between the paraphrases (e.g."}, {"id": 69, "string": "'is made of' and 'made of'), or from shared constituents, e.g."}, {"id": 70, "string": "'[w 2 ] involved in [w 1 ]' and '[w 2 ] in [w 1 ] industry' can share [w 1 ] = insurance and [w 2 ] = company ."}, {"id": 71, "string": "This allows the model to predict a correct paraphrase for a given noun-compound, even when the constituents do not occur with that paraphrase in the corpus."}, {"id": 72, "string": "Training Data We collect a training set of (w 2 , p, w 1 , s) examples, where w 1 and w 2 are constituents of a nouncompound w 1 w 2 , p is a templated paraphrase, and s is the score assigned to the training instance."}, {"id": 73, "string": "2 We use the 19,491 noun-compounds found in the SemEval tasks datasets (Butnariu et al., 2009; Hendrickx et al., 2013) and in Tratz (2011) ."}, {"id": 74, "string": "To extract patterns of part-of-speech tags that can form noun-compound paraphrases, such as '[w 2 ] VERB PREP [w 1 ]', we use the SemEval task training data, but we do not use the lexical information in the gold paraphrases."}, {"id": 75, "string": "Corpus."}, {"id": 76, "string": "Similarly to previous noun-compound paraphrasing approaches, we use the Google Ngram corpus (Brants and Franz, 2006) as a source of paraphrases (Wubben, 2010; Li et al., 2010; Surtani et al., 2013; Versley, 2013) ."}, {"id": 77, "string": "The corpus consists of sequences of n terms (for n \u2208 {3, 4, 5}) that occur more than 40 times on the web."}, {"id": 78, "string": "We search for n-grams following the extracted patterns and containing w 1 and w 2 's lemmas for some noun-compound in the set."}, {"id": 79, "string": "We remove punctuation, adjectives, adverbs and some determiners to unite similar paraphrases."}, {"id": 80, "string": "For example, from the 5-gram 'cake made of sweet apples' we extract the training example (cake, made of, apple)."}, {"id": 81, "string": "We keep only paraphrases that occurred at least 5 times, resulting in 136,609 instances."}, {"id": 82, "string": "Weighting."}, {"id": 83, "string": "Each n-gram in the corpus is accompanied with its frequency, which we use to assign scores to the different paraphrases."}, {"id": 84, "string": "For instance, 'cake of apples' may also appear in the corpus, although with lower frequency than 'cake from apples'."}, {"id": 85, "string": "As also noted by Surtani et al."}, {"id": 86, "string": "(2013) , the shortcoming of such a weighting mechanism is that it prefers shorter paraphrases, which are much more common in the corpus (e.g."}, {"id": 87, "string": "count('cake made of apples') count('cake of apples'))."}, {"id": 88, "string": "We overcome this by normalizing the frequencies for each paraphrase length, creating a distribution of paraphrases in a given length."}, {"id": 89, "string": "Negative Samples."}, {"id": 90, "string": "We add 1% of negative samples by selecting random corpus words w 1 and w 2 that do not co-occur, and adding an example (w 2 , [w 2 ] is unrelated to [w 1 ], w 1 , s n ), for some predefined negative samples score s n ."}, {"id": 91, "string": "Similarly, for a word w i that did not occur in a paraphrase p we add (w i , p, UNK, s n ) or (UNK, p, w i , s n ), where UNK is the unknown word."}, {"id": 92, "string": "This may help the model deal with non-compositional noun-compounds, where w 1 and w 2 are unrelated, rather than forcibly predicting some relation between them."}, {"id": 93, "string": "Model For a training instance (w 2 , p, w 1 , s), we predict each item given the encoding of the other two."}, {"id": 94, "string": "Encoding."}, {"id": 95, "string": "We use the 100-dimensional pretrained GloVe embeddings (Pennington et al., 2014) , which are fixed during training."}, {"id": 96, "string": "In addition, we learn embeddings for the special words [w 1 ], [w 2 ], and [p] , which are used to represent a missing component, as in \"cake made of [w 1 ]\", \"[w 2 ] made of apple\", and \"cake [p] apple\"."}, {"id": 97, "string": "For a missing component x \u2208 {[p], [w 1 ], [w 2 ] } surrounded by the sequences of words v 1:i\u22121 and v i+1:n , we encode the sequence using a bidirectional long-short term memory (bi-LSTM) network (Graves and Schmidhuber, 2005) , and take the ith output vector as representing the missing component: bLS(v 1:i , x, v i+1:n ) i ."}, {"id": 98, "string": "In bi-LSTMs, each output vector is a concatenation of the outputs of the forward and backward LSTMs, so the output vector is expected to contain information on valid substitutions both with respect to the previous words v 1:i\u22121 and the subsequent words v i+1:n ."}, {"id": 99, "string": "Prediction."}, {"id": 100, "string": "We predict a distribution of the vocabulary of the missing component, i.e."}, {"id": 101, "string": "to predict w 1 correctly we need to predict its index in the word vocabulary V w , while the prediction of p is from the vocabulary of paraphrases in the training set, V p ."}, {"id": 102, "string": "We predict the following distributions: p = softmax(W p \u00b7 bLS( w 2 , [p], w 1 ) 2 ) w 1 = softmax(W w \u00b7 bLS( w 2 , p 1:n , [w 1 ]) n+1 ) w 2 = softmax(W w \u00b7 bLS([w 2 ], p 1:n , w 1 ) 1 ) (1) where W w \u2208 R |Vw|\u00d72d , W p \u2208 R |Vp|\u00d72d , and d is the embeddings dimension."}, {"id": 103, "string": "During training, we compute cross-entropy loss for each subtask using the gold item and the prediction, sum up the losses, and weight them by the instance score."}, {"id": 104, "string": "During inference, we predict the missing components by picking the best scoring index in each distribution: 3 p i = argmax(p) w 1i = argmax(\u0175 1 ) w 2i = argmax(\u0175 2 ) (2) The subtasks share the pre-trained word embeddings, the special embeddings, and the biLSTM parameters."}, {"id": 105, "string": "Subtasks (2) and (3) also share W w , the MLP that predicts the index of a word."}, {"id": 106, "string": "Table 1 : Examples of top ranked predicted components using the model: predicting the paraphrase given w 1 and w 2 (left), w 1 given w 2 and the paraphrase (middle), and w 2 given w 1 and the paraphrase (right)."}, {"id": 107, "string": "Implementation Details."}, {"id": 108, "string": "The model is implemented in DyNet (Neubig et al., 2017) ."}, {"id": 109, "string": "We dedicate a small number of noun-compounds from the corpus for validation."}, {"id": 110, "string": "We train for up to 10 epochs, stopping early if the validation loss has not improved in 3 epochs."}, {"id": 111, "string": "We use Momentum SGD (Nesterov, 1983) , and set the batch size to 10 and the other hyper-parameters to their default values."}, {"id": 112, "string": "Qualitative Analysis To estimate the quality of the proposed model, we first provide a qualitative analysis of the model outputs."}, {"id": 113, "string": "Table 1 displays examples of the model outputs for each possible usage: predicting the paraphrase given the constituent words, and predicting each constituent word given the paraphrase and the other word."}, {"id": 114, "string": "The examples in the table are from among the top 10 ranked predictions for each componentpair."}, {"id": 115, "string": "We note that most of the (w 2 , paraphrase, w 1 ) triplets in the table do not occur in the training data, but are rather generalized from similar examples."}, {"id": 116, "string": "For example, there is no training instance for \"company in the software industry\" but there is a \"firm in the software industry\" and a company in many other industries."}, {"id": 117, "string": "While the frequent prepositional paraphrases are often ranked at the top of the list, the model also retrieves more specified verbal paraphrases."}, {"id": 118, "string": "The list often contains multiple semanticallysimilar paraphrases, such as '[w 2 ] involved in [w 1 ]' and '[w 2 ] in [w 1 ] industry'."}, {"id": 119, "string": "This is a result of the model training objective (Section 3) which positions the vectors of semantically-similar paraphrases close to each other in the embedding space, based on similar constituents."}, {"id": 120, "string": "To illustrate paraphrase similarity we compute a t-SNE projection (Van Der Maaten, 2014) of the embeddings of all the paraphrases, and draw a sample of 50 paraphrases in Figure 2 ."}, {"id": 121, "string": "The projection positions semantically-similar but lexicallydivergent paraphrases in proximity, likely due to many shared constituents."}, {"id": 122, "string": "For instance, 'with', 'from', and 'out of' can all describe the relation between food words and their ingredients."}, {"id": 123, "string": "Evaluation: Noun-Compound Interpretation Tasks For quantitative evaluation we employ our model for two noun-compound interpretation tasks."}, {"id": 124, "string": "The main evaluation is on retrieving and ranking paraphrases ( \u00a75.1)."}, {"id": 125, "string": "For the sake of completeness, we also evaluate the model on classification to a fixed inventory of relations ( \u00a75.2), although it wasn't designed for this task."}, {"id": 126, "string": "Paraphrasing Task Definition."}, {"id": 127, "string": "The general goal of this task is to interpret each noun-compound to multiple prepositional and verbal paraphrases."}, {"id": 128, "string": "In SemEval 2013 Task 4, 4 the participating systems were asked to retrieve a ranked list of paraphrases for each noun-compound, which was automatically evaluated against a similarly ranked list of paraphrases proposed by human annotators."}, {"id": 129, "string": "Model."}, {"id": 130, "string": "For a given noun-compound w 1 w 2 , we first predict the k = 250 most likely paraphrases: p 1 , ...,p k = argmax kp , wherep is the distribution of paraphrases defined in Equation 1."}, {"id": 131, "string": "While the model also provides a score for each paraphrase (Equation 1), the scores have not been optimized to correlate with human judgments."}, {"id": 132, "string": "We therefore developed a re-ranking model that receives a list of paraphrases and re-ranks the list to better fit the human judgments."}, {"id": 133, "string": "We follow Herbrich (2000) and learn a pairwise ranking model."}, {"id": 134, "string": "The model determines which of two paraphrases of the same noun-compound should be ranked higher, and it is implemented as an SVM classifier using scikit-learn (Pedregosa et al., 2011) ."}, {"id": 135, "string": "For training, we use the available training data with gold paraphrases and ranks provided by the SemEval task organizers."}, {"id": 136, "string": "We extract the following features for a paraphrase p: is its confidence score."}, {"id": 137, "string": "The last feature incorporates the original model score into the decision, as to not let other considerations such as preposition frequency in the training set take over."}, {"id": 138, "string": "During inference, the model sorts the list of paraphrases retrieved for each noun-compound according to the pairwise ranking."}, {"id": 139, "string": "It then scores each paraphrase by multiplying its rank with its original model score, and prunes paraphrases with final score < 0.025."}, {"id": 140, "string": "The values for k and the threshold were tuned on the training set."}, {"id": 141, "string": "Evaluation Settings."}, {"id": 142, "string": "The SemEval 2013 task provided a scorer that compares words and ngrams from the gold paraphrases against those in the predicted paraphrases, where agreement on a prefix of a word (e.g."}, {"id": 143, "string": "in derivations) yields a partial scoring."}, {"id": 144, "string": "The overall score assigned to each system is calculated in two different ways."}, {"id": 145, "string": "The 'isomorphic' setting rewards both precision and recall, and performing well on it requires accurately reproducing as many of the gold paraphrases as possible, and in much the same order."}, {"id": 146, "string": "The 'non-isomorphic' setting rewards only precision, and performing well on it requires accurately reproducing the top-ranked gold paraphrases, with no importance to order."}, {"id": 147, "string": "Baselines."}, {"id": 148, "string": "We compare our method with the published results from the SemEval task."}, {"id": 149, "string": "The SemEval 2013 baseline generates for each nouncompound a list of prepositional paraphrases in an arbitrary fixed order."}, {"id": 150, "string": "It achieves a moderately good score in the non-isomorphic setting by generating a fixed set of paraphrases which are both common and generic."}, {"id": 151, "string": "The MELODI system performs similarly: it represents each nouncompound using a compositional distributional vector (Mitchell and Lapata, 2010) which is then used to predict paraphrases from the corpus."}, {"id": 152, "string": "The performance of MELODI indicates that the system was rather conservative, yielding a few common paraphrases rather than many specific ones."}, {"id": 153, "string": "SFS and IIITH, on the other hand, show a more balanced trade-off between recall and precision."}, {"id": 154, "string": "As a sanity check, we also report the results of a baseline that retrieves ranked paraphrases from the training data collected in Section 3.2."}, {"id": 155, "string": "This baseline has no generalization abilities, therefore it is expected to score poorly on the recall-aware isomorphic setting."}, {"id": 156, "string": "Method isomorphic non-isomorphic Baselines SFS (Versley, 2013) 23.1 17.9 IIITH (Surtani et al., 2013) 23.1 25.8 MELODI (Van de Cruys et al., 2013) 13.0 54.8 SemEval 2013 Baseline (Hendrickx et al., 2013) 13 Table 3 : Categories of false positive and false negative predictions along with their percentage."}, {"id": 157, "string": "Results."}, {"id": 158, "string": "Table 2 displays the performance of the proposed method and the baselines in the two evaluation settings."}, {"id": 159, "string": "Our method outperforms all the methods in the isomorphic setting."}, {"id": 160, "string": "In the nonisomorphic setting, it outperforms the other two systems that score reasonably on the isomorphic setting (SFS and IIITH) but cannot compete with the systems that focus on achieving high precision."}, {"id": 161, "string": "The main advantage of our proposed model is in its ability to generalize, and that is also demonstrated in comparison to our baseline performance."}, {"id": 162, "string": "The baseline retrieved paraphrases only for a third of the noun-compounds (61/181), expectedly yielding poor performance on the isomorphic setting."}, {"id": 163, "string": "Our model, which was trained on the very same data, retrieved paraphrases for all nouncompounds."}, {"id": 164, "string": "For example, welfare system was not present in the training data, yet the model predicted the correct paraphrases \"system of welfare benefits\", \"system to provide welfare\" and others."}, {"id": 165, "string": "Error Analysis."}, {"id": 166, "string": "We analyze the causes of the false positive and false negative errors made by the model."}, {"id": 167, "string": "For each error type we sample 10 nouncompounds."}, {"id": 168, "string": "For each noun-compound, false positive errors are the top 10 predicted paraphrases which are not included in the gold paraphrases, while false negative errors are the top 10 gold paraphrases not found in the top k predictions made by the model."}, {"id": 169, "string": "Table 3 displays the manu-ally annotated categories for each error type."}, {"id": 170, "string": "Many false positive errors are actually valid paraphrases that were not suggested by the human annotators (error 1, \"discussion by group\")."}, {"id": 171, "string": "Some are borderline valid with minor grammatical changes (error 6, \"force of coalition forces\") or too specific (error 2, \"life of women in community\" instead of \"life in community\")."}, {"id": 172, "string": "Common prepositional paraphrases were often retrieved although they are incorrect (error 3)."}, {"id": 173, "string": "We conjecture that this error often stem from an n-gram that does not respect the syntactic structure of the sentence, e.g."}, {"id": 174, "string": "a sentence such as \"rinse away the oil from baby 's head\" produces the n-gram \"oil from baby\"."}, {"id": 175, "string": "With respect to false negative examples, they consisted of many long paraphrases, while our model was restricted to 5 words due to the source of the training data (error 1, \"holding done in the case of a share\")."}, {"id": 176, "string": "Many prepositional paraphrases consisted of determiners, which we conflated with the same paraphrases without determiners (error 2, \"mutation of a gene\")."}, {"id": 177, "string": "Finally, in some paraphrases, the constituents in the gold paraphrase appear in inflectional forms (error 3, \"holding of shares\" instead of \"holding of share\")."}, {"id": 178, "string": "Classification Noun-compound classification is defined as a multiclass classification problem: given a pre-defined set of relations, classify w 1 w 2 to the relation that holds between w 1 and w 2 ."}, {"id": 179, "string": "Potentially, the corpus co-occurrences of w 1 and w 2 may contribute to the classification, e.g."}, {"id": 180, "string": "'[w 2 ] held at [w 1 ]' indicates a TIME relation."}, {"id": 181, "string": "Tratz and Hovy (2010) included such features in their classifier, but ablation tests showed that these features had a relatively small contribution, probably due to the sparseness of the paraphrases."}, {"id": 182, "string": "Recently, Shwartz and Waterson (2018) showed that paraphrases may contribute to the classification when represented in a continuous space."}, {"id": 183, "string": "Model."}, {"id": 184, "string": "We generate a paraphrase vector representation par(w 1 w 2 ) for a given noun-compound w 1 w 2 as follows."}, {"id": 185, "string": "We predict the indices of the k most likely paraphrases:p 1 , ...,p k = argmax kp , wherep is the distribution on the paraphrase vocabulary V p , as defined in Equation 1."}, {"id": 186, "string": "We then encode each paraphrase using the biLSTM, and average the paraphrase vectors, weighted by their confidence scores inp: par(w 1 w 2 ) = k i=1pp i \u00b7 V pp i k i=1pp i (3) We train a linear classifier, and represent w 1 w 2 in a feature vector f (w 1 w 2 ) in two variants: paraphrase: f (w 1 w 2 ) = par(w 1 w 2 ), or integrated: concatenated to the constituent word embeddings f (w 1 w 2 ) = [ par(w 1 w 2 ), w 1 , w 2 ]."}, {"id": 187, "string": "The classifier type (logistic regression/SVM), k, and the penalty are tuned on the validation set."}, {"id": 188, "string": "We also provide a baseline in which we ablate the paraphrase component from our model, representing a nouncompound by the concatenation of its constituent embeddings f (w 1 w 2 ) = [ w 1 , w 2 ] (distributional)."}, {"id": 189, "string": "Datasets."}, {"id": 190, "string": "We evaluate on the Tratz (2011) dataset, which consists of 19,158 instances, labeled in 37 fine-grained relations (Tratz-fine) or 12 coarse-grained relations (Tratz-coarse) ."}, {"id": 191, "string": "We report the performance on two different dataset splits to train, test, and validation: a random split in a 75:20:5 ratio, and, following concerns raised by Dima (2016) about lexical memorization (Levy et al., 2015) , on a lexical split in which the sets consist of distinct vocabularies."}, {"id": 192, "string": "The lexical split better demonstrates the scenario in which a noun-compound whose constituents have not been observed needs to be interpreted based on similar observed noun-compounds, e.g."}, {"id": 193, "string": "inferring the relation in pear tart based on apple cake and other similar compounds."}, {"id": 194, "string": "We follow the random and full-lexical splits from Shwartz and Waterson (2018) ."}, {"id": 195, "string": "Baselines."}, {"id": 196, "string": "We report the results of 3 baselines representative of different approaches: 1) Feature-based (Tratz and Hovy, 2010) : we reimplement a version of the classifier with features from WordNet and Roget's Thesaurus."}, {"id": 197, "string": "2) Compositional (Dima, 2016) : a neural architecture that operates on the distributional representations of the noun-compound and its constituents."}, {"id": 198, "string": "Noun-compound representations are learned with (Socher et al., 2012) models."}, {"id": 199, "string": "We report the results from Shwartz and Waterson (2018) ."}, {"id": 200, "string": "3) Paraphrase-based (Shwartz and Waterson, 2018) : a neural classification model that learns an LSTM-based representation of the joint occurrences of w 1 and w 2 in a corpus (i.e."}, {"id": 201, "string": "observed paraphrases), and integrates distributional information using the constituent embeddings."}, {"id": 202, "string": "Results."}, {"id": 203, "string": "Table 4 displays the methods' performance on the two versions of the Tratz (2011) dataset and the two dataset splits."}, {"id": 204, "string": "The paraphrase model on its own is inferior to the distributional model, however, the integrated version improves upon the distributional model in 3 out of 4 settings, demonstrating the complementary nature of the distributional and paraphrase-based methods."}, {"id": 205, "string": "The contribution of the paraphrase component is especially noticeable in the lexical splits."}, {"id": 206, "string": "As expected, the integrated method in Shwartz and Waterson (2018) , in which the paraphrase representation was trained with the objective of classification, performs better than our integrated model."}, {"id": 207, "string": "The superiority of both integrated models in the lexical splits confirms that paraphrases are beneficial for classification."}, {"id": 208, "string": "Analysis."}, {"id": 209, "string": "To analyze the contribution of the paraphrase component to the classification, we focused on the differences between the distributional and integrated models on the Tratz-Coarse lexical split."}, {"id": 210, "string": "Examination of the per-relation F 1 scores revealed that the relations for which performance improved the most in the integrated model were TOPICAL (+11.1 F 1 points), OBJECTIVE (+5.5), AT-TRIBUTE (+3.8) and LOCATION/PART WHOLE (+3.5)."}, {"id": 211, "string": "Table 5 provides examples of noun-compounds that were correctly classified by the integrated model while being incorrectly classified by the distributional model."}, {"id": 212, "string": "For each noun-compound, we provide examples of top ranked paraphrases which are indicative of the gold label relation."}, {"id": 213, "string": "Compositionality Analysis Our paraphrasing approach at its core assumes compositionality: only a noun-compound whose meaning is derived from the meanings of its constituent words can be rephrased using them."}, {"id": 214, "string": "In \u00a73.2 we added negative samples to the training data to simulate non-compositional nouncompounds, which are included in the classification dataset ( \u00a75.2)."}, {"id": 215, "string": "We assumed that these compounds, more often than compositional ones would consist of unrelated constituents (spelling bee, sacred cow), and added instances of random unrelated nouns with '[w 2 ] is unrelated to [w 1 ]'."}, {"id": 216, "string": "Here, we assess whether our model succeeds to recognize non-compositional noun-compounds."}, {"id": 217, "string": "We used the compositionality dataset of Reddy et al."}, {"id": 218, "string": "(2011) which consists of 90 nouncompounds along with human judgments about their compositionality in a scale of 0-5, 0 being non-compositional and 5 being compositional."}, {"id": 219, "string": "For each noun-compound in the dataset, we predicted the 15 best paraphrases and analyzed the errors."}, {"id": 220, "string": "The most common error was predicting paraphrases for idiomatic compounds which may have a plausible concrete interpretation or which originated from one."}, {"id": 221, "string": "For example, it predicted that silver spoon is simply a spoon made of silver and that monkey business is a business that buys or raises monkeys."}, {"id": 222, "string": "In other cases, it seems that the strong prior on one constituent leads to ignoring the other, unrelated constituent, as in predicting \"wedding made of diamond\"."}, {"id": 223, "string": "Finally, the \"unrelated\" paraphrase was predicted for a few compounds, but those are not necessarily non-compositional (application form, head teacher)."}, {"id": 224, "string": "We conclude that the model does not address compositionality and suggest to apply it only to compositional compounds, which may be recognized using compositionality prediction methods as in Reddy et al."}, {"id": 225, "string": "(2011) ."}, {"id": 226, "string": "Conclusion We presented a new semi-supervised model for noun-compound paraphrasing."}, {"id": 227, "string": "The model differs from previous models by being trained to predict both a paraphrase given a noun-compound, and a missing constituent given the paraphrase and the other constituent."}, {"id": 228, "string": "This results in better generalization abilities, leading to improved performance in two noun-compound interpretation tasks."}, {"id": 229, "string": "In the future, we plan to take generalization one step further, and explore the possibility to use the biL-STM for generating completely new paraphrase templates unseen during training."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 17}, {"section": "Noun-compound Classification", "n": "2.1", "start": 18, "end": 28}, {"section": "Noun-compound Paraphrasing", "n": "2.2", "start": 29, "end": 49}, {"section": "Noun-compounds in other Tasks", "n": "2.3", "start": 50, "end": 58}, {"section": "Paraphrasing Model", "n": "3", "start": 59, "end": 61}, {"section": "Multi-task Reformulation", "n": "3.1", "start": 62, "end": 71}, {"section": "Training Data", "n": "3.2", "start": 72, "end": 92}, {"section": "Model", "n": "3.3", "start": 93, "end": 111}, {"section": "Qualitative Analysis", "n": "4", "start": 112, "end": 122}, {"section": "Evaluation: Noun-Compound Interpretation Tasks", "n": "5", "start": 123, "end": 125}, {"section": "Paraphrasing", "n": "5.1", "start": 126, "end": 177}, {"section": "Classification", "n": "5.2", "start": 178, "end": 212}, {"section": "Compositionality Analysis", "n": "6", "start": 213, "end": 225}, {"section": "Conclusion", "n": "7", "start": 226, "end": 229}], "figures": [{"filename": "../figure/image/1349-Table2-1.png", "caption": "Table 2: Results of the proposed method and the baselines on the SemEval 2013 task.", "page": 6, "bbox": {"x1": 117.6, "x2": 475.2, "y1": 62.4, "y2": 144.96}}, {"filename": "../figure/image/1349-Table3-1.png", "caption": "Table 3: Categories of false positive and false negative predictions along with their percentage.", "page": 6, "bbox": {"x1": 72.96, "x2": 289.44, "y1": 167.51999999999998, "y2": 315.36}}, {"filename": "../figure/image/1349-Figure1-1.png", "caption": "Figure 1: An illustration of the model predictions for w1 and p given the triplet (cake, made of, apple). The model predicts each component given the encoding of the other two components, successfully predicting \u2018apple\u2019 given \u2018cake made of [w1]\u2019, while predicting \u2018[w2] containing [w1]\u2019 for \u2018cake [p] apple\u2019.", "page": 2, "bbox": {"x1": 72.96, "x2": 524.16, "y1": 62.879999999999995, "y2": 223.2}}, {"filename": "../figure/image/1349-Table4-1.png", "caption": "Table 4: Classification results. For each dataset split, the top part consists of baseline methods and the bottom part of methods from this paper. The best performance in each part appears in bold.", "page": 7, "bbox": {"x1": 306.71999999999997, "x2": 529.4399999999999, "y1": 63.36, "y2": 323.03999999999996}}, {"filename": "../figure/image/1349-Table5-1.png", "caption": "Table 5: Examples of noun-compounds that were correctly classified by the integrated model while being incorrectly classified by distributional, along with top ranked indicative paraphrases.", "page": 8, "bbox": {"x1": 84.96, "x2": 496.32, "y1": 62.4, "y2": 177.12}}, {"filename": "../figure/image/1349-Table1-1.png", "caption": "Table 1: Examples of top ranked predicted components using the model: predicting the paraphrase given w1 and w2 (left), w1 given w2 and the paraphrase (middle), and w2 given w1 and the paraphrase (right).", "page": 4, "bbox": {"x1": 52.8, "x2": 548.16, "y1": 66.72, "y2": 175.2}}, {"filename": "../figure/image/1349-Figure2-1.png", "caption": "Figure 2: A t-SNE map of a sample of paraphrases, using the paraphrase vectors encoded by the biLSTM, for example bLS([w2] made of [w1]).", "page": 4, "bbox": {"x1": 78.72, "x2": 519.36, "y1": 207.84, "y2": 428.15999999999997}}]}