{
  "title": "A Unified Model for Extractive and Abstractive Summarization using Inconsistency Loss",
  "abstract": "We propose a unified model combining the strength of extractive and abstractive summarization. On the one hand, a simple extractive model can obtain sentence-level attention with high ROUGE scores but less readable. On the other hand, a more complicated abstractive model can obtain word-level dynamic attention to generate a more readable paragraph. In our model, sentence-level attention is used to modulate the word-level attention such that words in less attended sentences are less likely to be generated. Moreover, a novel inconsistency loss function is introduced to penalize the inconsistency between two levels of attentions. By end-to-end training our model with the inconsistency loss and original losses of extractive and abstractive models, we achieve state-of-theart ROUGE scores while being the most informative and readable summarization on the CNN/Daily Mail dataset in a solid human evaluation.",
  "text": [
    {
      "id": 0,
      "string": "Introduction Text summarization is the task of automatically condensing a piece of text to a shorter version while maintaining the important points."
    },
    {
      "id": 1,
      "string": "The ability to condense text information can aid many applications such as creating news digests, presenting search results, and generating reports."
    },
    {
      "id": 2,
      "string": "There are mainly two types of approaches: extractive and abstractive."
    },
    {
      "id": 3,
      "string": "Extractive approaches assemble summaries directly from the source text typically selecting one whole sentence at a time."
    },
    {
      "id": 4,
      "string": "In contrast, abstractive approaches can generate novel words and phrases not copied from the source text."
    },
    {
      "id": 5,
      "string": "Original Article: McDonald's says......"
    },
    {
      "id": 6,
      "string": "The company says it expects the new 'Artisan Grilled Chicken' to be in its more than 14,300 U.S. stores by the end of next week, in products including a new sandwich, as well as existing sandwiches, wraps and salads."
    },
    {
      "id": 7,
      "string": "It says the biggest change is the removal of sodium phosphates, which it said was used to keep the chicken moist, in favor of vegetable starch."
    },
    {
      "id": 8,
      "string": "The new recipe also does not use maltodextrin, which Mc-Donald's said is generally used as a sugar to increase browning or as a carrier for seasoning."
    },
    {
      "id": 9,
      "string": "Jessica Foust, director of culinary innovation at McDonald's, said the changes were made because customers said they want 'simple, clean ingredients' they are familiar with...... And Panera Bread has said it plans to purge artificial colors, flavors and preservatives from its food by 2016...... Extractive Approach: The company says it expects the new 'Artisan Grilled Chicken' to be in its more than 14,300 U.S. stores by the end of next week, in products including a new sandwich, as well as existing sandwiches, wraps and salads."
    },
    {
      "id": 10,
      "string": "It says the biggest change is the removal of sodium phosphates, which it said was used to keep the chicken moist, in favor of vegetable starch."
    },
    {
      "id": 11,
      "string": "The new recipe also does not use maltodextrin, which Mc-Donald's said is generally used as a sugar to increase browning or as a carrier for seasoning."
    },
    {
      "id": 12,
      "string": "Abstractive Approach: McDonald's says it expects the new 'Artisan Grilled Chicken' to be in its more than 14,300 U.S. stores by the end of next week."
    },
    {
      "id": 13,
      "string": "The company says the changes were made because customers said they want 'simple, clean ingredients' they are familiar with."
    },
    {
      "id": 14,
      "string": "McDonald's said it plans to purge artificial colors, flavors and preservatives from its food by 2016."
    },
    {
      "id": 15,
      "string": "Unified Approach: McDonald's says it expects the new 'Artisan Grilled Chicken' to be in its more than 14,300 U.S. stores by the end of next week, in products including a new sandwich, as well as existing sandwiches, wraps and salads."
    },
    {
      "id": 16,
      "string": "It says the biggest change is the removal of sodium phosphates."
    },
    {
      "id": 17,
      "string": "The new recipe also does not use maltodextrin, which McDonald's said is generally used as a sugar to increase browning or as a carrier for seasoning."
    },
    {
      "id": 18,
      "string": "Figure 1 : Comparison of extractive, abstractive, and our unified summaries on a news article."
    },
    {
      "id": 19,
      "string": "The extractive model picks most important but incoherent or not concise (see blue bold font) sentences."
    },
    {
      "id": 20,
      "string": "The abstractive summary is readable, concise but still loses or mistakes some facts (see red italics font)."
    },
    {
      "id": 21,
      "string": "The final summary rewritten from fragments (see underline font) has the advantages from both extractive (importance) and abstractive advantage (coherence (see green bold font))."
    },
    {
      "id": 22,
      "string": "Hence, abstractive summaries can be more coherent and concise than extractive summaries."
    },
    {
      "id": 23,
      "string": "Extractive approaches are typically simpler."
    },
    {
      "id": 24,
      "string": "They output the probability of each sentence to be selected into the summary."
    },
    {
      "id": 25,
      "string": "Many earlier works on summarization (Cheng and Lapata, 2016; Nallapati et al., 2016a Nallapati et al., , 2017 Narayan et al., 2017; Yasunaga et al., 2017) focus on extractive summarization."
    },
    {
      "id": 26,
      "string": "Among them, Nallapati et al."
    },
    {
      "id": 27,
      "string": "(2017) have achieved high ROUGE scores."
    },
    {
      "id": 28,
      "string": "On the other hand, abstractive approaches (Nallapati et al., 2016b; See et al., 2017; Paulus et al., 2017; Fan et al., 2017; typically involve sophisticated mechanism in order to paraphrase, generate unseen words in the source text, or even incorporate external knowledge."
    },
    {
      "id": 29,
      "string": "Neural networks (Nallapati et al., 2017; See et al., 2017) based on the attentional encoder-decoder model (Bahdanau et al., 2014) were able to generate abstractive summaries with high ROUGE scores but suffer from inaccurately reproducing factual details and an inability to deal with outof-vocabulary (OOV) words."
    },
    {
      "id": 30,
      "string": "Recently, See et al."
    },
    {
      "id": 31,
      "string": "(2017) propose a pointer-generator model which has the abilities to copy words from source text as well as generate unseen words."
    },
    {
      "id": 32,
      "string": "Despite recent progress in abstractive summarization, extractive approaches (Nallapati et al., 2017; Yasunaga et al., 2017) and lead-3 baseline (i.e., selecting the first 3 sentences) still achieve strong performance in ROUGE scores."
    },
    {
      "id": 33,
      "string": "We propose to explicitly take advantage of the strength of state-of-the-art extractive and abstractive summarization and introduced the following unified model."
    },
    {
      "id": 34,
      "string": "Firstly, we treat the probability output of each sentence from the extractive model (Nallapati et al., 2017) as sentence-level attention."
    },
    {
      "id": 35,
      "string": "Then, we modulate the word-level dynamic attention from the abstractive model (See et al., 2017) with sentence-level attention such that words in less attended sentences are less likely to be generated."
    },
    {
      "id": 36,
      "string": "In this way, extractive summarization mostly benefits abstractive summarization by mitigating spurious word-level attention."
    },
    {
      "id": 37,
      "string": "Secondly, we introduce a novel inconsistency loss function to encourage the consistency between two levels of attentions."
    },
    {
      "id": 38,
      "string": "The loss function can be computed without additional human annotation and has shown to ensure our unified model to be mutually beneficial to both extractive and abstractive summarization."
    },
    {
      "id": 39,
      "string": "On CNN/Daily Mail dataset, our unified model achieves state-of-theart ROUGE scores and outperforms a strong extractive baseline (i.e., lead-3)."
    },
    {
      "id": 40,
      "string": "Finally, to ensure the quality of our unified model, we conduct a solid human evaluation and confirm that our method significantly outperforms recent state-ofthe-art methods in informativity and readability."
    },
    {
      "id": 41,
      "string": "To summarize, our contributions are twofold: • We propose a unified model combining sentence-level and word-level attentions to take advantage of both extractive and abstractive summarization approaches."
    },
    {
      "id": 42,
      "string": "• We propose a novel inconsistency loss function to ensure our unified model to be mutually beneficial to both extractive and abstractive summarization."
    },
    {
      "id": 43,
      "string": "The unified model with inconsistency loss achieves the best ROUGE scores on CNN/Daily Mail dataset and outperforms recent state-of-the-art methods in informativity and readability on human evaluation."
    },
    {
      "id": 44,
      "string": "Related Work Text summarization has been widely studied in recent years."
    },
    {
      "id": 45,
      "string": "We first introduce the related works of neural-network-based extractive and abstractive summarization."
    },
    {
      "id": 46,
      "string": "Finally, we introduce a few related works with hierarchical attention mechanism."
    },
    {
      "id": 47,
      "string": "Extractive summarization."
    },
    {
      "id": 48,
      "string": "Kågebäck et al."
    },
    {
      "id": 49,
      "string": "(2014) and Yin and Pei (2015) use neural networks to map sentences into vectors and select sentences based on those vectors."
    },
    {
      "id": 50,
      "string": "Cheng and Lapata (2016) , Nallapati et al."
    },
    {
      "id": 51,
      "string": "(2016a) and Nallapati et al."
    },
    {
      "id": 52,
      "string": "(2017) use recurrent neural networks to read the article and get the representations of the sentences and article to select sentences."
    },
    {
      "id": 53,
      "string": "Narayan et al."
    },
    {
      "id": 54,
      "string": "(2017) utilize side information (i.e., image captions and titles) to help the sentence classifier choose sentences."
    },
    {
      "id": 55,
      "string": "Yasunaga et al."
    },
    {
      "id": 56,
      "string": "(2017) Figure 2: Our unified model combines the word-level and sentence-level attentions."
    },
    {
      "id": 57,
      "string": "Inconsistency occurs when word attention is high but sentence attention is low (see red arrow)."
    },
    {
      "id": 58,
      "string": "(Vinyals et al., 2015) into their models to deal with out-of-vocabulary (OOV) words."
    },
    {
      "id": 59,
      "string": "Chen et al."
    },
    {
      "id": 60,
      "string": "(2016) and See et al."
    },
    {
      "id": 61,
      "string": "(2017) restrain their models from attending to the same word to decrease repeated phrases in the generated summary."
    },
    {
      "id": 62,
      "string": "Paulus et al."
    },
    {
      "id": 63,
      "string": "(2017) use policy gradient on summarization and state out the fact that high ROUGE scores might still lead to low human evaluation scores."
    },
    {
      "id": 64,
      "string": "Fan et al."
    },
    {
      "id": 65,
      "string": "(2017) apply convolutional sequenceto-sequence model and design several new tasks for summarization."
    },
    {
      "id": 66,
      "string": "achieve high readability score on human evaluation using generative adversarial networks."
    },
    {
      "id": 67,
      "string": "Hierarchical attention."
    },
    {
      "id": 68,
      "string": "Attention mechanism was first proposed by Bahdanau et al."
    },
    {
      "id": 69,
      "string": "(2014) ."
    },
    {
      "id": 70,
      "string": "Yang et al."
    },
    {
      "id": 71,
      "string": "(2016) proposed a hierarchical attention mechanism for document classification."
    },
    {
      "id": 72,
      "string": "We adopt the method of combining sentence-level and word-level attention in Nallapati et al."
    },
    {
      "id": 73,
      "string": "(2016b) ."
    },
    {
      "id": 74,
      "string": "However, their sentence attention is dynamic, which means it will be different for each generated word."
    },
    {
      "id": 75,
      "string": "Whereas our sentence attention is fixed for all generated words."
    },
    {
      "id": 76,
      "string": "Inspired by the high performance of extractive summarization, we propose to use fixed sentence attention."
    },
    {
      "id": 77,
      "string": "Our model combines state-of-the-art extractive model (Nallapati et al., 2017) and abstractive model (See et al., 2017) by combining sentencelevel attention from the former and word-level attention from the latter."
    },
    {
      "id": 78,
      "string": "Furthermore, we design an inconsistency loss to enhance the cooperation between the extractive and abstractive models."
    },
    {
      "id": 79,
      "string": "Our Unified Model We propose a unified model to combine the strength of both state-of-the-art extractor (Nallapati et al., 2017) and abstracter (See et al., 2017) ."
    },
    {
      "id": 80,
      "string": "Before going into details of our model, we first define the tasks of the extractor and abstracter."
    },
    {
      "id": 81,
      "string": "Problem definition."
    },
    {
      "id": 82,
      "string": "The input of both extrac-tor and abstracter is a sequence of words w = [w 1 , w 2 , ..., w m , ...], where m is the word index."
    },
    {
      "id": 83,
      "string": "The sequence of words also forms a sequence of sentences s = [s 1 , s 2 , ..., s n , ...], where n is the sentence index."
    },
    {
      "id": 84,
      "string": "The m th word is mapped into the n(m) th sentence, where n(·) is the mapping function."
    },
    {
      "id": 85,
      "string": "The output of the extractor is the sentencelevel attention β = [β 1 , β 2 , ..., β n , ...], where β n is the probability of the n th sentence been extracted into the summary."
    },
    {
      "id": 86,
      "string": "On the other hand, our attention-based abstractor computes word-level attention α t = α t 1 , α t 2 , ..., α t m , ... dynamically while generating the t th word in the summary."
    },
    {
      "id": 87,
      "string": "The output of the abstracter is the summary text y = y 1 , y 2 , ..., y t , ... , where y t is t th word in the summary."
    },
    {
      "id": 88,
      "string": "In the following, we introduce the mechanism to combine sentence-level and word-level attentions in Sec."
    },
    {
      "id": 89,
      "string": "3.1."
    },
    {
      "id": 90,
      "string": "Next, we define the novel inconsistency loss that ensures extractor and abstracter to be mutually beneficial in Sec."
    },
    {
      "id": 91,
      "string": "3.2."
    },
    {
      "id": 92,
      "string": "We also give the details of our extractor in Sec."
    },
    {
      "id": 93,
      "string": "3.3 and our abstracter in Sec."
    },
    {
      "id": 94,
      "string": "3.4."
    },
    {
      "id": 95,
      "string": "Finally, our training procedure is described in Sec."
    },
    {
      "id": 96,
      "string": "3.5."
    },
    {
      "id": 97,
      "string": "Combining Attentions Pieces of evidence (e.g., Vaswani et al."
    },
    {
      "id": 98,
      "string": "(2017)) show that attention mechanism is very important for NLP tasks."
    },
    {
      "id": 99,
      "string": "Hence, we propose to explicitly combine the sentence-level β n and word-level α t m attentions by simple scalar multiplication and renormalization."
    },
    {
      "id": 100,
      "string": "The updated word attentionα t m isα t m = α t m × β n(m) m α t m × β n(m) ."
    },
    {
      "id": 101,
      "string": "(1) The multiplication ensures that only when both word-level α t m and sentence-level β n attentions are high, the updated word attentionα t m can be high."
    },
    {
      "id": 102,
      "string": "Since the sentence-level attention β n from the extractor already achieves high ROUGE GRU GRU GRU GRU GRU GRU GRU GRU GRU 1 2 3 4 5 6 7 8 9 GRU GRU GRU Sentence-level RNN Word-level RNN Sentence-Level Attention 0.9 0.2 0.5 Figure 3 : Architecture of the extractor."
    },
    {
      "id": 103,
      "string": "We treat the sigmoid output of each sentence as sentencelevel attention ∈ [0, 1]."
    },
    {
      "id": 104,
      "string": "scores, β n intuitively modulates the word-level attention α t m to mitigate spurious word-level attention such that words in less attended sentences are less likely to be generated (see Fig."
    },
    {
      "id": 105,
      "string": "2 )."
    },
    {
      "id": 106,
      "string": "As highlighted in Sec."
    },
    {
      "id": 107,
      "string": "3.4, the word-level attentionα t m significantly affects the decoding process of the abstracter."
    },
    {
      "id": 108,
      "string": "Hence, an updated word-level attention is our key to improve abstractive summarization."
    },
    {
      "id": 109,
      "string": "Inconsistency Loss Instead of only leveraging the complementary nature between sentence-level and word-level attentions, we would like to encourage these two-levels of attentions to be mostly consistent to each other during training as an intrinsic learning target for free (i.e., without additional human annotation)."
    },
    {
      "id": 110,
      "string": "Explicitly, we would like the sentence-level attention to be high when the word-level attention is high."
    },
    {
      "id": 111,
      "string": "Hence, we design the following inconsistency loss, L inc = − 1 T T t=1 log( 1 |K| m∈K α t m × β n(m) ), (2) where K is the set of top K attended words and T is the number of words in the summary."
    },
    {
      "id": 112,
      "string": "This implicitly encourages the distribution of the wordlevel attentions to be sharp and sentence-level attention to be high."
    },
    {
      "id": 113,
      "string": "To avoid the degenerated solution for the distribution of word attention to be one-hot and sentence attention to be high, we include the original loss functions for training the extractor ( L ext in Sec."
    },
    {
      "id": 114,
      "string": "3.3) and abstracter (L abs and L cov in Sec."
    },
    {
      "id": 115,
      "string": "3.4)."
    },
    {
      "id": 116,
      "string": "Note that Eq."
    },
    {
      "id": 117,
      "string": "1 is the only part that the extractor is interacting with the abstracter."
    },
    {
      "id": 118,
      "string": "Our proposed inconsistency loss facilitates our end-to-end trained unified model to be mutually beneficial to both the extractor and abstracter."
    },
    {
      "id": 119,
      "string": "Extractor Our extractor is inspired by Nallapati et al."
    },
    {
      "id": 120,
      "string": "(2017) ."
    },
    {
      "id": 121,
      "string": "The main difference is that our extractor does not need to obtain the final summary."
    },
    {
      "id": 122,
      "string": "It mainly needs to obtain a short list of important sentences with a high recall to further facilitate the abstractor."
    },
    {
      "id": 123,
      "string": "We first introduce the network architecture and the loss function."
    },
    {
      "id": 124,
      "string": "Finally, we define our ground truth important sentences to encourage high recall."
    },
    {
      "id": 125,
      "string": "Architecture."
    },
    {
      "id": 126,
      "string": "The model consists of a hierarchical bidirectional GRU which extracts sentence representations and a classification layer for predicting the sentence-level attention β n for each sentence (see Fig."
    },
    {
      "id": 127,
      "string": "3 )."
    },
    {
      "id": 128,
      "string": "Extractor loss."
    },
    {
      "id": 129,
      "string": "The following sigmoid cross entropy loss is used, L ext = − 1 N N n=1 (g n log β n + (1 − g n ) log(1 − β n )), (3) where g n ∈ {0, 1} is the ground-truth label for the n th sentence and N is the number of sentences."
    },
    {
      "id": 130,
      "string": "When g n = 1, it indicates that the n th sentence should be attended to facilitate abstractive summarization."
    },
    {
      "id": 131,
      "string": "Ground-truth label."
    },
    {
      "id": 132,
      "string": "The goal of our extractor is to extract sentences with high informativity, which means the extracted sentences should contain information that is needed to generate an abstractive summary as much as possible."
    },
    {
      "id": 133,
      "string": "To obtain the ground-truth labels g = {g n } n , first, we measure the informativity of each sentence s n in the article by computing the ROUGE-L recall score (Lin, 2004) between the sentence s n and the reference abstractive summaryŷ = {ŷ t } t ."
    },
    {
      "id": 134,
      "string": "Second, we sort the sentences by their informativity and select the sentence in the order of high to low informativity."
    },
    {
      "id": 135,
      "string": "We add one sentence at a time if the new sentence can increase the informativity of all the selected sentences."
    },
    {
      "id": 136,
      "string": "Finally, we obtain the ground-truth labels g and train our extractor by minimizing Eq."
    },
    {
      "id": 137,
      "string": "3."
    },
    {
      "id": 138,
      "string": "Note that our method is different from Nallapati et al."
    },
    {
      "id": 139,
      "string": "(2017) who aim to extract a final summary for an article so they use ROUGE F-1 score to select ground-truth sentences; while we focus on high informativity, hence, we use ROUGE recall score to obtain as much information as possible with respect to the reference summaryŷ."
    },
    {
      "id": 140,
      "string": "Abstracter The second part of our model is an abstracter that reads the article; then, generate a summary Figure 4 : Decoding mechanism in the abstracter."
    },
    {
      "id": 141,
      "string": "In the decoder step t, our updated word attentionα t is used to generate context vector h * (α t )."
    },
    {
      "id": 142,
      "string": "Hence, it updates the final word distribution P f inal ."
    },
    {
      "id": 143,
      "string": "word-by-word."
    },
    {
      "id": 144,
      "string": "We use the pointer-generator network proposed by See et al."
    },
    {
      "id": 145,
      "string": "(2017) and combine it with the extractor by combining sentence-level and word-level attentions (Sec."
    },
    {
      "id": 146,
      "string": "3.1)."
    },
    {
      "id": 147,
      "string": "Pointer-generator network."
    },
    {
      "id": 148,
      "string": "The pointergenerator network (See et al., 2017 ) is a specially designed sequence-to-sequence attentional model that can generate the summary by copying words in the article or generating words from a fixed vocabulary at the same time."
    },
    {
      "id": 149,
      "string": "The model contains a bidirectional LSTM which serves as an encoder to encode the input words w and a unidirectional LSTM which serves as a decoder to generate the summary y."
    },
    {
      "id": 150,
      "string": "For details of the network architecture, please refer to See et al."
    },
    {
      "id": 151,
      "string": "(2017) ."
    },
    {
      "id": 152,
      "string": "In the following, we describe how the updated word attentionα t affects the decoding process."
    },
    {
      "id": 153,
      "string": "Notations."
    },
    {
      "id": 154,
      "string": "We first define some notations."
    },
    {
      "id": 155,
      "string": "h e m is the encoder hidden state for the m th word."
    },
    {
      "id": 156,
      "string": "h d t is the decoder hidden state in step t. h * (α t ) = M mα t m × h e m is the context vector which is a function of the updated word attentionα t ."
    },
    {
      "id": 157,
      "string": "P vocab (h * (α t )) is the probability distribution over the fixed vocabulary before applying the copying mechanism."
    },
    {
      "id": 158,
      "string": "P vocab (h * (α t )) (4) = softmax(W 2 (W 1 [h d t , h * (α t )] + b 1 ) + b 2 ), where W 1 , W 2 , b 1 and b 2 are learnable parame- ters."
    },
    {
      "id": 159,
      "string": "P vocab = {P vocab w } w where P vocab w (h * (α t )) is the probability of word w being decoded."
    },
    {
      "id": 160,
      "string": "p gen (h * (α t )) ∈ [0, 1] is the generating probability (see Eq.8 in See et al."
    },
    {
      "id": 161,
      "string": "(2017) ) and 1 − p gen (h * (α t )) is the copying probability."
    },
    {
      "id": 162,
      "string": "Final word distribution."
    },
    {
      "id": 163,
      "string": "P f inal w (α t ) is the final probability of word w being decoded (i.e., y t = w)."
    },
    {
      "id": 164,
      "string": "It is related to the updated word attentionα t as follows (see Fig."
    },
    {
      "id": 165,
      "string": "4 ), P f inal w (α t ) = p gen (h * (α t ))P vocab w (h * (α t )) (5) + (1 − p gen (h * (α t ))) m:wm=wα t m ."
    },
    {
      "id": 166,
      "string": "Note that P f inal = {P f inal w } w is the probability distribution over the fixed vocabulary and out-ofvocabulary (OOV) words."
    },
    {
      "id": 167,
      "string": "Hence, OOV words can be decoded."
    },
    {
      "id": 168,
      "string": "Most importantly, it is clear from Eq."
    },
    {
      "id": 169,
      "string": "5 that P f inal w (α t ) is a function of the updated word attentionα t ."
    },
    {
      "id": 170,
      "string": "Finally, we train the abstracter to minimize the negative log-likelihood: L abs = − 1 T T t=1 log P f inal y t (α t ) , (6) whereŷ t is the t th token in the reference abstractive summary."
    },
    {
      "id": 171,
      "string": "Coverage mechanism."
    },
    {
      "id": 172,
      "string": "We also apply coverage mechanism (See et al., 2017) to prevent the abstracter from repeatedly attending to the same place."
    },
    {
      "id": 173,
      "string": "In each decoder step t, we calculate the coverage vector c t = t−1 t =0α t which indicates so far how much attention has been paid to every input word."
    },
    {
      "id": 174,
      "string": "The coverage vector c t will be used to calculate word attentionα t (see Eq.11 in See et al."
    },
    {
      "id": 175,
      "string": "(2017) )."
    },
    {
      "id": 176,
      "string": "Moreover, coverage loss L cov is calculated to directly penalize the repetition in updated word attentionα t : L cov = 1 T T t=1 M m=1 min(α t m , c t m ) ."
    },
    {
      "id": 177,
      "string": "(7) The objective function for training the abstracter with coverage mechanism is the weighted sum of negative log-likelihood and coverage loss."
    },
    {
      "id": 178,
      "string": "Training Procedure We first pre-train the extractor by minimizing L ext in Eq."
    },
    {
      "id": 179,
      "string": "3 and the abstracter by minimizing L abs and L cov in Eq."
    },
    {
      "id": 180,
      "string": "6 and Eq."
    },
    {
      "id": 181,
      "string": "7, respectively."
    },
    {
      "id": 182,
      "string": "When pre-training, the abstracter takes ground-truth extracted sentences (i.e., sentences with g n = 1) as input."
    },
    {
      "id": 183,
      "string": "To combine the extractor and abstracter, we proposed two training settings : (1) two-stages training and (2) end-to-end training."
    },
    {
      "id": 184,
      "string": "Two-stages training."
    },
    {
      "id": 185,
      "string": "In this setting, we view the sentence-level attention β from the pre-trained extractor as hard attention."
    },
    {
      "id": 186,
      "string": "The extractor becomes a classifier to select sentences with high attention (i.e., β n > threshold)."
    },
    {
      "id": 187,
      "string": "We simply combine the extractor and abstracter by feeding the extracted sentences to the abstracter."
    },
    {
      "id": 188,
      "string": "Note that we finetune the abstracter since the input text becomes extractive summary which is obtained from the extractor."
    },
    {
      "id": 189,
      "string": "End-to-end training."
    },
    {
      "id": 190,
      "string": "For end-to-end training, the sentence-level attention β is soft attention and will be combined with the word-level attention α t as described in Sec."
    },
    {
      "id": 191,
      "string": "3.1."
    },
    {
      "id": 192,
      "string": "We end-to-end train the extractor and abstracter by minimizing four loss functions: L ext , L abs , L cov , as well as L inc in Eq."
    },
    {
      "id": 193,
      "string": "2."
    },
    {
      "id": 194,
      "string": "The final loss is as below: L e2e = λ 1 L ext + λ 2 L abs + λ 3 L cov + λ 4 L inc , (8) where λ 1 , λ 2 , λ 3 , λ 4 are hyper-parameters."
    },
    {
      "id": 195,
      "string": "In our experiment, we give L ext a bigger weight (e.g., λ 1 = 5) when end-to-end training with L inc since we found that L inc is relatively large such that the extractor tends to ignore L ext ."
    },
    {
      "id": 196,
      "string": "Experiments We introduce the dataset and implementation details of our method evaluated in our experiments."
    },
    {
      "id": 197,
      "string": "Dataset We evaluate our models on the CNN/Daily Mail dataset (Hermann et al., 2015; Nallapati et al., 2016b; See et al., 2017) which contains news stories in CNN and Daily Mail websites."
    },
    {
      "id": 198,
      "string": "Each article in this dataset is paired with one humanwritten multi-sentence summary."
    },
    {
      "id": 199,
      "string": "This dataset has two versions: anonymized and non-anonymized."
    },
    {
      "id": 200,
      "string": "The former contains the news stories with all the named entities replaced by special tokens (e.g., @entity2); while the latter contains the raw text of each news story."
    },
    {
      "id": 201,
      "string": "We follow See et al."
    },
    {
      "id": 202,
      "string": "(2017) and obtain the non-anonymized version of this dataset which has 287,113 training pairs, 13,368 validation pairs and 11,490 test pairs."
    },
    {
      "id": 203,
      "string": "Implementation Details We train our extractor and abstracter with 128dimension word embeddings and set the vocabulary size to 50k for both source and target text."
    },
    {
      "id": 204,
      "string": "We follow Nallapati et al."
    },
    {
      "id": 205,
      "string": "(2017) and See et al."
    },
    {
      "id": 206,
      "string": "(2017) and set the hidden dimension to 200 and 256 for the extractor and abstracter, respectively."
    },
    {
      "id": 207,
      "string": "We use Adagrad optimizer (Duchi et al., 2011) and apply early stopping based on the validation set."
    },
    {
      "id": 208,
      "string": "In the testing phase, we limit the length of the summary to 120."
    },
    {
      "id": 209,
      "string": "Pre-training."
    },
    {
      "id": 210,
      "string": "We use learning rate 0.15 when pretraining the extractor and abstracter."
    },
    {
      "id": 211,
      "string": "For the extractor, we limit both the maximum number of sentences per article and the maximum number of tokens per sentence to 50 and train the model for 27k iterations with the batch size of 64."
    },
    {
      "id": 212,
      "string": "For the abstracter, it takes ground-truth extracted sentences (i.e., sentences with g n = 1) as input."
    },
    {
      "id": 213,
      "string": "We limit the length of the source text to 400 and the length of the summary to 100 and use the batch size of 16."
    },
    {
      "id": 214,
      "string": "We train the abstracter without coverage mechanism for 88k iterations and continue training for 1k iterations with coverage mechanism (L abs : L cov = 1 : 1)."
    },
    {
      "id": 215,
      "string": "Two-stages training."
    },
    {
      "id": 216,
      "string": "The abstracter takes extracted sentences with β n > 0.5, where β is obtained from the pre-trained extractor, as input during two-stages training."
    },
    {
      "id": 217,
      "string": "We finetune the abstracter for 10k iterations."
    },
    {
      "id": 218,
      "string": "End-to-end training."
    },
    {
      "id": 219,
      "string": "During end-to-end training, we will minimize four loss functions (Eq."
    },
    {
      "id": 220,
      "string": "8) with λ 1 = 5 and λ 2 = λ 3 = λ 4 = 1."
    },
    {
      "id": 221,
      "string": "We set K to 3 for computing L inc ."
    },
    {
      "id": 222,
      "string": "Due to the limitation of the memory, we reduce the batch size to 8 and thus use a smaller learning rate 0.01 for stability."
    },
    {
      "id": 223,
      "string": "The abstracter here reads the whole article."
    },
    {
      "id": 224,
      "string": "Hence, we increase the maximum length of source text to 600."
    },
    {
      "id": 225,
      "string": "We end-to-end train the model for 50k iterations."
    },
    {
      "id": 226,
      "string": "Results Our unified model not only generates an abstractive summary but also extracts the important sentences in an article."
    },
    {
      "id": 227,
      "string": "Our goal is that both of the two types of outputs can help people to read and understand an article faster."
    },
    {
      "id": 228,
      "string": "Hence, in this section, we evaluate the results of our extractor in Sec."
    },
    {
      "id": 229,
      "string": "5.1 and unified model in Sec."
    },
    {
      "id": 230,
      "string": "5.2."
    },
    {
      "id": 231,
      "string": "Furthermore, in Sec."
    },
    {
      "id": 232,
      "string": "5.3, we perform human evaluation and show that our model can provide a better abstractive summary than other baselines."
    },
    {
      "id": 233,
      "string": "Results of Extracted Sentences To evaluate whether our extractor obtains enough information for the abstracter, we use full-length ROUGE recall scores 1 between the extracted sentences and reference abstractive summary."
    },
    {
      "id": 234,
      "string": "High ROUGE recall scores can be obtained if the extracted sentences include more words or sequences overlapping with the reference abstractive summary."
    },
    {
      "id": 235,
      "string": "For each article, we select sentences with the sentence probabilities β greater than 0.5."
    },
    {
      "id": 236,
      "string": "We show the results of the ground-truth sentence labels (Sec."
    },
    {
      "id": 237,
      "string": "3.3) and our models on the  test set of the CNN/Daily Mail dataset in Table  1 ."
    },
    {
      "id": 238,
      "string": "Note that the ground-truth extracted sentences can't get ROUGE recall scores of 100 because reference summary is abstractive and may contain some words and sequences that are not in the article."
    },
    {
      "id": 239,
      "string": "Our extractor performs the best when end-toend trained with inconsistency loss."
    },
    {
      "id": 240,
      "string": "Results of Abstractive Summarization We use full-length ROUGE-1, ROUGE-2 and ROUGE-L F-1 scores to evaluate the generated summaries."
    },
    {
      "id": 241,
      "string": "We compare our models (two-stage and end-to-end) with state-of-the-art abstractive summarization models (Nallapati et al., 2016b; Paulus et al., 2017; See et al., 2017; and a strong lead-3 baseline which directly uses the first three article sentences as the summary."
    },
    {
      "id": 242,
      "string": "Due to the writing style of news articles, the most important information is often written at the beginning of an article which makes lead-3 a strong baseline."
    },
    {
      "id": 243,
      "string": "The results of ROUGE F-1 scores are shown in Table 2 ."
    },
    {
      "id": 244,
      "string": "We prove that with help of the extractor, our unified model can outperform pointer-generator (the third row in Table 2) even with two-stages training (the fifth row in Table 2 )."
    },
    {
      "id": 245,
      "string": "After end-to-end training without inconsistency loss, our method already achieves better ROUGE scores by cooperating with each other."
    },
    {
      "id": 246,
      "string": "Moreover, our model end-to-end trained with inconsistency loss achieves state-of-the-art ROUGE scores and exceeds lead-3 baseline."
    },
    {
      "id": 247,
      "string": "In order to quantify the effect of inconsistency loss, we design a metric -inconsistency rate R inc -to measure the inconsistency for each generated summary."
    },
    {
      "id": 248,
      "string": "For each decoder step t, if the word with maximum attention belongs to a sentence with low attention (i.e., β n(argmax(α t )) < mean(β)), we define this step as an inconsistent step t inc ."
    },
    {
      "id": 249,
      "string": "The inconsistency rate R inc is then defined as the percentage of the inconsistent steps in the summary."
    },
    {
      "id": 250,
      "string": "R inc = Count(t inc ) T , (9) where T is the length of the summary."
    },
    {
      "id": 251,
      "string": "The average inconsistency rates on test set are shown in Table 4 ."
    },
    {
      "id": 252,
      "string": "Our inconsistency loss significantly decrease R inc from about 20% to 4%."
    },
    {
      "id": 253,
      "string": "An example of inconsistency improvement is shown in Fig."
    },
    {
      "id": 254,
      "string": "5 ."
    },
    {
      "id": 255,
      "string": "Method informativity conciseness readability DeepRL (Paulus et al., 2017) 3.23 2.97 2.85 pointer-generator (See et al., 2017) 3.18 3.36 3.47 GAN  3 Figure 5 : Visualizing the consistency between sentence and word attentions on the original article."
    },
    {
      "id": 256,
      "string": "We highlight word (bold font) and sentence (underline font) attentions."
    },
    {
      "id": 257,
      "string": "We compare our methods trained with and without inconsistency loss."
    },
    {
      "id": 258,
      "string": "Inconsistent fragments (see red bold font) occur when trained without the inconsistency loss."
    },
    {
      "id": 259,
      "string": "Human Evaluation We perform human evaluation on Amazon Mechanical Turk (MTurk) 2 to evaluate the informativity, conciseness and readability of the summaries."
    },
    {
      "id": 260,
      "string": "We compare our best model (end2end with inconsistency loss) with pointer-generator (See et al., 2017) , generative adversarial network ) and deep reinforcement model (Paulus et al., 2017) ."
    },
    {
      "id": 261,
      "string": "For these three models, we use the test set outputs provided by the authors 3 ."
    },
    {
      "id": 262,
      "string": "2 https://www.mturk.com/ 3 https://github.com/abisee/ pointer-generator and https://likicode.com for the first two."
    },
    {
      "id": 263,
      "string": "For DeepRL, we asked through email."
    },
    {
      "id": 264,
      "string": "We randomly pick 100 examples in the test set."
    },
    {
      "id": 265,
      "string": "All generated summaries are re-capitalized and de-tokenized."
    },
    {
      "id": 266,
      "string": "Since Paulus et al."
    },
    {
      "id": 267,
      "string": "(2017) trained their model on anonymized data, we also recover the anonymized entities and numbers of their outputs."
    },
    {
      "id": 268,
      "string": "We show the article and 6 summaries (reference summary, 4 generated summaries and a random summary) to each human evaluator."
    },
    {
      "id": 269,
      "string": "The random summary is a reference summary randomly picked from other articles and is used as a trap."
    },
    {
      "id": 270,
      "string": "We show the instructions of three different aspects as: (1) Informativity: how well does the summary capture the important parts of the article?"
    },
    {
      "id": 271,
      "string": "(2) Conciseness: is the summary clear enough to explain everything without being redundant?"
    },
    {
      "id": 272,
      "string": "(3) Readability: how well-written (fluent and grammatical) the summary is?"
    },
    {
      "id": 273,
      "string": "The user interface of our human evaluation is shown in the supplementary material."
    },
    {
      "id": 274,
      "string": "We ask the human evaluator to evaluate each summary by scoring the three aspects with 1 to 5 score (higher the better)."
    },
    {
      "id": 275,
      "string": "We reject all the evaluations that score the informativity of the random summary as 3, 4 and 5."
    },
    {
      "id": 276,
      "string": "By using this trap mechanism, we can ensure a much better quality of our human evaluation."
    },
    {
      "id": 277,
      "string": "For each example, we first ask 5 human evaluators to evaluate."
    },
    {
      "id": 278,
      "string": "However, for those articles that are too long, which are always skipped by the evaluators, it is hard to collect 5 reliable evaluations."
    },
    {
      "id": 279,
      "string": "Hence, we collect at least 3 evaluations for every example."
    },
    {
      "id": 280,
      "string": "For each summary, we average the scores over different human evaluators."
    },
    {
      "id": 281,
      "string": "The results are shown in Table 3 ."
    },
    {
      "id": 282,
      "string": "The reference summaries get the best score on conciseness since the recent abstractive models tend to copy sentences from the input articles."
    },
    {
      "id": 283,
      "string": "However, our model learns well to select important information and form complete sentences so we even get slightly better scores on informativity and readability than the reference summaries."
    },
    {
      "id": 284,
      "string": "We show a typical example of our model comparing with other state-of-Original article (truncated): A chameleon balances carefully on a branch, waiting calmly for its prey... except that if you look closely, you will see that this picture is not all that it seems."
    },
    {
      "id": 285,
      "string": "For the 'creature' poised to pounce is not a colourful species of lizard but something altogether more human."
    },
    {
      "id": 286,
      "string": "Featuring two carefully painted female models, it is a clever piece of sculpture designed to create an amazing illusion."
    },
    {
      "id": 287,
      "string": "It is the work of Italian artist Johannes Stoetter."
    },
    {
      "id": 288,
      "string": "Scroll down for video."
    },
    {
      "id": 289,
      "string": "Can you see us?"
    },
    {
      "id": 290,
      "string": "Italian artist Johannes Stoetter has painted two naked women to look like a chameleon."
    },
    {
      "id": 291,
      "string": "The 37-year-old has previously transformed his models into frogs and parrots but this may be his most intricate and impressive piece to date."
    },
    {
      "id": 292,
      "string": "Stoetter daubed water-based body paint on the naked models to create the multicoloured effect, then intertwined them to form the shape of a chameleon."
    },
    {
      "id": 293,
      "string": "To complete the deception, the models rested on a bench painted to match their skin and held the green branch in the air beneath them."
    },
    {
      "id": 294,
      "string": "Stoetter can take weeks to plan one of his pieces and hours to paint it."
    },
    {
      "id": 295,
      "string": "Speaking about The Chameleon, he said: 'I worked about four days to design the motif bigger and paint it with colours."
    },
    {
      "id": 296,
      "string": "The body painting took me about six hours with the help of an assistant."
    },
    {
      "id": 297,
      "string": "I covered the hair with natural clay to make the heads look bald.'"
    },
    {
      "id": 298,
      "string": "Camouflage job: A few finishing touches are applied to the two naked models to complete the transformation."
    },
    {
      "id": 299,
      "string": "'There are different difficulties on different levels as in every work, but I think that my passion and love to my work is so big, that I figure out a way to deal with difficulties."
    },
    {
      "id": 300,
      "string": "My main inspirations are nature, my personal life-philosophy, every-day-life and people themselves.'"
    },
    {
      "id": 301,
      "string": "However, the finished result existed only briefly before the models were able to get up and wash the paint off with just a video and some photographs to record it."
    },
    {
      "id": 302,
      "string": "(...) Figure 6 : Typical Comparison."
    },
    {
      "id": 303,
      "string": "Our model attended at the most important information (blue bold font) matching well with the reference summary; while other state-of-the-art methods generate repeated or less important information (red italic font)."
    },
    {
      "id": 304,
      "string": "the-art methods in Fig."
    },
    {
      "id": 305,
      "string": "6 ."
    },
    {
      "id": 306,
      "string": "More examples (5 using CNN/Daily Mail news articles and 3 using nonnews articles as inputs) are provided in the supplementary material."
    },
    {
      "id": 307,
      "string": "Conclusion We propose a unified model combining the strength of extractive and abstractive summarization."
    },
    {
      "id": 308,
      "string": "Most importantly, a novel inconsistency loss function is introduced to penalize the inconsistency between two levels of attentions."
    },
    {
      "id": 309,
      "string": "The inconsistency loss enables extractive and abstractive summarization to be mutually beneficial."
    },
    {
      "id": 310,
      "string": "By end-to-end training of our model, we achieve the best ROUGE-recall and ROUGE while being the most informative and readable summarization on the CNN/Daily Mail dataset in a solid human evaluation."
    }
  ],
  "headers": [
    {
      "section": "Introduction",
      "n": "1",
      "start": 0,
      "end": 43
    },
    {
      "section": "Related Work",
      "n": "2",
      "start": 44,
      "end": 78
    },
    {
      "section": "Our Unified Model",
      "n": "3",
      "start": 79,
      "end": 96
    },
    {
      "section": "Combining Attentions",
      "n": "3.1",
      "start": 97,
      "end": 108
    },
    {
      "section": "Inconsistency Loss",
      "n": "3.2",
      "start": 109,
      "end": 118
    },
    {
      "section": "Extractor",
      "n": "3.3",
      "start": 119,
      "end": 139
    },
    {
      "section": "Abstracter",
      "n": "3.4",
      "start": 140,
      "end": 177
    },
    {
      "section": "Training Procedure",
      "n": "3.5",
      "start": 178,
      "end": 195
    },
    {
      "section": "Experiments",
      "n": "4",
      "start": 196,
      "end": 196
    },
    {
      "section": "Dataset",
      "n": "4.1",
      "start": 197,
      "end": 202
    },
    {
      "section": "Implementation Details",
      "n": "4.2",
      "start": 203,
      "end": 225
    },
    {
      "section": "Results",
      "n": "5",
      "start": 226,
      "end": 232
    },
    {
      "section": "Results of Extracted Sentences",
      "n": "5.1",
      "start": 233,
      "end": 239
    },
    {
      "section": "Results of Abstractive Summarization",
      "n": "5.2",
      "start": 240,
      "end": 258
    },
    {
      "section": "Human Evaluation",
      "n": "5.3",
      "start": 259,
      "end": 306
    },
    {
      "section": "Conclusion",
      "n": "6",
      "start": 307,
      "end": 310
    }
  ],
  "figures": [
    {
      "filename": "../figure/image/1352-Figure1-1.png",
      "caption": "Figure 1: Comparison of extractive, abstractive, and our unified summaries on a news article. The extractive model picks most important but incoherent or not concise (see blue bold font) sentences. The abstractive summary is readable, concise but still loses or mistakes some facts (see red italics font). The final summary rewritten from fragments (see underline font) has the advantages from both extractive (importance) and abstractive advantage (coherence (see green bold font)).",
      "page": 0,
      "bbox": {
        "x1": 306.71999999999997,
        "x2": 535.1999999999999,
        "y1": 221.76,
        "y2": 486.24
      }
    },
    {
      "filename": "../figure/image/1352-Table1-1.png",
      "caption": "Table 1: ROUGE recall scores of the extracted sentences. pre-trained indicates the extractor trained on the ground-truth labels. end2end indicates the extractor after end-to-end training with the abstracter. Note that ground-truth labels show the upper-bound performance since the reference summary to calculate ROUGE-recall is abstractive. All our ROUGE scores have a 95% confidence interval with at most ±0.33.",
      "page": 6,
      "bbox": {
        "x1": 134.88,
        "x2": 463.2,
        "y1": 62.879999999999995,
        "y2": 135.35999999999999
      }
    },
    {
      "filename": "../figure/image/1352-Table2-1.png",
      "caption": "Table 2: ROUGE F-1 scores of the generated abstractive summaries on the CNN/Daily Mail test set. Our two-stages model outperforms pointer-generator model on ROUGE-1 and ROUGE-2. In addition, our model trained end-to-end with inconsistency loss exceeds the lead-3 baseline. All our ROUGE scores have a 95% confidence interval with at most ±0.24. ‘∗’ indicates the model is trained and evaluated on the anonymized dataset and thus is not strictly comparable with ours.",
      "page": 6,
      "bbox": {
        "x1": 120.0,
        "x2": 477.12,
        "y1": 219.84,
        "y2": 344.15999999999997
      }
    },
    {
      "filename": "../figure/image/1352-Figure2-1.png",
      "caption": "Figure 2: Our unified model combines the word-level and sentence-level attentions. Inconsistency occurs when word attention is high but sentence attention is low (see red arrow).",
      "page": 2,
      "bbox": {
        "x1": 74.39999999999999,
        "x2": 523.1999999999999,
        "y1": 66.24,
        "y2": 159.35999999999999
      }
    },
    {
      "filename": "../figure/image/1352-Table4-1.png",
      "caption": "Table 4: Inconsistency rate of our end-to-end trained model with and without inconsistency loss.",
      "page": 7,
      "bbox": {
        "x1": 113.75999999999999,
        "x2": 248.16,
        "y1": 185.76,
        "y2": 228.95999999999998
      }
    },
    {
      "filename": "../figure/image/1352-Figure5-1.png",
      "caption": "Figure 5: Visualizing the consistency between sentence and word attentions on the original article. We highlight word (bold font) and sentence (underline font) attentions. We compare our methods trained with and without inconsistency loss. Inconsistent fragments (see red bold font) occur when trained without the inconsistency loss.",
      "page": 7,
      "bbox": {
        "x1": 72.0,
        "x2": 290.4,
        "y1": 275.52,
        "y2": 450.24
      }
    },
    {
      "filename": "../figure/image/1352-Table3-1.png",
      "caption": "Table 3: Comparing human evaluation results with state-of-the-art methods.",
      "page": 7,
      "bbox": {
        "x1": 118.56,
        "x2": 478.08,
        "y1": 62.879999999999995,
        "y2": 145.92
      }
    },
    {
      "filename": "../figure/image/1352-Figure6-1.png",
      "caption": "Figure 6: Typical Comparison. Our model attended at the most important information (blue bold font) matching well with the reference summary; while other state-of-the-art methods generate repeated or less important information (red italic font).",
      "page": 8,
      "bbox": {
        "x1": 72.0,
        "x2": 526.0799999999999,
        "y1": 62.879999999999995,
        "y2": 336.0
      }
    },
    {
      "filename": "../figure/image/1352-Figure4-1.png",
      "caption": "Figure 4: Decoding mechanism in the abstracter. In the decoder step t, our updated word attention α̂t is used to generate context vector h∗(α̂t). Hence, it updates the final word distribution Pfinal.",
      "page": 4,
      "bbox": {
        "x1": 72.48,
        "x2": 290.4,
        "y1": 64.8,
        "y2": 157.92
      }
    }
  ]
}