{"title": "SciDTB: Discourse Dependency TreeBank for Scientific Abstracts", "abstract": "Annotation corpus for discourse relations benefits NLP tasks such as machine translation and question answering. In this paper, we present SciDTB, a domainspecific discourse treebank annotated on scientific articles. Different from widelyused RST-DT and PDTB, SciDTB uses dependency trees to represent discourse structure, which is flexible and simplified to some extent but do not sacrifice structural integrity. We discuss the labeling framework, annotation workflow and some statistics about SciDTB. Furthermore, our treebank is made as a benchmark for evaluating discourse dependency parsers, on which we provide several baselines as fundamental work.", "text": [{"id": 0, "string": "Introduction Discourse relation depicts how the text spans in a text relate to each other."}, {"id": 1, "string": "These relations can be categorized into different types according to semantics, logic or writer's intention."}, {"id": 2, "string": "Annotations of such discourse relations can benefit many down-stream NLP tasks including machine translation  and automatic summarization (Gerani et al., 2014) ."}, {"id": 3, "string": "Several discourse corpora have been proposed in previous work, grounded with various discourse theories."}, {"id": 4, "string": "Among them Rhetorical Structure Theory TreeBank (RST-DT) (Carlson et al., 2003) and Penn Discourse TreeBank (PDTB) (Prasad et al., 2007) are the most widely-used resources."}, {"id": 5, "string": "PDTB focuses on shallow discourse relations between two arguments and ignores the whole organization."}, {"id": 6, "string": "RST-DT based on Rhetorical Structure Theory (RST) (Mann and Thompson, 1988) represents a text into a hierarchical discourse tree."}, {"id": 7, "string": "Though RST-DT provides more comprehensive discourse information, its limitations including the introduction of intermediate nodes and absence of nonprojective structures bring the annotation and parsing complexity."}, {"id": 8, "string": "Li et al."}, {"id": 9, "string": "(2014) and Yoshida et al."}, {"id": 10, "string": "(2014) both realized the problems of RST-DT and introduced dependency structures into discourse representation."}, {"id": 11, "string": "Stede et al."}, {"id": 12, "string": "(2016) adopted dependency tree format to compare RST structure and Segmented Discourse Representation Theory(SDRT) (Lascarides and Asher, 2008) structure for a corpus of short texts."}, {"id": 13, "string": "Their discourse dependency framework is adapted from syntactic dependency structure (Hudson, 1984; B\u00f6hmov\u00e1 et al., 2003) , with words replaced by elementary discourse units (EDUs)."}, {"id": 14, "string": "Binary discourse relations are represented from dominant EDU (called \"head\") to subordinate EDU (called \"dependent\"), which makes non-projective structure possible."}, {"id": 15, "string": "However, Li et al."}, {"id": 16, "string": "(2014) and Yoshida et al."}, {"id": 17, "string": "(2014) mainly focused on the definition of discourse dependency structure and directly transformed constituency trees in RST-DT into dependency trees."}, {"id": 18, "string": "On the one hand, they only simply treated the transformation ambiguity, while constituency structures and dependency structures did not correspond one-toone."}, {"id": 19, "string": "On the other hand, the transformed corpus still did not contain non-projective dependency trees, though \"crossed dependencies\" actually exist in the real flexible discourse structures (Wolf and Gibson, 2005) ."}, {"id": 20, "string": "In such case, it is essential to construct a discourse dependency treebank from scratch instead of through automatically converting from the constituency structures."}, {"id": 21, "string": "In this paper, we construct the discourse dependency corpus SciDTB 1 ."}, {"id": 22, "string": "based on scientific abstracts, with the reference to the discourse de-pendency representation in Li et al."}, {"id": 23, "string": "(2014) ."}, {"id": 24, "string": "We choose scientific abstracts as the corpus for two reasons."}, {"id": 25, "string": "First, we observe that when long news articles in RST-DT have several paragraphs, the discourse relations between paragraphs are very loose and their annotations are not so meaningful."}, {"id": 26, "string": "Thus, short texts with obvious logics become our preference."}, {"id": 27, "string": "Here, we choose scientific abstracts from ACL Anthology 2 which are usually composed of one passage and have strong logics."}, {"id": 28, "string": "Second, we prefer to conduct domain-specific discourse annotation."}, {"id": 29, "string": "RST-DT and PDTB are both constructed on news articles, which are unspecific in domain coverage."}, {"id": 30, "string": "We choose the scientific domain that is more specific and can benefit further academic applications such as automatic summarization and translation."}, {"id": 31, "string": "Furthermore, our treebank SciDTB can be made as a benchmark for evaluating discourse parsers."}, {"id": 32, "string": "Three baselines are provided as fundamental work."}, {"id": 33, "string": "Annotation Framework In this section, we describe two key aspects of our annotation framework, including elementary discourse units (EDU) and discourse relations."}, {"id": 34, "string": "Elementary Discourse Units We first need to divide a passage into nonoverlapping text spans, which are named elementary discourse units (EDUs)."}, {"id": 35, "string": "We follow the criterion of Polanyi (1988) and Irmer (2011) which treats clauses as EDUs."}, {"id": 36, "string": "However, since a discourse unit is a semantic concept but a clause is defined syntactically, in some cases segmentation by clauses is still not the most proper strategy."}, {"id": 37, "string": "In practice, we refer to the guidelines defined by (Carlson and Marcu, 2001) ."}, {"id": 38, "string": "For example, subjective clauses, objective clauses of non-attributive verbs and verb complement clauses are not segmented."}, {"id": 39, "string": "Nominal postmodifiers with predicates are treated as EDUs."}, {"id": 40, "string": "Strong discourse cues such as \"despite\" and \"because of \" starts a new EDU no matter they are followed by a clause or a phrase."}, {"id": 41, "string": "We give an EDU segmentation example as follows."}, {"id": 42, "string": "It is noted, as in Example 1, there are EDUs which are broken into two parts (in bold) by relative clauses or nominal postmodifiers."}, {"id": 43, "string": "Like RST, we connect the two parts by a pseudo-relation type Same-unit to represent their integrity."}, {"id": 44, "string": "[Despite bilingual embeddings success,][the contextual information][which is of critical Discourse Relations A discourse relation is defined as tri-tuple (h, d, r), where h means the head EDU, d is the dependent EDU, and r defines the relation category between h and d. For a discourse relation, head EDU is defined as the unit with essential information and dependent EDU with supportive content."}, {"id": 45, "string": "Here, we follow Carlson and Marcu (2001) to adopt deletion test in the determination of head and dependent."}, {"id": 46, "string": "If one unit in a binary relation pair is deleted but the whole meaning can still be almost understood from the other unit, the deleted unit is treated as dependent and the other one as the head."}, {"id": 47, "string": "For the relation categories, we mainly refer to the work of (Carlson and Marcu, 2001) and (Bunt and Prasad, 2016) ."}, {"id": 48, "string": "Table 1 presents the discourse relation set of SciDTB, which are not explained detailedly one by one due to space limitation."}, {"id": 49, "string": "Through investigation of scientific abstracts, we define 17 coarse-grained relation types and 26 fine-grained relations for SciDTB."}, {"id": 50, "string": "It is noted that we make some modifications to adapt to the scientific domain."}, {"id": 51, "string": "For example, In SciDTB, Background relation is divided into three For example, entity tags in Wikipedia data define some word boundaries."}, {"id": 52, "string": "In this paper we adopt partial-label learning with conditional random fields to make use of this knowledge for semi-supervised Chinese word segmentation."}, {"id": 53, "string": "The basic idea of partial-label learning is to optimize a cost function that marginalizes the probability mass in the constrained space that encodes this knowledge."}, {"id": 54, "string": "By integrating some domain adaptation techniques, such as EasyAdapt, our result reaches an F-measure of 95.98 % on the CTB-6 corpus."}, {"id": 55, "string": "subtypes: Related, Goal and General, because the background description in scientific abstracts usually has more different intents."}, {"id": 56, "string": "Meanwhile, for attribution relation we treat the attributive content rather than act as head, which is contrary to that defined in (Carlson and Marcu, 2001) , because scientific facts or research arguments mentioned in attributive content are more important in abstracts."}, {"id": 57, "string": "For some symmetric discourse relations such as joint and comparison, where two connected EDUs are equally important and have interchangeable semantic roles, we follow the strategy as (Li et al., 2014) and treat the preceding EDU as the head."}, {"id": 58, "string": "Another issue on coherence relations is about polynary relations which involve more than two EDUs."}, {"id": 59, "string": "The first scenario is that one EDU dominates a set of posterior EDUs as its member."}, {"id": 60, "string": "In this case, we annotate binary relations from head EDU to each member EDU with the same relation."}, {"id": 61, "string": "The second scenario is that several EDUs are of equal importance in a polynary relation."}, {"id": 62, "string": "For this case, we link each former EDU to its neighboring EDU with the same relation, forming a relation chain similar to \"right-heavy\" binarization transformation in (Morey et al., 2017) ."}, {"id": 63, "string": "By assuring that each EDU has one and only one head EDU, we can obtain a dependency tree for each scientific abstract."}, {"id": 64, "string": "An example of dependency annotation is shown in Figure 1 ."}, {"id": 65, "string": "Corpus Construction Following the annotation framework, we collected 798 abstracts from ACL anthology and con-structed the SciDTB corpus."}, {"id": 66, "string": "The construction details are introduced as follows."}, {"id": 67, "string": "Annotator Recruitment To select annotators, we put forward two requirements to ensure the annotation quality."}, {"id": 68, "string": "First, we required the candidates to have linguistic knowledge."}, {"id": 69, "string": "Second, each candidate was asked to join a test annotation of 20 abstracts, whose quality was evaluated by experts."}, {"id": 70, "string": "After the judgement, 5 annotators were qualified to participate in our work."}, {"id": 71, "string": "EDU Segmentation We performed EDU segmentation in a semi-automatic way."}, {"id": 72, "string": "First, we did sentence tokenization on raw texts using NLTK 3.2 (Bird and Loper, 2004) ."}, {"id": 73, "string": "Then we used SPADE (Soricut and Marcu, 2003) , a pre-trained EDU segmenter relying on Charniak's syntactic parser (Charniak, 2000) , to automatically cut sentences into EDUs."}, {"id": 74, "string": "Then, we manually checked each segmented abstract to ensure the segmentation quality."}, {"id": 75, "string": "Two annotators conducted the checking task, with one proofreading the output of SPADE, and the other reviewing the proofreading."}, {"id": 76, "string": "The checking process was recorded for statistical analysis."}, {"id": 77, "string": "Tree Annotation Labeling dependency trees was the most labor-intensive work in the corpus construction."}, {"id": 78, "string": "798 segmented abstracts were labeled by 5 annotators in 6 months."}, {"id": 79, "string": "506 abstracts were annotated more than twice separately by different annotators, with the purpose of analysing annotation consistency and providing human performance as an upper bound."}, {"id": 80, "string": "The annotated trees were stored in JSON format."}, {"id": 81, "string": "For convenience, we developed an online tool 3 for annotating and visualising discourse dependency trees."}, {"id": 82, "string": "Corpus Statistics SciDTB contains 798 unique abstracts with 63% labeled more than once and 18,978 discourse relations in total."}, {"id": 83, "string": "Table 2 compares the size of SciDTB with RST-DT and another PDTB-style domainspecific corpus BioDRB (Prasad et al., 2011) , we can see SciDTB has a comparable size with RST-DT."}, {"id": 84, "string": "Moreover, it is relatively easy for SciDTB to augment its size since the dependency structure simplifies the annotation to some extent."}, {"id": 85, "string": "Compared with BioDRB, SciDTB has larger size and passage-level representations."}, {"id": 86, "string": "Table 3 shows the agreement results between two annotators."}, {"id": 87, "string": "We can see that most of the LAS values between annotators exceed 0.60."}, {"id": 88, "string": "The agreement on tree structure reflected by UAS all reaches 0.75."}, {"id": 89, "string": "The Kappa values for relation types agreement keep equal to or greater than 0.7."}, {"id": 90, "string": "Structural Characteristics Non-projection in Treebank One advantage of dependency trees is that they can represent nonprojective structures."}, {"id": 91, "string": "In SciDTB, we annotated 39 non-projective dependency trees, which account for about 3% of the whole corpus."}, {"id": 92, "string": "This phenomenon in our treebank is not so frequent as (Wolf and Gibson, 2005) ."}, {"id": 93, "string": "We think this may be because scientific abstracts are much shorter and scientific expressions are relatively restricted."}, {"id": 94, "string": "Dependency Distance Here we investigate the distance of two EDUs involved in a discourse relation."}, {"id": 95, "string": "The distance is defined as the number of EDUs between head and dependent."}, {"id": 96, "string": "We present the distance distribution of all the relations in SciDTB, as shown in Table 4 ."}, {"id": 97, "string": "It should be noted that ROOT and Same-unit relations are omitted in this analysis."}, {"id": 98, "string": "From Table 4 , we find most relations connect near EDUs."}, {"id": 99, "string": "Most relations (61.6%) occur between neighboring EDUs and about 75% relations occur with at most one intermediate EDU."}, {"id": 100, "string": "Although most dependency relations function intra-sentence, there exist long-range dependency relations in the treebank."}, {"id": 101, "string": "On average, the distance of 8.8% relations is greater than 5."}, {"id": 102, "string": "We summarize that the most frequent 5 fine-grained rela-tion types of these long-distance relations belong to Evaluation, Aspect, Addition, Process-step and Goal, which tend to appear on higher level in dependency trees."}, {"id": 103, "string": "Benchmark for Discourse Parsers We further apply SciDTB as a benchmark for comparing and evaluating discourse dependency parsers."}, {"id": 104, "string": "For the 798 unique abstracts in SciDTB, 154 are used for development set and 152 for test set."}, {"id": 105, "string": "The remaining 492 abstracts are used for training."}, {"id": 106, "string": "We implement two transition-based parsers and a graph-based parser as baselines."}, {"id": 107, "string": "Vanilla Transition-based Parser We adopt the transition-based method for dependency parsing by Nivre (2003) ."}, {"id": 108, "string": "The action set of arc-standard system (Nivre et al., 2004) is employed."}, {"id": 109, "string": "We build an SVM classifier to predict most possible transition action for given configuration."}, {"id": 110, "string": "We adopt the N-gram features, positional features, length features and dependency features for top-2 EDUs in the stack and top EDU in the buffer, which can be referred from (Li et al., 2014; Wang et al., 2017) Two-stage Transition-based Parser We implement a two-stage transition-based dependency parser following (Wang et al., 2017) ."}, {"id": 111, "string": "First, an unlabeled tree is produced by vanilla transition-based approach."}, {"id": 112, "string": "Then we train a separate SVM classifier to predict relation types on the tree in pre-order."}, {"id": 113, "string": "For the 2nd-stage, apart from features in the 1ststage, two kinds of features are added, including depth of head and dependent in the tree and the predicted relation between the head and its head."}, {"id": 114, "string": "Graph-based Parser We implement a graphbased parser as in (Li et al., 2014) ."}, {"id": 115, "string": "For simplicity, we use averaged perceptron rather than MIRA to train weights."}, {"id": 116, "string": "N-gram, positional, length and dependency features between head and dependent labeled with relation type are considered."}, {"id": 117, "string": "Hyper-parameters During training, the hyperparameters of these models are tuned using development set."}, {"id": 118, "string": "For vanilla transition-based parser, we take linear kernel for the SVM classifier."}, {"id": 119, "string": "The penalty parameter C is set to 1.5."}, {"id": 120, "string": "For two-stage parser, the 1st-stage classifier follows the same setting as the vanilla parser."}, {"id": 121, "string": "For 2nd-stage, we use the linear kernel and set C to 0.5."}, {"id": 122, "string": "The averaged perceptron in graph-based parser is trained for 10 epochs on the training set."}, {"id": 123, "string": "Weights of features are  initialized to be 0 and trained with fixed learning rate."}, {"id": 124, "string": "Results Table 5 shows the performance of these parsers on development and test data."}, {"id": 125, "string": "We also measure parsing accuracy with UAS and LAS."}, {"id": 126, "string": "The human agreement is presented for comparison."}, {"id": 127, "string": "With the addition of tree structural features in relation type prediction, the two-stage dependency parser gets better performance on LAS than vanilla system on both development and test set."}, {"id": 128, "string": "Compared with graph-based model, the two transition-based baselines achieve higher accuracy with regard to UAS and LAS."}, {"id": 129, "string": "Using more effective training strategies like MIRA may improve graph-based models."}, {"id": 130, "string": "We can also see that human performance is still much higher than the three parsers, meaning there is large space for improvement in future work."}, {"id": 131, "string": "Conclusions In this paper, we propose to construct a discourse dependency treebank SciDTB for scientific abstracts."}, {"id": 132, "string": "It represents passages with dependency tree structure, which is simpler and more flexible for analysis."}, {"id": 133, "string": "We have presented our annotation framework, construction workflow and statistics of SciDTB, which can provide annotation experience for extending to other domains."}, {"id": 134, "string": "Moreover, this treebank can serve as an evaluating benchmark of discourse parsers."}, {"id": 135, "string": "In the future, we will enlarge our annotation scale to cover more domains and longer passages, and explore how to use SciDTB in some downstreaming applications."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 30}, {"section": "Annotation Framework", "n": "2", "start": 31, "end": 33}, {"section": "Elementary Discourse Units", "n": "2.1", "start": 34, "end": 43}, {"section": "Discourse Relations", "n": "2.2", "start": 44, "end": 64}, {"section": "Corpus Construction", "n": "3", "start": 65, "end": 81}, {"section": "Corpus Statistics", "n": "4", "start": 82, "end": 89}, {"section": "Structural Characteristics", "n": "4.2", "start": 90, "end": 102}, {"section": "Benchmark for Discourse Parsers", "n": "5", "start": 103, "end": 130}, {"section": "Conclusions", "n": "6", "start": 131, "end": 135}], "figures": [{"filename": "../figure/image/1122-Figure1-1.png", "caption": "Figure 1: An example discourse dependency tree for an abstract in SciDTB.", "page": 2, "bbox": {"x1": 86.88, "x2": 508.79999999999995, "y1": 66.24, "y2": 256.8}}, {"filename": "../figure/image/1122-Table5-1.png", "caption": "Table 5: Performance of baseline parsers.", "page": 4, "bbox": {"x1": 307.68, "x2": 525.12, "y1": 62.879999999999995, "y2": 125.28}}, {"filename": "../figure/image/1122-Table1-1.png", "caption": "Table 1: Discourse relation category of SciDTB.", "page": 1, "bbox": {"x1": 306.71999999999997, "x2": 540.0, "y1": 62.879999999999995, "y2": 267.36}}, {"filename": "../figure/image/1122-Table4-1.png", "caption": "Table 4: Distribution of dependency distance.", "page": 3, "bbox": {"x1": 327.84, "x2": 505.44, "y1": 62.879999999999995, "y2": 154.07999999999998}}, {"filename": "../figure/image/1122-Table2-1.png", "caption": "Table 2: Size of SciDTB and other discourse relation banks.", "page": 3, "bbox": {"x1": 81.6, "x2": 280.32, "y1": 285.59999999999997, "y2": 327.36}}, {"filename": "../figure/image/1122-Table3-1.png", "caption": "Table 3: Relation annotation consistency.", "page": 3, "bbox": {"x1": 74.88, "x2": 287.03999999999996, "y1": 522.72, "y2": 584.16}}]}