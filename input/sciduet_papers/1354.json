{"title": "Neural Argument Generation Augmented with Externally Retrieved Evidence", "abstract": "High quality arguments are essential elements for human reasoning and decision-making processes. However, effective argument construction is a challenging task for both human and machines. In this work, we study a novel task on automatically generating arguments of a different stance for a given statement. We propose an encoder-decoder style neural network-based argument generation model enriched with externally retrieved evidence from Wikipedia. Our model first generates a set of talking point phrases as intermediate representation, followed by a separate decoder producing the final argument based on both input and the keyphrases. Experiments on a large-scale dataset collected from Reddit show that our model constructs arguments with more topicrelevant content than a popular sequence-tosequence generation model according to both automatic evaluation and human assessments.", "text": [{"id": 0, "string": "Introduction Generating high quality arguments plays a crucial role in decision-making and reasoning processes (Bonet and Geffner, 1996; Byrnes, 2013) ."}, {"id": 1, "string": "A multitude of arguments and counter-arguments are constructed on a daily basis, both online and offline, to persuade and inform us on a wide range of issues."}, {"id": 2, "string": "For instance, debates are often conducted in legislative bodies to secure enough votes for bills to pass."}, {"id": 3, "string": "In another example, online deliberation has become a popular way of soliciting public opinions on new policies' pros and cons (Albrecht, 2006; Park et al., 2012) ."}, {"id": 4, "string": "Nonetheless, constructing persuasive arguments is a daunting task, for both human and computers."}, {"id": 5, "string": "We believe that developing effective argument generation models will enable a broad range of compelling applications, including debate coaching, improving students' essay writing skills, and pro- viding context of controversial issues from different perspectives."}, {"id": 6, "string": "As a consequence, there exists a pressing need for automating the argument construction process."}, {"id": 7, "string": "To date, progress made in argument generation has been limited to retrieval-based methodsarguments are ranked based on relevance to a given topic, then the top ones are selected for inclusion in the output (Rinott et al., 2015; Wachsmuth et al., 2017; Hua and Wang, 2017) ."}, {"id": 8, "string": "Although sentence ordering algorithms are developed for information structuring (Sato et al., 2015; Reisert et al., 2015) , existing methods lack the ability of synthesizing information from different resources, leading to redundancy and incoherence in the output."}, {"id": 9, "string": "In general, the task of argument generation presents numerous challenges, ranging from aggregating supporting evidence to generating text with coherent logical structure."}, {"id": 10, "string": "One particular hurdle comes from the underlying natural language generation (NLG) stack, whose success has been limited to a small set of domains."}, {"id": 11, "string": "Especially, most previous NLG systems rely on tem-plates that are either constructed by rules (Hovy, 1993; Belz, 2008; Bouayad-Agha et al., 2011) , or acquired from a domain-specific corpus (Angeli et al., 2010) to enhance grammaticality and coherence."}, {"id": 12, "string": "This makes them unwieldy to be adapted for new domains."}, {"id": 13, "string": "In this work, we study the following novel problem: given a statement on a controversial issue, generate an argument of an alternative stance."}, {"id": 14, "string": "To address the above challenges, we present a neural network-based argument generation framework augmented with externally retrieved evidence."}, {"id": 15, "string": "Our model is inspired by the observation that when humans construct arguments, they often collect references from external sources, e.g., Wikipedia or research papers, and then write their own arguments by synthesizing talking points from the references."}, {"id": 16, "string": "Figure 1 displays sample arguments by users from Reddit subcommunity /r/ChangeMyView 1 who argue against the motion that \"government should be allowed to view private emails\"."}, {"id": 17, "string": "Both replies leverage information drawn from Wikipedia, such as \"political corruption\" and \"Fourth Amendment on protections of personal privacy\"."}, {"id": 18, "string": "Concretely, our neural argument generation model adopts the popular encoder-decoderbased sequence-to-sequence (seq2seq) framework (Sutskever et al., 2014) , which has achieved significant success in various text generation tasks (Bahdanau et al., 2015; Wen et al., 2015; Wang and Ling, 2016; Mei et al., 2016; Wiseman et al., 2017) ."}, {"id": 19, "string": "Our encoder takes as input a statement on a disputed issue, and a set of relevant evidence automatically retrieved from English Wikipedia 2 ."}, {"id": 20, "string": "Our decoder consists of two separate parts, one of which first generates keyphrases as intermediate representation of \"talking points\", and the other then generates an argument based on both input and keyphrases."}, {"id": 21, "string": "Automatic evaluation based on BLEU (Papineni et al., 2002) shows that our framework generates better arguments than directly using retrieved sentences or popular seq2seq-based generation models (Bahdanau et al., 2015) that are also trained with retrieved evidence."}, {"id": 22, "string": "We further design a novel evaluation procedure to measure whether the arguments are on-topic by predicting their relevance to the given statement based on a separately trained relevance estimation model."}, {"id": 23, "string": "Results suggest that our model generated arguments are more likely to be predicted as on-topic, compared to other seq2seq-based generations models."}, {"id": 24, "string": "The rest of this paper is organized as follows."}, {"id": 25, "string": "Section 2 highlights the roadmap of our system."}, {"id": 26, "string": "The dataset used for our study is introduced in Section 3."}, {"id": 27, "string": "The model formulation and retrieval methods are detailed in Sections 4 and 5."}, {"id": 28, "string": "We then describe the experimental setup and results in Sections 6 and 7, followed by further analysis and future directions in Section 8."}, {"id": 29, "string": "Related work is discussed in Section 9."}, {"id": 30, "string": "Finally, we conclude in Section 10."}, {"id": 31, "string": "Framework Our argument generation pipeline, consisting of evidence retrieval and argument construction, is depicted in Figure 2 ."}, {"id": 32, "string": "Given a statement, a set of queries are constructed based on its topic signature words (e.g., \"government\" and \"national security\") to retrieve a list of relevant articles from Wikipedia."}, {"id": 33, "string": "A reranking component further extracts sentences that may contain supporting evidence, which are used as additional input information for the neural argument generation model."}, {"id": 34, "string": "The generation model then encodes the statement and the evidence with a shared encoder in sequence."}, {"id": 35, "string": "Two decoders are designed: the keyphrase decoder first generates an intermediate representation of talking points in the form of keyphrases (e.g., \"right to privacy\", \"political corruption\"), followed by a separate argument decoder which produces the final argument."}, {"id": 36, "string": "Data Collection and Processing We draw data from Reddit subcommunity /r/ChangeMyView (henceforth CMV), which focuses on facilitating open discussions on a wide range of disputed issues."}, {"id": 37, "string": "Specifically, CMV is structured as discussion threads, where the original post (OP) starts with a viewpoint on a controversial topic, followed with detailed reasons, then other users reply with counter-arguments."}, {"id": 38, "string": "Importantly, when a user believes his view has been changed by an argument, a delta is often awarded to the reply."}, {"id": 39, "string": "In total, 26,761 threads from CMV are downloaded, dating from January 2013 to June 2017 3 ."}, {"id": 40, "string": "Figure 2: Overview of our system pipeline (best viewed in color)."}, {"id": 41, "string": "Given a statement, relevant articles are retrieved from Wikipedia with topic signatures from statement as queries (marked in red and boldface)."}, {"id": 42, "string": "A reranking module then outputs top sentences as evidence."}, {"id": 43, "string": "The statement and the evidence (encoder states in gray panel) are concatenated and encoded as input for our argument generation model."}, {"id": 44, "string": "During decoding, the keyphrase decoder first generates talking points as phrases, followed by the argument decoder which constructs the argument by attending both input and keyphrases."}, {"id": 45, "string": "Only root replies (i.e., replies directly addressing OP) that meet all of the following requirements are included: (1) longer than 5 words, (2) without offensive language 4 , (3) awarded with delta or with more upvotes than downvotes, and (4) not generated by system moderators."}, {"id": 46, "string": "After filtering, the resultant dataset contains 26,525 OPs along with 305,475 relatively high quality root replies."}, {"id": 47, "string": "We treat each OP as the input statement, and the corresponding root replies as target arguments, on which our model is trained and evaluated."}, {"id": 48, "string": "A Focused Domain Dataset."}, {"id": 49, "string": "The current dataset contains diverse domains with unbalanced numbers of arguments."}, {"id": 50, "string": "We therefore choose samples from the politics domain due to its large volume of discussions and good coverage of popular arguments in the domain."}, {"id": 51, "string": "However, topic labels are not available for the discussions."}, {"id": 52, "string": "We thus construct a domain classifier for politics vs. non-politics posts based on a logistic regression model with unigram features, trained from our heuristically labeled Wikipedia abstracts 5 ."}, {"id": 53, "string": "Concretely, we manually collect two lists of keywords that are indicative of politics and non-politics."}, {"id": 54, "string": "Each abstract is labeled as politics or non-politics if its title only matches keywords from one category."}, {"id": 55, "string": "6 In total, 264,670 politics abstracts and 827,437 of non-politics are labeled."}, {"id": 56, "string": "Starting from this dataset, our domain classifier is trained in a bootstrapping manner by gradually adding OPs predicted as politics or non-politics."}, {"id": 57, "string": "7 Finally, 12,549 OPs are labeled as politics, each of which is paired with 9.4 high-quality target arguments on average."}, {"id": 58, "string": "The average length for OPs is 16.1 sentences of 356.4 words, and 7.7 sentences of 161.1 words for arguments."}, {"id": 59, "string": "Model In this section, we present our argument generation model, which jointly learns to generate talking points in the form of keyphrases and produce arguments based on the input and keyphrases."}, {"id": 60, "string": "Extended from the successful seq2seq attentional model (Bahdanau et al., 2015) , our proposed model is novel in the following ways."}, {"id": 61, "string": "First, two separate decoders are designed, one for generating keyphrases, the other for argument construction."}, {"id": 62, "string": "By sharing the encoder with keyphrase generation, our argument decoder is better aware of salient talking points in the input."}, {"id": 63, "string": "Second, a novel attention mechanism is designed for argument decoding by attending both input and the previously generated keyphrases."}, {"id": 64, "string": "Finally, a reranking-based beam search decoder is introduced to promote topic-relevant generations."}, {"id": 65, "string": "Model Formulation Our model takes as input a sequence of tokens x = {x O ; x E }, where x O is the statement se- quence and x E contains relevant evidence that is extracted from Wikipedia based on a separate retrieval module."}, {"id": 66, "string": "A special token <evd> is inserted between x O and x E ."}, {"id": 67, "string": "Our model then first generates a set of keyphrases as a sequence y p = {y p l }, followed by an argument y a = {y a t }, by maximizing log P (y|x), where y = {y p ; y a }."}, {"id": 68, "string": "The objective is further decomposed into t log P (y t |y 1:t\u22121 , x), with each term estimated by a softmax function over a non-linear transformation of decoder hidden states s a t and s p t , for argument decoder and keyphrase decoder, respectively."}, {"id": 69, "string": "The hidden states are computed as done in Bahdanau et al."}, {"id": 70, "string": "(2015) with attention: s t = g(s t\u22121 , c t , y t ) (1) c t = T j=1 \u03b1 tj h j (2) \u03b1 tj = exp(e tj ) T k=1 exp(e tk ) (3) e tj = v T tanh(W h h j + W s s t + b attn ) (4) Notice that two sets of parameters and different state update functions g(\u00b7) are learned for separate decoders: {W a h , W a s , b a attn , g a (\u00b7)} for the argument decoder; {W p h , W p s , b p attn , g p (\u00b7)} for the keyphrase decoder."}, {"id": 71, "string": "Encoder."}, {"id": 72, "string": "A two-layer bidirectional LSTM (bi-LSTM) is used to obtain the encoder hidden states h i for each time step i."}, {"id": 73, "string": "For biLSTM, the hidden state is the concatenation of forward and backward hidden states: h i = [ \u2212 \u2192 h i ; \u2190 \u2212 h i ]."}, {"id": 74, "string": "Word representations are initialized with 200-dimensional pre-trained GloVe embeddings (Pennington et al., 2014) , and updated during training."}, {"id": 75, "string": "The last hidden state of encoder is used to initialize both decoders."}, {"id": 76, "string": "In our model the encoder is shared by argument and keyphrase decoders."}, {"id": 77, "string": "Decoders."}, {"id": 78, "string": "Our model is equipped with two decoders: keyphrase decoder and argument decoder, each is implemented with a separate two-layer unidirectional LSTM, in a similar spirit with one-to-many multi-task sequence-to-sequence learning (Luong et al., 2015) ."}, {"id": 79, "string": "The distinction is that our training objective is the sum of two loss functions: L(\u03b8) = \u2212 \u03b1 T p (x,y p )\u2208D log P (y p |x; \u03b8) \u2212 (1 \u2212 \u03b1) T a (x,y a )\u2208D log P (y a |x; \u03b8) (5) where T p and T a denote the lengths of reference keyphrase sequence and argument sequence."}, {"id": 80, "string": "\u03b1 is a weighting parameter, and it is set as 0.5 in our experiments."}, {"id": 81, "string": "Attention over Both Input and Keyphrases."}, {"id": 82, "string": "Intuitively, the argument decoder should consider the generated keyphrases as talking points during the generation process."}, {"id": 83, "string": "We therefore propose an attention mechanism that can attend both encoder hidden states and the keyphrase decoder hidden states."}, {"id": 84, "string": "Additional context vector c t is then computed over keyphrase decoder hidden states s p j , which is used for computing the new argument decoder state: s a t = g (s a t\u22121 , [c t ; c t ], y a t ) (6) c t = Tp j=1 \u03b1 tj s p j (7) \u03b1 tj = exp(e tj ) Tp k=1 exp(e tk ) (8) e tj = v T tanh(W p s p j + W a s a t + b attn ) (9) where s p j is the hidden state of keyphrase decoder at position j, s a t is the hidden state of argument decoder at timestep t, and c t is computed in Eq."}, {"id": 85, "string": "2."}, {"id": 86, "string": "Decoder Sharing."}, {"id": 87, "string": "We also experiment with a shared decoder between keyphrase generation and argument generation: the last hidden state of the keyphrase decoder is used as the initial hidden state for the argument decoder."}, {"id": 88, "string": "A special token <arg> is inserted between the two sequences, indicating the start of argument generation."}, {"id": 89, "string": "Hybrid Beam Search Decoding Here we describe our decoding strategy on the argument decoder."}, {"id": 90, "string": "We design a hybrid beam expansion method combined with segment-based reranking to promote diversity of beams and informativeness of the generated arguments."}, {"id": 91, "string": "Hybrid Beam Expansion."}, {"id": 92, "string": "In the standard beam search, the top k words of highest probability are selected deterministically based on the softmax output to expand each hypothesis."}, {"id": 93, "string": "However, this may lead to suboptimal output for text generation (Wiseman and Rush, 2016) , e.g., one beam often dominates and thus inhibits hypothesis diversity."}, {"id": 94, "string": "Here we only pick the top n words (n < k), and randomly draw another k \u2212 n words based on the multinomial distribution after removing the n expanded words from the candidates."}, {"id": 95, "string": "This leads to a more diverse set of hypotheses."}, {"id": 96, "string": "Segment-based Reranking."}, {"id": 97, "string": "We also propose to rerank the beams every p steps based on beam's coverage of content words from input."}, {"id": 98, "string": "Based on our observation that likelihood-based reranking often leads to overly generic arguments (e.g., \"I don't agree with you\"), this operation has the potential of encouraging more informative generation."}, {"id": 99, "string": "k = 10, n = 3, and p = 10 are used for experiments."}, {"id": 100, "string": "The effect of parameter selection is studied in Section 7."}, {"id": 101, "string": "Relevant Evidence Retrieval Retrieval Methodology We take a two-step approach for retrieving evidence sentences: given a statement, (1) constructing one query per sentence and retrieving relevant articles from Wikipedia, and (2) reranking paragraphs and then sentences to create the final set of evidence sentences."}, {"id": 102, "string": "Wikipedia is used as our evidence source mainly due to its objective perspective and broad coverage of topics."}, {"id": 103, "string": "A dump of December 21, 2016 was downloaded."}, {"id": 104, "string": "For training, evidence sentences are retrieved with queries constructed from target user arguments."}, {"id": 105, "string": "For test, queries are constructed from OP."}, {"id": 106, "string": "Article Retrieval."}, {"id": 107, "string": "We first create an inverted index lookup table for Wikipedia as done in Chen et al."}, {"id": 108, "string": "(2017) ."}, {"id": 109, "string": "For a given statement, we construct one query per sentence to broaden the diversity of retrieved articles."}, {"id": 110, "string": "Therefore, multiple passes of retrieval will be conducted if more than one query is created."}, {"id": 111, "string": "Specifically, we first collect topic signature words of the post."}, {"id": 112, "string": "Topic signatures (Lin and Hovy, 2000) are terms strongly correlated with a given post, measured by log-likelihood ratio against a background corpus."}, {"id": 113, "string": "We treat posts from other discussions in our dataset as background."}, {"id": 114, "string": "For each sentence, one query is constructed based on the noun phrases and verbs containing at least one topic signature word."}, {"id": 115, "string": "For instance, a query \"the government, my e-mails, national security\" is constructed for the first sentence of OP in the motivating example ( Figure 2 )."}, {"id": 116, "string": "Top five retrieved articles with highest TF-IDF similarity scores are kept per query."}, {"id": 117, "string": "Sentence Reranking."}, {"id": 118, "string": "The retrieved articles are first segmented into paragraphs, which are reranked by TF-IDF similarity to the given statement."}, {"id": 119, "string": "Up to 100 top ranked paragraphs with positive scores are retained."}, {"id": 120, "string": "These paragraphs are further segmented into sentences, and reranked according to TF-IDF similarity again."}, {"id": 121, "string": "We only keep up to 10 top sentences with positive scores for inclusion in the evidence set."}, {"id": 122, "string": "Gold-Standard Keyphrase Construction To create training data for the keyphrase decoder, we use the following rules to identify keyphrases from evidence sentences that are reused by human writers for argument construction: \u2022 Extract noun phrases and verb phrases from evidence sentences using Stanford CoreNLP ."}, {"id": 123, "string": "\u2022 Keep phrases of length between 2 and 10 that overlap with content words in the argument."}, {"id": 124, "string": "\u2022 If there is span overlap between phrases, the longer one is kept if it has more content word coverage of the argument; otherwise the shorter one is retained."}, {"id": 125, "string": "The resultant phrases are then concatenated with a special delimiter <phrase> and used as gold-standard generation for training."}, {"id": 126, "string": "6 Experimental Setup Final Dataset Statistics Encoding the full set of evidence by our current decoder takes a huge amount of time."}, {"id": 127, "string": "We there propose a sampling strategy to allow the encoder to finish encoding within reasonable time by considering only a subset of the evidence: For each sentence in the statement, up to three evidence sentences are randomly sampled from the retrieved set; then the sampled sentences are concatenated."}, {"id": 128, "string": "This procedure is repeated three times per statement, where a statement is an user argument for training data and an OP for test set."}, {"id": 129, "string": "In our experiments, we remove duplicates samples and the ones without any retrieved evidence sentence."}, {"id": 130, "string": "Finally, we break down the augmented data into a training set of 224,553 examples (9,737 unique OPs), 13,911 for validation (640 OPs), and 30,417 retained for test (1,892 OPs)."}, {"id": 131, "string": "Training Setup For all models, we use a two-layer biLSTM as encoder and a two-layer unidirectional LSTM as decoder, with 200-dimensional hidden states in each layer."}, {"id": 132, "string": "We apply dropout (Gal and Ghahramani, 2016) on RNN cells with a keep probability of 0.8."}, {"id": 133, "string": "We use Adam (Kingma and Ba, 2015) with an initial learning rate of 0.001 to optimize the cross-entropy loss."}, {"id": 134, "string": "Gradient clipping is also applied with the maximum norm of 2."}, {"id": 135, "string": "The input and output vocabulary sizes are both 50k."}, {"id": 136, "string": "Curriculum Training."}, {"id": 137, "string": "We train the models in three stages where the truncated input and output lengths are gradually increased."}, {"id": 138, "string": "Details are listed in Table 2 ."}, {"id": 139, "string": "Importantly, this strategy allows model training to make rapid progress during early stages."}, {"id": 140, "string": "Training each of our full models takes about 4 days on a Quadro P5000 GPU card with a batch size of 32."}, {"id": 141, "string": "The model converges after about 10 epochs in total with pre-training initialization, which is described below."}, {"id": 142, "string": "Adding Pre-training."}, {"id": 143, "string": "We pre-train a two-layer seq2seq model with OP as input and target argument as output from our training set."}, {"id": 144, "string": "After 20 epochs (before converging), parameters for the first layer are used to initialize the first layer of all comparison models and our models (except for the keyphrase decoder)."}, {"id": 145, "string": "Experimental results show that pre-training boosts all methods by roughly 2 METEOR (Denkowski and Lavie, 2014) points."}, {"id": 146, "string": "We describe more detailed results in the supplementary material."}, {"id": 147, "string": "Baseline and Comparisons We first consider a RETRIEVAL-based baseline, which concatenates retrieved evidence sentences to form the argument."}, {"id": 148, "string": "We further compare with three seq2seq-based generation models with different training data: (1) SEQ2SEQ: training with OP as input and the argument as output; (2) SEQ2SEQ + encode evd: augmenting input with evidence sentences as in our model; (3) SEQ2SEQ + encode KP: augmenting input with gold-standard keyphrases, which assumes some of the talking points are known."}, {"id": 149, "string": "All seq2seq models use a regular beam search decoder with the same beam size as ours."}, {"id": 150, "string": "Variants of Our Models."}, {"id": 151, "string": "We experiment with variants of our models based on the proposed separate decoder model (DEC-SEPARATE) or using a shared decoder (DEC-SHARED)."}, {"id": 152, "string": "For each, we further test whether adding keyphrase attention for argument decoding is helpful (+ attend KP)."}, {"id": 153, "string": "System vs. Oracle Retrieval."}, {"id": 154, "string": "For test time, evidence sentences are retrieved with queries constructed from OP (System Retrieval)."}, {"id": 155, "string": "We also experiment with an Oracle Retrieval setup, where the evidence is retrieved based on user arguments, to indicate how much gain can be expected with better retrieval results."}, {"id": 156, "string": "Results Automatic Evaluation For automatic evaluation, we use BLEU (Papineni et al., 2002) , an n-gram precision-based metric (up to bigrams are considered), and ME-TEOR (Denkowski and Lavie, 2014) , measuring unigram recall and precision by considering paraphrases, synonyms, and stemming."}, {"id": 157, "string": "Human arguments are used as the gold-standard."}, {"id": 158, "string": "Because each OP may be paired with more than one highquality arguments, we compute BLEU and ME-TEOR scores for the system argument compared against all arguments, and report the best."}, {"id": 159, "string": "We do not use multiple reference evaluation because  the arguments are often constructed from different angles and cover distinct aspects of the issue."}, {"id": 160, "string": "For models that generate more than one arguments based on different sets of sampled evidence, the one with the highest score is considered."}, {"id": 161, "string": "As can be seen from Table 3 , our models produce better BLEU scores than almost all the comparisons."}, {"id": 162, "string": "Especially, our models with separate decoder yield significantly higher BLEU and ME-TEOR scores than all seq2seq-based models (approximation randomization testing, p < 0.0001) do."}, {"id": 163, "string": "Better METEOR scores are achieved by the RETRIEVAL baseline, mainly due to its significantly longer arguments."}, {"id": 164, "string": "Moreover, utilizing attention over both input and the generated keyphrases further boosts our models' performance."}, {"id": 165, "string": "Interestingly, utilizing system retrieved evidence yields better BLEU scores than using oracle retrieval for testing."}, {"id": 166, "string": "The reason could be that arguments generated based on system retrieval contain less topic-specific words and more generic argumentative phrases."}, {"id": 167, "string": "Since the later is often observed in human written arguments, it may lead to higher precision and thus better BLEU scores."}, {"id": 168, "string": "Decoder Strategy Comparison."}, {"id": 169, "string": "We also study the effect of our reranking-based decoder by varying the reranking step size (p) and the number of top words expanded to beam hypotheses deterministically (k)."}, {"id": 170, "string": "From the results in Figure 3 , we find that reranking with a smaller step size, e.g., Beams are reranked at every 5, 10, and 20 steps (p)."}, {"id": 171, "string": "For each step size, we also show the effect of varying k, where top-k words are selected deterministically for beam expansion, with 10 \u2212 k randomly sampled over multinomial distribution after removing the k words."}, {"id": 172, "string": "Reranking with smaller step size yields better results."}, {"id": 173, "string": "p = 5, can generally lead to better METEOR scores."}, {"id": 174, "string": "Although varying the number of top words for beam expansion does not yield significant difference, we do observe more diverse beams from the system output if more candidate words are selected stochastically (i.e."}, {"id": 175, "string": "with a smaller k)."}, {"id": 176, "string": "Topic-Relevance Evaluation During our pilot study, we observe that generic arguments, such as \"I don't agree with you\" or \"this is not true\", are prevalent among generations by seq2seq models."}, {"id": 177, "string": "We believe that good arguments should include content that addresses the given topic."}, {"id": 178, "string": "Therefore, we design a novel evaluation method to measure whether the generated arguments contain topic-relevant information."}, {"id": 179, "string": "To achieve the goal, we first train a topicrelevance estimation model inspired by the latent semantic model in Huang et al."}, {"id": 180, "string": "(2013) ."}, {"id": 181, "string": "A pair of OP and argument, each represented as the average of word embeddings, are separately fed into a twolayer transformation model."}, {"id": 182, "string": "A dot-product is computed over the two projected low-dimensional vectors, and then a sigmoid function outputs the relevance score."}, {"id": 183, "string": "For model learning, we further divide our current training data into training, developing, and test sets."}, {"id": 184, "string": "For each OP and argument pair, we first randomly sample 100 arguments from other threads, and then pick the top 5 dissimilar ones, measured by Jaccard distance, as negative training samples."}, {"id": 185, "string": "details are included in the supplementary material."}, {"id": 186, "string": "We then take this trained model to evaluate the relevance between OP and the corresponding system arguments."}, {"id": 187, "string": "Each system argument is treated as positive sample; we then select five negative samples from arguments generated for other OPs whose evidence sentences most similar to that of the positive sample."}, {"id": 188, "string": "Intuitively, if an argument contains more topic relevant information, then the relevance estimation model will output a higher score for it; otherwise, the argument will receive a lower similarity score, and thus cannot be easily distinguished from negative samples."}, {"id": 189, "string": "Ranking metrics of MRR and Precision at 1 (P@1) are utilized, with results reported in Table 4 ."}, {"id": 190, "string": "The ranker yields significantly better scores over arguments generated from models trained with evidence, compared to arguments generated by SEQ2SEQ model."}, {"id": 191, "string": "Moreover, we manually pick 29 commonly used generic responses (e.g., \"I don't think so\") and count their frequency in system outputs."}, {"id": 192, "string": "For the seq2seq model, more than 75% of its outputs contain at least one generic argument, compared to 16.2% by our separate decoder model with attention over keyphrases."}, {"id": 193, "string": "This further implies that our model generates more topic-relevant content."}, {"id": 194, "string": "Human Evaluation We also hire three trained human judges who are fluent English speakers to rate system arguments for the following three aspects on a scale of 1 System Gram Info Rel RETRIEVAL 4.5 \u00b1 0.6 3.7 \u00b1 0.9 3.3 \u00b1 1.1 SEQ2SEQ 3.3 \u00b1 1.1 1.2 \u00b1 0.5 1.4 \u00b1 0.7 OUR MODEL 2.5 \u00b1 0.8 1.6 \u00b1 0.8 1.8 \u00b1 0.8 Table 5 : Human evaluation results on grammaticality (Gram), informativeness (Info), and relevance (Rel) of arguments."}, {"id": 195, "string": "Our model with separate decoder and attention over keyphrases receives significantly better ratings in informativeness and relevance than seq2seq (one-way ANOVA, p < 0.005)."}, {"id": 196, "string": "to 5 (with 5 as best): Grammaticality-whether an argument is fluent, informativeness-whether the argument contains useful information and is not generic, and relevance-whether the argument contains information of a different stance or offtopic."}, {"id": 197, "string": "30 CMV threads are randomly selected, each of which is presented with randomly-shuffled OP statement and four system arguments."}, {"id": 198, "string": "Table 5 shows that our model with separate decoder and attention over keyphrases produce significantly more informative and relevant arguments than seq2seq trained without evidence."}, {"id": 199, "string": "8 However, we also observe that human judges prefer the retrieved arguments over generation-based models, illustrating the gap between system arguments and human edited text."}, {"id": 200, "string": "Sample arguments are displayed in Figure 4 ."}, {"id": 201, "string": "Further Discussion Keyphrase Generation Analysis."}, {"id": 202, "string": "Here we provide further analysis over the generated keyphrases by our separate decoder model."}, {"id": 203, "string": "First, about 10% of the keyphrases output by our model also appear in the gold-standard (i.e., used by human arguments)."}, {"id": 204, "string": "Furthermore, 36% of generated keyphrases are reused by our system arguments."}, {"id": 205, "string": "With human inspection, we find that although some keyphrases are not directly reused by the argument decoder, they represent high level talking points in the argument."}, {"id": 206, "string": "For instance, in the first sample argument by our model in Figure 4 , keyphrases \"the motive\" and \"russian\" are generated."}, {"id": 207, "string": "Although not used, they suggest the topics that the argument should stay on."}, {"id": 208, "string": "Sample Arguments and Future Directions."}, {"id": 209, "string": "As can be seen from the sample outputs in Figure 4 , our model generally captures more relevant concepts, e.g., \"military army\" and \"wars Input: Putin is trying to re-form a \"Soviet Union\" with his past actions in Georgia and current actions in Ukraine Human: So far Putin has only really targeted areas where the local population is majority russian (or historically majority russian) and sympathetic to russia."}, {"id": 210, "string": "That's not to say that he wouldn't go further, but I don't think there is yet any compelling reason to believe he would."}, {"id": 211, "string": "Retrieval: In 1968, the Soviet Union and Warsaw pact allies invaded Czechoslovakia to halt the Prague spring reforms."}, {"id": 212, "string": "It was this significant lack of flexibility that was exploited by the US to undermine the strength of the Soviet Union and thus foster its reform."}, {"id": 213, "string": "In the summer of 1991, the new union treaty, which would have turned the Soviet Union into a much looser union, was agreed upon by eight republics."}, {"id": 214, "string": "Our Model: There are two reasons you are so far beyond."}, {"id": 215, "string": "There is no reason to see the military army."}, {"id": 216, "string": "You can infer what they assume it, so they tend to protect up."}, {"id": 217, "string": "There."}, {"id": 218, "string": "If we assume it were bad, they can not be controlled."}, {"id": 219, "string": "So we're talking going to ignore the wars of the world."}, {"id": 220, "string": "The fact of the matter is not bad."}, {"id": 221, "string": "I would also assume it."}, {"id": 222, "string": "However, the government can not be reminded of the world."}, {"id": 223, "string": "Seq2seq + evd: 1."}, {"id": 224, "string": "The reason is that the government isn't the power of the war of Russia, at the time of the war of Russia."}, {"id": 225, "string": "In Russia, there is no way to continue to control the military."}, {"id": 226, "string": "Seq2seq + KP: I don't think it's a bit."}, {"id": 227, "string": "I don't think you're forgetting."}, {"id": 228, "string": "I don't want to see the Syrian American dream in the US."}, {"id": 229, "string": "I don't see the Syrian American dream of American citizens."}, {"id": 230, "string": "I don't see the Syrian American dream of American citizens."}, {"id": 231, "string": "I don't see the Syrian American military in the world."}, {"id": 232, "string": "I don't think it wouldn't be true."}, {"id": 233, "string": "Input: Voting for either Hillary or Trump is morally reprehensible."}, {"id": 234, "string": "Human: I don't think a vote for either of them means \"I'm totally fine with...\" as you say."}, {"id": 235, "string": "Why is it not acceptable to pick the option whose platform most closely aligns to your values/beliefs/desires, while acknowledging neither candidate is ideal?"}, {"id": 236, "string": "Retrieval: Vote trading under a democratic, majority-rule institution is sometimes considered morally reprehensible behavior."}, {"id": 237, "string": "Our Model: He's going to happen."}, {"id": 238, "string": "You're overestimating the more premise."}, {"id": 239, "string": "He's already overestimating to this hypothetical party."}, {"id": 240, "string": "He's already killed over the supreme court positions."}, {"id": 241, "string": "Looking for Bernie."}, {"id": 242, "string": "This is the same reasons: Clinton is not the supreme court presidency."}, {"id": 243, "string": "You've already sent Trump's right to vote."}, {"id": 244, "string": "The fact is that he's going to happen."}, {"id": 245, "string": "He's already going to notice."}, {"id": 246, "string": "However, it's a long way."}, {"id": 247, "string": "Seq2seq + evd: 1."}, {"id": 248, "string": "If they don't vote the vote, they would not be able to vote for any candidate."}, {"id": 249, "string": "They don't have the same effect on their political power."}, {"id": 250, "string": "They are not voting for them."}, {"id": 251, "string": "Seq2seq + KP: I agree with your view."}, {"id": 252, "string": "I don't agree with you."}, {"id": 253, "string": "I don't think it's easy to appeal to the Clintons."}, {"id": 254, "string": "If you don't want to do this?"}, {"id": 255, "string": "Figure 4 : Sample arguments generated by human, our system, and seq2seq trained with evidence."}, {"id": 256, "string": "Only the main thesis is shown for the input OP."}, {"id": 257, "string": "System generations are manually detokenized and capitalized."}, {"id": 258, "string": "of the world\", as discussed in the first example."}, {"id": 259, "string": "Meanwhile, our model also acquires argumentative style language, though there is still a noticeable gap between system arguments and human constructed arguments."}, {"id": 260, "string": "As discovered by our prior work , both topical content and language style are essential elements for high quality arguments."}, {"id": 261, "string": "For future work, generation models with a better control on linguistic style need to be designed."}, {"id": 262, "string": "As for improving coherence, we believe that discourse-aware generation models (Ji et al., 2016) should also be explored in the future work to enhance text planning."}, {"id": 263, "string": "Related Work There is a growing interest in argumentation mining from the natural language processing research community (Park and Cardie, 2014; Ghosh et al., 2014; Palau and Moens, 2009; Niculae et al., 2017; Eger et al., 2017) ."}, {"id": 264, "string": "While argument understanding has received increasingly more attention, the area of automatic argument generation is much less studied."}, {"id": 265, "string": "Early work on argument construction investigates the design of argumentation strategies (Reed et al., 1996; Carenini and Moore, 2000; Zukerman et al., 2000) ."}, {"id": 266, "string": "For instance, Reed (1999) describes the first full natural language argument generation system, called Rhetorica."}, {"id": 267, "string": "It however only outputs a text plan, mainly relying on heuristic rules."}, {"id": 268, "string": "Due to the difficulty of text generation, none of the previous work represents a fully automated argument generation system."}, {"id": 269, "string": "This work aims to close the gap by proposing an end-to-end trained argument construction framework."}, {"id": 270, "string": "Additionally, argument retrieval and extraction are investigated (Rinott et al., 2015; Hua and Wang, 2017) to deliver relevant arguments for user-specified queries."}, {"id": 271, "string": "Wachsmuth et al."}, {"id": 272, "string": "(2017) build a search engine from arguments collected from various online debate portals."}, {"id": 273, "string": "After the retrieval step, sentence ordering algorithms are often applied to improve coherence (Sato et al., 2015; Reisert et al., 2015) ."}, {"id": 274, "string": "Nevertheless, simply merging arguments from different resources inevitably introduces redundancy."}, {"id": 275, "string": "To the best of our knowledge, this is the first automatic argument generation system that can synthesize retrieved content from different articles into fluent arguments."}, {"id": 276, "string": "Conclusion We studied the novel problem of generating arguments of a different stance for a given statement."}, {"id": 277, "string": "We presented a neural argument generation framework enhanced with evidence retrieved from Wikipedia."}, {"id": 278, "string": "Separate decoders were designed to first produce a set of keyphrases as talking points, and then generate the final argument."}, {"id": 279, "string": "Both automatic evaluation against human arguments and human assessment showed that our model produced more informative arguments than popular sequence-to-sequence-based generation models."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 30}, {"section": "Framework", "n": "2", "start": 31, "end": 35}, {"section": "Data Collection and Processing", "n": "3", "start": 36, "end": 58}, {"section": "Model", "n": "4", "start": 59, "end": 64}, {"section": "Model Formulation", "n": "4.1", "start": 65, "end": 88}, {"section": "Hybrid Beam Search Decoding", "n": "4.2", "start": 89, "end": 100}, {"section": "Retrieval Methodology", "n": "5.1", "start": 101, "end": 121}, {"section": "Gold-Standard Keyphrase Construction", "n": "5.2", "start": 122, "end": 125}, {"section": "Final Dataset Statistics", "n": "6.1", "start": 126, "end": 130}, {"section": "Training Setup", "n": "6.2", "start": 131, "end": 146}, {"section": "Baseline and Comparisons", "n": "6.3", "start": 147, "end": 155}, {"section": "Automatic Evaluation", "n": "7.1", "start": 156, "end": 175}, {"section": "Topic-Relevance Evaluation", "n": "7.2", "start": 176, "end": 192}, {"section": "Human Evaluation", "n": "7.3", "start": 193, "end": 200}, {"section": "Further Discussion", "n": "8", "start": 201, "end": 262}, {"section": "Related Work", "n": "9", "start": 263, "end": 275}, {"section": "Conclusion", "n": "10", "start": 276, "end": 279}], "figures": [{"filename": "../figure/image/1354-Figure1-1.png", "caption": "Figure 1: Sample user arguments from Reddit Change My View subcommunity that argue against original post\u2019s thesis on \u201cgovernment should be allowed to view private emails\u201d. Both arguments leverage supporting information from Wikipedia articles.", "page": 0, "bbox": {"x1": 302.88, "x2": 526.0799999999999, "y1": 224.64, "y2": 348.0}}, {"filename": "../figure/image/1354-Table2-1.png", "caption": "Table 2: Truncation size (i.e., number of tokens including delimiters) for different stages during training. Note that in the first stage we do not include evidence and keyphrases.", "page": 5, "bbox": {"x1": 72.0, "x2": 290.4, "y1": 549.6, "y2": 636.0}}, {"filename": "../figure/image/1354-Figure3-1.png", "caption": "Figure 3: Effect of our reranking-based decoder. Beams are reranked at every 5, 10, and 20 steps (p). For each step size, we also show the effect of varying k, where top-k words are selected deterministically for beam expansion, with 10 \u2212 k randomly sampled over multinomial distribution after removing the k words. Reranking with smaller step size yields better results.", "page": 6, "bbox": {"x1": 312.0, "x2": 502.08, "y1": 77.28, "y2": 204.95999999999998}}, {"filename": "../figure/image/1354-Table3-1.png", "caption": "Table 3: Results on argument generation by BLEU and METEOR (MTR), with system retrieved evidence and oracle retrieval. The best performing model is highlighted in bold per metric. Our separate decoder models, with and without keyphrase attention, statistically significantly outperform all seq2seq-based models based on approximation randomization testing (Noreen, 1989), p < 0.0001.", "page": 6, "bbox": {"x1": 73.92, "x2": 288.0, "y1": 62.879999999999995, "y2": 208.32}}, {"filename": "../figure/image/1354-Figure2-1.png", "caption": "Figure 2: Overview of our system pipeline (best viewed in color). Given a statement, relevant articles are retrieved from Wikipedia with topic signatures from statement as queries (marked in red and boldface). A reranking module then outputs top sentences as evidence. The statement and the evidence (encoder states in gray panel) are concatenated and encoded as input for our argument generation model. During decoding, the keyphrase decoder first generates talking points as phrases, followed by the argument decoder which constructs the argument by attending both input and keyphrases.", "page": 2, "bbox": {"x1": 88.32, "x2": 509.28, "y1": 66.72, "y2": 245.28}}, {"filename": "../figure/image/1354-Table4-1.png", "caption": "Table 4: Evaluation on topic relevance\u2014models that generate arguments highly related with OP should be ranked high by a separately trained relevance estimation model, i.e., higher Mean Reciprocal Rank (MRR) and Precision at 1 (P@1) scores. All models trained with evidence significantly outperform seq2seq trained without evidence (approximation randomization testing, p < 0.0001).", "page": 7, "bbox": {"x1": 82.56, "x2": 280.32, "y1": 62.879999999999995, "y2": 197.28}}, {"filename": "../figure/image/1354-Table5-1.png", "caption": "Table 5: Human evaluation results on grammaticality (Gram), informativeness (Info), and relevance (Rel) of arguments. Our model with separate decoder and attention over keyphrases receives significantly better ratings in informativeness and relevance than seq2seq (one-way ANOVA, p < 0.005).", "page": 7, "bbox": {"x1": 307.68, "x2": 525.12, "y1": 62.879999999999995, "y2": 112.32}}, {"filename": "../figure/image/1354-Figure4-1.png", "caption": "Figure 4: Sample arguments generated by human, our system, and seq2seq trained with evidence. Only the main thesis is shown for the input OP. System generations are manually detokenized and capitalized.", "page": 8, "bbox": {"x1": 68.64, "x2": 295.2, "y1": 62.879999999999995, "y2": 461.28}}, {"filename": "../figure/image/1354-Table1-1.png", "caption": "Table 1: Statistics for evidence sentence retrieval from Wikipedia. Considering query construction from either OP or target user arguments, we show the average numbers of topic signatures collected, queries constructed, and retrieved articles and sentences.", "page": 4, "bbox": {"x1": 306.71999999999997, "x2": 529.4399999999999, "y1": 62.879999999999995, "y2": 136.32}}]}