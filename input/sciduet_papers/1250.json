{"title": "Orthographic Features for Bilingual Lexicon Induction", "abstract": "Recent embedding-based methods in bilingual lexicon induction show good results, but do not take advantage of orthographic features, such as edit distance, which can be helpful for pairs of related languages. This work extends embedding-based methods to incorporate these features, resulting in significant accuracy gains for related languages.", "text": [{"id": 0, "string": "Introduction Over the past few years, new methods for bilingual lexicon induction have been proposed that are applicable to low-resource language pairs, for which very little sentence-aligned parallel data is available."}, {"id": 1, "string": "Parallel data can be very expensive to create, so methods that require less of it or that can utilize more readily available data are desirable."}, {"id": 2, "string": "One prevalent strategy involves creating multilingual word embeddings, where each language's vocabulary is embedded in the same latent space (Vuli\u0107 and Moens, 2013; Mikolov et al., 2013a; Artetxe et al., 2016) ; however, many of these methods still require a strong cross-lingual signal in the form of a large seed dictionary."}, {"id": 3, "string": "More recent work has focused on reducing that constraint."}, {"id": 4, "string": "Vuli\u0107 and Moens (2016) and Vulic and Korhonen (2016) use document-aligned data to learn bilingual embeddings instead of a seed dictionary."}, {"id": 5, "string": "Artetxe et al."}, {"id": 6, "string": "(2017) use a very small, automatically-generated seed lexicon of identical numerals as the initialization in an iterative self-learning framework to learn a linear mapping between monolingual embedding spaces; Zhang et al."}, {"id": 7, "string": "(2017) use an adversarial training method to learn a similar mapping."}, {"id": 8, "string": "Lample et al."}, {"id": 9, "string": "(2018a) use a series of techniques to align monolingual embedding spaces in a completely unsupervised way; their method is used by Lample et al."}, {"id": 10, "string": "(2018b) as the initialization for a completely unsupervised machine translation system."}, {"id": 11, "string": "These recent advances in unsupervised bilingual lexicon induction show promise for use in low-resource contexts."}, {"id": 12, "string": "However, none of them make use of linguistic features of the languages themselves (with the arguable exception of syntactic/semantic information encoded in the word embeddings)."}, {"id": 13, "string": "This is in contrast to work that predates many of these embedding-based methods that leveraged linguistic features such as edit distance and orthographic similarity: Dyer et al."}, {"id": 14, "string": "(2011) and Berg-Kirkpatrick et al."}, {"id": 15, "string": "(2010) investigate using linguistic features for word alignment, and Haghighi et al."}, {"id": 16, "string": "(2008) use linguistic features for unsupervised bilingual lexicon induction."}, {"id": 17, "string": "These features can help identify words with common ancestry (such as the English-Italian pair agile-agile) and borrowed words (macaronimaccheroni)."}, {"id": 18, "string": "The addition of linguistic features led to increased performance in these earlier models, especially for related languages, yet these features have not been applied to more modern methods."}, {"id": 19, "string": "In this work, we extend the modern embeddingbased approach of Artetxe et al."}, {"id": 20, "string": "(2017) with orthographic information in order to leverage similarities between related languages for increased accuracy in bilingual lexicon induction."}, {"id": 21, "string": "Background This work is directly based on the work of Artetxe et al."}, {"id": 22, "string": "(2017) ."}, {"id": 23, "string": "Following their work, let X \u2208 R |Vs|\u00d7d and Z \u2208 R |Vt|\u00d7d be the word embedding matrices of two distinct languages, referred to respectively as the source and target, such that each row corresponds to the d-dimensional embedding of a single word."}, {"id": 24, "string": "We refer to the ith row of one of these matrices as X i * or Z i * ."}, {"id": 25, "string": "The vocabularies for each language are V s and V t , respectively."}, {"id": 26, "string": "Also let D \u2208 {0, 1} |Vs|\u00d7|Vt| be a binary matrix representing a dictionary such that D ij = 1 if the ith word in the source language is aligned with the jth word in the target language."}, {"id": 27, "string": "We wish to find a mapping matrix W \u2208 R d\u00d7d that maps source embeddings onto their aligned target embeddings."}, {"id": 28, "string": "Artetxe et al."}, {"id": 29, "string": "(2017) define the optimal mapping matrix W * with the following equation, W * = arg min W i j D ij X i * W \u2212 Z j * 2 which minimizes the sum of the squared Euclidean distances between mapped source embeddings and their aligned target embeddings."}, {"id": 30, "string": "By normalizing and mean-centering X and Z, and enforcing that W be an orthogonal matrix (W T W = I), the above formulation becomes equivalent to maximizing the dot product between the mapped source embeddings and target embeddings, such that W * = arg max W Tr(XW Z T D T ) where Tr(\u00b7) is the trace operator, the sum of all diagonal entries."}, {"id": 31, "string": "The optimal solution to this equa- tion is W * = U V T , where X T DZ = U \u03a3V T is the singular value decomposition of X T DZ."}, {"id": 32, "string": "This formulation requires a seed dictionary."}, {"id": 33, "string": "To reduce the need for a large seed dictionary, Artetxe et al."}, {"id": 34, "string": "(2017) propose an iterative, self-learning framework that determines W as above, uses it to calculate a new dictionary D, and then iterates until convergence."}, {"id": 35, "string": "In the dictionary induction step, they set D ij = 1 if j = arg max k (X i * W ) \u00b7 Z k * and D ij = 0 otherwise."}, {"id": 36, "string": "We propose two methods for extending this system using orthographic information, described in the following two sections."}, {"id": 37, "string": "Orthographic Extension of Word Embeddings This method augments the embeddings for all words in both languages before using them in the self-learning framework of Artetxe et al."}, {"id": 38, "string": "(2017) ."}, {"id": 39, "string": "To do this, we append to each word's embedding a vector of length equal to the size of the union of the two languages' alphabets."}, {"id": 40, "string": "Each position in this vector corresponds to a single letter, and its value is set to the count of that letter within the spelling of the word."}, {"id": 41, "string": "This letter count vector is then scaled by a constant before being appended to the base word embedding."}, {"id": 42, "string": "After appending, the resulting augmented vector is normalized to have magnitude 1."}, {"id": 43, "string": "Mathematically, let A be an ordered set of characters (an alphabet), containing all characters appearing in both language's alphabets: A = A source \u222a A target Let O source and O target be the orthographic extension matrices for each language, containing counts of the characters appearing in each word w i , scaled by a constant factor c e : O ij = c e \u00b7 count(A j , w i ), O \u2208 {O source , O target } Then, we concatenate the embedding matrices and extension matrices: X = [X; O source ], Z = [Z; O target ] Finally, in the normalized embedding matrices X and Z , each row has magnitude 1: X i * = X i * X i * , Z i * = Z i * Z i * These new matrices are used in place of X and Z in the self-learning process."}, {"id": 44, "string": "Orthographic Similarity Adjustment This method modifies the similarity score for each word pair during the dictionary induction phase of the self-learning framework of Artetxe et al."}, {"id": 45, "string": "(2017) , which uses the dot product of two words' embeddings to quantify similarity."}, {"id": 46, "string": "We modify this similarity score by adding a measure of orthographic similarity, which is a function of the normalized string edit distance of the two words."}, {"id": 47, "string": "The normalized edit distance is defined as the Levenshtein distance (L(\u00b7, \u00b7)) (Levenshtein, 1966) divided by the length of the longer word."}, {"id": 48, "string": "The Levenshtein distance represents the minimum number of insertions, deletions, and substitutions required to transform one word into the other."}, {"id": 49, "string": "The normalized edit distance function is denoted as NL(\u00b7, \u00b7)."}, {"id": 50, "string": "NL(w 1 , w 2 ) = L(w 1 , w 2 ) max(|w 1 |, |w 2 |) We define the orthographic similarity of two words w 1 and w 2 as log(2.0\u2212NL(w 1 , w 2 ))."}, {"id": 51, "string": "These similarity scores are used to form an orthographic similarity matrix S, where each entry corresponds to a source-target word pair."}, {"id": 52, "string": "Each entry is first scaled by a constant factor c s ."}, {"id": 53, "string": "This matrix is added to the standard similarity matrix, XW Z T ."}, {"id": 54, "string": "S ij = c s \u00b7log(2.0\u2212NL(w i , w j )), w i \u2208 V s , w j \u2208 V t The vocabulary for each language is 200,000 words, so computing a similarity score for each pair would involve 40 billion edit distance calculations."}, {"id": 55, "string": "Also, the vast majority of word pairs are orthographically very dissimilar, resulting in a normalized edit distance close to 1 and an orthographic similarity close to 0, having little to no effect on the overall estimated similarity."}, {"id": 56, "string": "Therefore, we only calculate the edit distance for a subset of possible word pairs."}, {"id": 57, "string": "Thus, the actual orthographic similarity matrix that we use is as follows: S ij = S ij w i , w j \u2208 symDelete(V t ,V s ,k) 0 otherwise This subset of word pairs was chosen using an adaptation of the Symmetric Delete spelling correction algorithm described by Garbe (2012) , which we denote as symDelete(\u00b7,\u00b7,\u00b7)."}, {"id": 58, "string": "This algorithm takes as arguments the target vocabulary, source vocabulary, and a constant k, and identifies all source-target word pairs that are identical after k or fewer deletions from each word; that is, all pairs where each is reachable from the other with no more than k insertions and k deletions."}, {"id": 59, "string": "For example, the Italian-English pair modernomodern will be identified with k = 1, and the pair tollerante-tolerant will be identified with k = 2."}, {"id": 60, "string": "The algorithm works by computing all strings formed by k or fewer deletions from each target word, stores them in a hash table, then does the same for each source word and generates sourcetarget pairs that share an entry in the hash table."}, {"id": 61, "string": "The complexity of this algorithm can be expressed as O(|V |l k ), where V = V t \u222a V s is the combined vocabulary and l is the length of the longest word in V ."}, {"id": 62, "string": "This is linear with respect to the vocabulary size, as opposed to the quadratic complexity required for computing the entire matrix."}, {"id": 63, "string": "However, the algorithm is sensitive to both word length and the choice of k. In our experiments, we found that ignoring all words of length greater than 30 allowed the algorithm to complete very quickly while skipping less than 0.1% of the data."}, {"id": 64, "string": "We also used small values of k (0 < k < 4), and used k = 1 for our final results, finding no significant benefit from using a larger value."}, {"id": 65, "string": "Experiments We use the datasets used by Artetxe et al."}, {"id": 66, "string": "(2017) , consisting of three language pairs: English-Italian, English-German, and English-Finnish."}, {"id": 67, "string": "The English-Italian dataset was introduced in Dinu and Baroni (2014) ; the other datasets were created by Artetxe et al."}, {"id": 68, "string": "(2017) ."}, {"id": 69, "string": "Each dataset includes monolingual word embeddings (trained with word2vec (Mikolov et al., 2013b) ) for both languages and a bilingual dictionary, separated into a training and test set."}, {"id": 70, "string": "We do not use the training set as the input dictionary to the system, instead using an automatically-generated dictionary consisting only of numeral identity translations (such as 2-2, 3-3, et cetera) as in Artetxe et al."}, {"id": 71, "string": "(2017) ."}, {"id": 72, "string": "1 However, because the methods presented in this work feature tunable hyperparameters, we use a portion of the training set as devel- Results and Discussion For our experiments with orthographic extension of word embeddings, each embedding was extended by the size of the union of the alphabets of both languages."}, {"id": 73, "string": "The size of this union was 199 for English-Italian, 200 for English-German, and 287 for English-Finnish."}, {"id": 74, "string": "These numbers are perhaps unintuitively high."}, {"id": 75, "string": "However, the corpora include many other characters, including diacritical markings and various symbols (%, [, !, etc.)"}, {"id": 76, "string": "that are an indication that tokenization of the data could be improved."}, {"id": 77, "string": "We did not filter these characters in this work."}, {"id": 78, "string": "For our experiments with orthographic similarity adjustment, the heuristic identified approximately 2 million word pairs for each language pair out of a possible 40 billion, resulting in significant computation savings."}, {"id": 79, "string": "Figure 1 shows the results on the development data."}, {"id": 80, "string": "Based on these results, we selected c e = 1 8 and c s = 1 as our hyperparameters."}, {"id": 81, "string": "The local optima were not identical for all three languages, but we felt that these values struck the best compromise among them."}, {"id": 82, "string": "Table 1 compares our methods against the system of Artetxe et al."}, {"id": 83, "string": "(2017) , using scaling factors selected based on development data results."}, {"id": 84, "string": "Because approximately 20% of source-target pairs in the dictionary were identical, we also extended all systems to guess the identity translation if the source word appeared in the target vocabulary."}, {"id": 85, "string": "This improved accuracy in most cases, with some exceptions for English-Italian."}, {"id": 86, "string": "We also experimented with both methods together, and found that this was the best of the settings that did not include the identity translation component; with the identity component included, however, the embedding extension method alone was best for English-Finnish."}, {"id": 87, "string": "The fact that Finnish is the only language here that is not in the Indo-European family (and has fewer words borrowed from English or its ancestors) may explain why the performance trends for English-Finnish were different than those of the other two language pairs."}, {"id": 88, "string": "In addition to identifying orthographically similar words, the extension method is capable of learning a mapping between source and target letters, which could partially explain its improved performance over our edit distance method."}, {"id": 89, "string": "Table 2 shows some correct translations from our system that were missed by the baseline."}, {"id": 90, "string": "Conclusion and Future Work In this work, we presented two techniques (which can be combined) for improving embedding-based bilingual lexicon induction for related languages using orthographic information and no parallel data, allowing their use with low-resource language pairs."}, {"id": 91, "string": "These methods increased accuracy in our experiments, with both the combined and embedding extension methods providing significant gains over the baseline system."}, {"id": 92, "string": "In the future, we want to extend this work to related languages with different alphabets (experimenting with transliteration or phonetic transcription) and to extend other unsupervised bilingual lexicon induction systems, such as that of Lample et al."}, {"id": 93, "string": "(2018a) ."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 20}, {"section": "Background", "n": "2", "start": 21, "end": 36}, {"section": "Orthographic Extension of Word Embeddings", "n": "3", "start": 37, "end": 43}, {"section": "Orthographic Similarity Adjustment", "n": "4", "start": 44, "end": 64}, {"section": "Experiments", "n": "5", "start": 65, "end": 71}, {"section": "Results and Discussion", "n": "6", "start": 72, "end": 89}, {"section": "Conclusion and Future Work", "n": "7", "start": 90, "end": 93}], "figures": [{"filename": "../figure/image/1250-Figure1-1.png", "caption": "Figure 1: Performance on development data vs. scaling factors ce and cs. The lowest tested value for both was 10\u22126.", "page": 2, "bbox": {"x1": 74.88, "x2": 523.1999999999999, "y1": 65.75999999999999, "y2": 191.04}}, {"filename": "../figure/image/1250-Table2-1.png", "caption": "Table 2: Examples of pairs correctly identified by our embedding extension method that were incorrectly translated by the system of Artetxe et al. (2017). Our system can disambiguate semantic clusters created by word2vec.", "page": 3, "bbox": {"x1": 128.64, "x2": 469.44, "y1": 228.48, "y2": 305.28}}, {"filename": "../figure/image/1250-Table1-1.png", "caption": "Table 1: Comparison of methods on test data. Scaling constants ce and cs were selected based on performance on development data over all three language pairs. The last two rows report the results of using both methods together.", "page": 3, "bbox": {"x1": 113.75999999999999, "x2": 484.32, "y1": 62.879999999999995, "y2": 162.23999999999998}}]}