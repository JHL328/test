{"title": "Something's Brewing! Early Prediction of Controversy-causing Posts from Discussion Features", "abstract": "Controversial posts are those that split the preferences of a community, receiving both significant positive and significant negative feedback. Our inclusion of the word \"community\" here is deliberate: what is controversial to some audiences may not be so to others. Using data from several different communities on reddit.com, we predict the ultimate controversiality of posts, leveraging features drawn from both the textual content and the tree structure of the early comments that initiate the discussion. We find that even when only a handful of comments are available, e.g., the first 5 comments made within 15 minutes of the original post, discussion features often add predictive capacity to strong content-andrate only baselines. Additional experiments on domain transfer suggest that conversationstructure features often generalize to other communities better than conversation-content features do.", "text": [{"id": 0, "string": "Introduction Controversial content -that which attracts both positive and negative feedback -is not necessarily a bad thing; for instance, bringing up a point that warrants spirited debate can improve community health."}, {"id": 1, "string": "1 But regardless of the nature of the controversy, detecting potentially controversial content can be useful for both community members and community moderators."}, {"id": 2, "string": "Ordinary users, and in particular new users, might appreciate being warned that they need to add more nuance or qualification to their earlier posts."}, {"id": 3, "string": "2 Moderators could be alerted that the discussion ensuing from some content might need monitoring."}, {"id": 4, "string": "Alternately, they could draw community attention to issues possibly needing resolution: indeed, some sites already provide explicit sorting by controversy."}, {"id": 5, "string": "We consider the controversiality of a piece of content in the context of the community in which it is shared, because what is controversial to some audiences may not be so to others (Chen and Berger, 2013; Jang et al., 2017; Basile et al., 2017) ."}, {"id": 6, "string": "For example, we identify \"break up\" as a controversial concept in the relationships subreddit (a subreddit is a subcommunity hosted on the Reddit discussion site), but the same topic is associated with a lack of controversy in the AskWomen subreddit (where questions are posed for women to answer)."}, {"id": 7, "string": "Similarly, topics that are controversial in one community may simply not be discussed in another: our analysis identifies \"crossfit\", a type of workout, as one of the most controversial concepts in the subreddit Fitness."}, {"id": 8, "string": "However, while controversial topics may be community-specific, community moderators still may not be able to determine a priori which posts will attract controversy."}, {"id": 9, "string": "Many factors cannot be known ahead of time, e.g., a fixed set of topics may not be dynamic enough to handle a sudden current event, or the specific set of users that happen to be online at a given time may react in unpredictable ways."}, {"id": 10, "string": "Indeed, experiments have shown that, to a certain extent, the influence of early opinions on subsequent opinion dynamics can override the influence of an item's actual content (Salganik et al., 2006; Wu and Huberman, 2008; Muchnik et al., 2013; Weninger et al., 2015) ."}, {"id": 11, "string": "Hence, we propose an early-detection approach that uses not just the content of the initiating post, but also the content and structure of the initial responding comments."}, {"id": 12, "string": "In doing so, we unite streams of heretofore mostly disjoint research programs: see Figure 1 ."}, {"id": 13, "string": "Working with over 15,000 discus-Is the task to determine whether a textual item will provoke controversy?"}, {"id": 14, "string": "No, whether a topic (or entity/hashtag/word) has been controversial [a distinction also made by Addawood et al."}, {"id": 15, "string": "(2017) ] (Popescu and Pennacchiotti, 2010; Choi et al., 2010; Cao et al., 2015; Lourentzou et al., 2015; Addawood et al., 2017; Al-Ayyoub et al., 2017; Garimella et al., 2018) No, whether a conversation contained disagreement (Mishne and Glance, 2006; Yin et al., 2012; Allen et al., 2014; Wang and Cardie, 2014) or mapping the disagreements (Awadallah et al., 2012; Marres, 2015; Borra et al., 2015; Liu et al., 2018) No, the task is, for the given textual item, predict antisocial behavior in the ensuing discussion (Zhang et al., 2018b,a) , or subsequent comment volume/popularity/structure (Szabo and Huberman, 2010; Kim et al., 2011; Tatar et al., 2011; Backstrom et al., 2013; He et al., 2014; Zhang et al., 2018b) , or eventual post article score (Rangwala and Jamali, 2010; Szabo and Huberman, 2010) ,; but all where, like us, the paradigm is early detection No, only info available at the item's creation (Dori-Hacohen and Allan, 2013; Mejova et al., 2014; Klenner et al., 2014; Addawood et al., 2017; Timmermans et al., 2017; Rethmeier et al., 2018; Kaplun et al., 2018) or the entire ensuing revision/discussion history (Rad and Barbosa, 2012; ."}, {"id": 16, "string": "N.B."}, {"id": 17, "string": ": for Wikipedia articles, often controversy=non-vandalism reverts (Yasseri et al., 2012) ... although some, like us, treat controversy as domain-specific (Jang et al., 2017) and test domain transfer (Basile et al., 2017) ...using early reactions, which, recall, Salganik et al."}, {"id": 18, "string": "(2006) observe to be sometimes crucial?"}, {"id": 19, "string": "... and testing how well text/earlyconversation-structure features transfer across communities?"}, {"id": 20, "string": "This is our work."}, {"id": 21, "string": "No, early reversions (Sumi et al., 2011) aren't conversations as usually construed Figure 1 : How our research relates to prior work."}, {"id": 22, "string": "sion trees across six subreddits, we find that incorporating structural and textual features of budding comment trees improves predictive performance relatively quickly; for example, in one of the communities we consider, adding features taken from just the first 15 minutes of discussion significantly increases prediction performance, even though the average thread only contains 4 comments by that time (\u223c4% of all eventual comments)."}, {"id": 23, "string": "Additionally, we study feature transferability across domains (in our case, communities), training on one subreddit and testing on another."}, {"id": 24, "string": "While text features of comments carry the greatest predictive capacity in-domain, we find that discussion-tree and -rate features are less brittle, transferring better between communities."}, {"id": 25, "string": "Our results not only suggest the potential usefulness of granting controversy-prediction algorithms a small observation window to gauge community feedback, but also demonstrate the utility of our expressive feature set for early discussions."}, {"id": 26, "string": "Datasets Given our interest in community-specific controversiality, we draw data from reddit.com, which hosts several thousand discussion subcom-munities (subreddits) covering a variety of interests."}, {"id": 27, "string": "Our dataset, which attempts to cover all public posts and comments from Reddit's inception in 2007 until Feb. 2014, is derived from a combination of Jason Baumgartner's posts and comments sets and our own scraping efforts to fill in dataset gaps."}, {"id": 28, "string": "The result is a mostly-complete set of posts alongside associated comment trees."}, {"id": 29, "string": "3 We focus on six text-based 4 subreddits ranging over a variety of styles and topics: two Q&A subreddits: AskMen (AM) and AskWomen (AW); a specialinterest community, Fitness (FT); and three advice communities: LifeProTips (LT), personalfinance (PF), and relationships (RL)."}, {"id": 30, "string": "Each comprises tens of thousands of posts and hundreds of thousands to millions of comments."}, {"id": 31, "string": "In Reddit (similarly to other sites allowing explicit negative feedback, such as YouTube, imgur, 9gag, etc."}, {"id": 32, "string": "), users can give posts upvotes, increas-/r/LifeProTips (LT) 63 comments, 72% upvoted LPT: Check the Facebook app to find the owner of a lost smartphone or simply call her 'mum'?"}, {"id": 33, "string": "Also slightly less intrusive IMO."}, {"id": 34, "string": "comments, 72% upvoted LPT: get your pets to take their medicine with butter."}, {"id": 35, "string": "This is much better!"}, {"id": 36, "string": "I have been trying ice cream but my dog is too smart."}, {"id": 37, "string": "comments, 93% upvoted LPT: For a cleaner home with little effort, never leave a room empty-handed."}, {"id": 38, "string": "There is almost always something you can put back in its place on your way."}, {"id": 39, "string": "Woah."}, {"id": 40, "string": "237 comments, 71% upvoted **tl;dr** quit whining cuz r/fitness didn't respond they way you wanted..."}, {"id": 41, "string": "Unfortunately, I doubt this kind of post is going to change anything... comments, 63% upvoted Interesting New Study: Red Meat Linked With Increased Mortality Risk."}, {"id": 42, "string": "Thought this study is worth a discussion... Man, it seems like everything these days will lower your life span."}, {"id": 43, "string": "comments, 90% upvoted What type of snack should I have preworkout to avoid lethargy at the gym?"}, {"id": 44, "string": "I don't wanna be sluggish at the gym... Apples slices with peanut butter."}, {"id": 45, "string": "comments, 57% upvoted Tipping as legal discrimination: Black servers get tipped 3.25% less... [LINK] ..."}, {"id": 46, "string": "Tipping should be abandoned anyway, it's ridiculous.... comments, 62% upvoted Am I crazy for wanting this car/payment?"}, {"id": 47, "string": "Short of it .. car is $45,000..."}, {"id": 48, "string": "Needing a car for work and purchasing $45k car are two entirely different things."}, {"id": 49, "string": "comments, 97% upvoted Accumulating wealth via homeownership vs accumulating wealth as a renter."}, {"id": 50, "string": "One of the often cited benefits of homeownership ... Use this handy calculator from the NY Times."}, {"id": 51, "string": "If you're dilligent..."}, {"id": 52, "string": "Figure 2 : Examples of two controversial and one non-controversial post from three communities."}, {"id": 53, "string": "Also shown are the text of the first reply, the number of comments the post received, and its percent-upvoted."}, {"id": 54, "string": "ing a post's score, or downvotes, decreasing it."}, {"id": 55, "string": "5 While the semantics of up/down votes may vary based on community (and, indeed, each user may have their own views on what content should be upvoted and what downvoted), in aggregate, posts that split community reaction fundamentally differ from those that produce agreement."}, {"id": 56, "string": "Thus, in principle, posts that have unambiguously received both many upvotes and many downvotes should be deemed the most controversial."}, {"id": 57, "string": "Percent Upvoted on Reddit."}, {"id": 58, "string": "We quantify the relative proportion of upvotes and downvotes on a post using percent-upvoted, a measure provided by Reddit that gives an estimate of the percent of all votes on a post that are upvotes."}, {"id": 59, "string": "In practice, exact values of percent-upvoted are not directly available; the site adds \"vote fuzzing\" to fight vote manipulation."}, {"id": 60, "string": "6 To begin with, we first discard posts with fewer than 30 comments."}, {"id": 61, "string": "7 Then, we query for the noisy percent-upvoted from each post ten times using the Reddit API, and take a mean to produce a final estimate."}, {"id": 62, "string": "Post Outcomes."}, {"id": 63, "string": "To better understand the interplay between upvotes and downvotes, we first explore the outcomes for posts both in terms of percent-upvoted and the number of comments; do-5 Vote timestamps are not publicly available."}, {"id": 64, "string": "6 Prior to Dec. 2016, vote information was fuzzed according to a different algorithm; however, vote statistics for all posts were recomputed according to a new algorithm that, according to a reddit moderator, can \"actually be trusted;\" https://goo.gl/yHWeJp 7 The intent is to only consider posts receiving enough community attention for us to reliably compare upvote counts with downvotes."}, {"id": 65, "string": "We use number of comments as a proxy for aggregate attention because Reddit does not surface the true number of votes."}, {"id": 66, "string": "/r/Fitness (FT) /r/personalfinance (PF) ing so on a per-community basis has the potential to surface any subreddit-specific effects."}, {"id": 67, "string": "In addition, we compute the median number of comments for posts falling into each bin of the histogram."}, {"id": 68, "string": "The resulting plots are given in Figure 3 ."}, {"id": 69, "string": "In general, posts receive mostly positive feedback in aggregate, though the mean percentupvoted varies between communities (Table 1) ."}, {"id": 70, "string": "There is also a positive correlation between a post's percent-upvoted and the number of comments it receives."}, {"id": 71, "string": "This relationship is unsurprising, given that Reddit displays higher rated posts to more users."}, {"id": 72, "string": "A null hypothesis, which we compare to empirically in our prediction experiments, is that popularity and percent-upvoted simply carry the same information."}, {"id": 73, "string": "However, we have reason to doubt this null hypothesis, as quite a few posts receive significant attention despite having a low percentupvoted ( Figure 2 )."}, {"id": 74, "string": "Assigning Controversy Labels To Posts."}, {"id": 75, "string": "We assign binary controversy labels (i.e., relatively controversial vs. relatively non-controversial) to posts according to the following process: first, we discard posts where the observed variability across 10 API queries for percent-upvoted exceeds 5%; in these cases, we assume that there are too few total votes for a stable estimate."}, {"id": 76, "string": "Next, we discard posts where neither the observed upvote ratio nor the observed score 8 vary at all; in these cases, we cannot be sure that the upvote ratio is insensitive to the vote fuzzing function."}, {"id": 77, "string": "9 Fi-  nally, we sort each community's surviving posts by upvote percentage, and discard the small number of posts with percent-upvoted below 50%."}, {"id": 78, "string": "10 The top quartile of posts according to this ranking (i.e., posts with mostly only upvotes) are labeled \"non-controversial.\""}, {"id": 79, "string": "The bottom quartile of posts, where the number of downvotes cannot exceed but may approach the number of upvotes, are labeled as \"controversial.\""}, {"id": 80, "string": "For each community, this process yields a balanced, labeled set of controversial/non-controversial posts."}, {"id": 81, "string": "Table 1 contains the number of posts/comments for each community after the above filtration process, and the percent-upvoted for the controversial/noncontroversial sets."}, {"id": 82, "string": "Quantitative Validation of Labels Reddit provides a sort-by-controversy function, and we wanted to ensure that our controversy labeling method aligned with this ranking."}, {"id": 83, "string": "11 We contacted Reddit itself, but they were unable to provide details."}, {"id": 84, "string": "Hence, we scraped the 1K most controversial posts according to Reddit (1K is the max that Reddit provides) for each community over the past year (as of October 2018)."}, {"id": 85, "string": "Next, we sampled posts that did not appear on Reddit's controversial list in the year prior to October 2018 to create a 1:k ratio sample of Reddit-controversial posts and non-Reddit-controversial posts for k \u2208 {1, 2, 3}, k = 3 being the most difficult setting."}, {"id": 86, "string": "Then, we applied the filtering/labeling method described above, and measured how well our process matched Reddit's ranking scheme, i.e., the \"controversy\" label applied by our method matched the \"controversy\" label assigned by Reddit."}, {"id": 87, "string": "Our labeling method achieves high precision in identifying controversial/non-controversial posts."}, {"id": 88, "string": "While a large proportion of posts are discarded, the labels assigned to surviving posts match those assigned by Reddit with the following F-measures at k = 3 (the results for k = 1, 2 are higher): 12 AM AW FT LT PF RL In all cases, the precision for the non-controversial label is perfect, i.e., our filtration method never labeled a Reddit-controversial post as noncontroversial."}, {"id": 89, "string": "The precision of the controversy label was also high, but imperfect; errors could be a result of, e.g., Reddit's controversy ranking being limited to 1K posts, or using internal data, etc."}, {"id": 90, "string": "Figure 2 gives examples of controversial and noncontroversial posts from three of the communities we consider, alongside the text of the first comment made in response to those posts."}, {"id": 91, "string": "Topical differences."}, {"id": 92, "string": "A priori, we expect that the topical content of posts may be related to how controversial they become (see prior work in Fig."}, {"id": 93, "string": "1 )."}, {"id": 94, "string": "We ran LDA (Blei et al., 2003) with 10 topics on posts from each community independently, and compared the differences in mean topic frequency between controversial and non-controversial posts."}, {"id": 95, "string": "We observe communityspecific patterns, e.g., in relationships, posts about family (top words in topic: \"family parents mom dad\") are less controversial than those associated with romantic relationships (top words: \"relationship, love, time, life\"); in AskWomen, a gender topic (\"women men woman male\") tends to be associated with more controversy than an advice-seeking topic (\"im dont feel ive\") Wording differences."}, {"id": 96, "string": "We utilize Monroe et al."}, {"id": 97, "string": "'s (2008) algorithm for comparing language usage in two bodies of text; the method places a Dirichlet prior over n-grams (n=1,2,3) and estimates Zscores on the difference in rate-usage between controversial and non-controversial posts."}, {"id": 98, "string": "This analysis reveals many community-specific patterns, e.g., phrases associated with controversy include \"crossfit\" in Fitness, \"cheated on my\" in relationships, etc."}, {"id": 99, "string": "What's controversial in one community may be non-controversial in another, e.g., \"my parents\" is associated with controversy in personalfinance (e.g., \"live with my parents\") but strongly associated with lack of controversy in relationships (e.g., \"my parents got divorced\")."}, {"id": 100, "string": "We also observe that some communities share commonalities in phrasing, e.g., \"do you think\" is associated with controversy in both AskMen and AskWomen, whereas \"what are some\" is associated with a lack of controversy in both."}, {"id": 101, "string": "Qualitative Validation of Labels Early Discussion Threads We now analyze comments posted in early discussion threads for controversial vs. noncontroversial posts."}, {"id": 102, "string": "In this section, we focus on comments posted within one hour of the original submission, although we consider a wider range of times in later experiments."}, {"id": 103, "string": "Comment Text."}, {"id": 104, "string": "We mirrored the n-gram analysis conducted in the previous section, but, rather than the text of the original post, focused on the text of comments."}, {"id": 105, "string": "Many patterns persist, but the conversational framing changes, e.g., \"I cheated\" in the posts of relationships is mirrored by \"you cheated\" in the comments."}, {"id": 106, "string": "Community differences again appear: e.g., \"birth control\" indicated controversy when it appears in the comments for relationships, but not for AskWomen."}, {"id": 107, "string": "Comment Tree Structure."}, {"id": 108, "string": "While prior work in early prediction mostly focuses on measuring rate of early responses, we postulate that more expressive, structural features of conversation trees may also carry predictive capacity."}, {"id": 109, "string": "Figure 4 gives samples of conversation trees that developed on Reddit posts within one hour of the original post being made."}, {"id": 110, "string": "There is significant diversity among tree size and shape."}, {"id": 111, "string": "To quantify these differences, we introduce two sets of features: C-RATE features, which encode the rate of commenting/number of comments; 13 and C-TREE features, which encode structural aspects of discussion trees."}, {"id": 112, "string": "14 We then examine whether or not tree features correlate with controversy after controlling for popularity."}, {"id": 113, "string": "Using binary logistic regression, after controlling for C-RATE, C-TREE features extracted from comments made within one hour of the original post improve model fit in all cases except for personalfinance (p < .05, LL-Ratio test)."}, {"id": 114, "string": "We repeated the experiment, but also controlled for eventual popularity 15 in addition to C-RATE, and observed the same result."}, {"id": 115, "string": "This provides evidence that structural features of conversation trees are predictive, though which tree feature is most important according to these experiments is community-specific."}, {"id": 116, "string": "For example, for the models without eventual popularity information, the C-TREE feature with largest coefficient in AskWomen and AskMen was the max-depth ratio, but it was the Wiener index in Fitness."}, {"id": 117, "string": "Early Prediction of Controversy We shift our focus to the task of predicting controversy on Reddit."}, {"id": 118, "string": "In general, tools that predict controversy are most useful if they only require information available at the time of submission or as soon as possible thereafter."}, {"id": 119, "string": "We note that while the causal relationship between vote totals and comment threads is not entirely clear (e.g., perhaps the comment threads cause more up/down votes on the post), predicting the ultimate outcome of posts is still useful for community moderators."}, {"id": 120, "string": "Experimental protocols."}, {"id": 121, "string": "All classifiers are bi-13 Specifically: total number of comments, the logged time between OP and the first reply, and the average logged parentchild reply time over pairs of comments."}, {"id": 122, "string": "14 Specifically: max depth/total comment ratio, proportion of comments that were top-level (i.e., made in direct reply to the original post), average node depth, average branching factor, proportion of top-level comments replied to, Gini coefficient of replies to top-level comments (to measure how \"clustered\" the total discussion is), and Wiener Index of virality (which measures the average pairwise path-length between all nodes in the conversation tree (Wiener, 1947; Goel et al., 2015) )."}, {"id": 123, "string": "15 We added in the logged number of eventual comments, and also whether or not the post received an above-median number of comments."}, {"id": 124, "string": "nary (i.e., controversial vs. non-controversial) and, because the classes are in 50/50 balance, we compare algorithms according to their accuracy."}, {"id": 125, "string": "Experiments are conducted as 15-fold cross validation with random 60/20/20 train/dev/test splits, where the splits are drawn to preserve the 50/50 label distribution."}, {"id": 126, "string": "For non-neural, feature-based classifiers, we use linear models."}, {"id": 127, "string": "16 For BiLSTM models, 17 we use Tensorflow (Abadi et al., 2015) ."}, {"id": 128, "string": "Whenever a feature is ill-defined (e.g., if it is a comment text feature, but there are no comments at time t) the column mean of the training set for each cross-validation split is substituted."}, {"id": 129, "string": "Similarly, if a comment's body is deleted, it is ignored by text processing algorithms."}, {"id": 130, "string": "We perform both Wilcoxon signed-rank tests (Dem\u0161ar, 2006) and two-sided corrected resampled t-tests (Nadeau and Bengio, 2000) to estimate statistical significance, taking the maximum of the two resulting p-values to err on the conservative side and reduce the chance of Type I error."}, {"id": 131, "string": "Comparing Text Models The goal of this section is to compare text-only models for classifying controversial vs. noncontroversial posts."}, {"id": 132, "string": "Algorithms are given access to the full post titles and bodies, unless stated otherwise."}, {"id": 133, "string": "HAND."}, {"id": 134, "string": "We consider a number of hand-designed features related to the textual content of posts inspired by Tan et al."}, {"id": 135, "string": "(2016) ."}, {"id": 136, "string": "18 TFIDF."}, {"id": 137, "string": "We encode posts according to tfidf feature vectors."}, {"id": 138, "string": "Words are included in the vocabulary if they appear more than 5 times in the corresponding cross-validation split."}, {"id": 139, "string": "16 We cross-validate regularization strength 10\u02c6(-100,-5,-4,-3,-2,-1,0,1), model type (SVM vs. Logistic L1 vs. Logistic L2 vs. Logistic L1/L2), and whether or not to apply feature standardization for each feature set and cross-validation split separately."}, {"id": 140, "string": "These are trained using lightning (http: //contrib.scikit-learn.org/lightning/)."}, {"id": 141, "string": "17 We optimize using Adam (Kingma and Ba, 2014) with LR=.001 for 20 epochs, apply dropout with p = .2, select the model checkpoint that performs best over the validation set, and cross-validate the model's dimension (128 vs. 256) and the number of layers (1 vs. 2) separately for each crossvalidation split."}, {"id": 142, "string": "18 Specifically: for the title and text body separately, length, type-token ratio, rate of first-person pronouns, rate of secondperson pronouns, rate of question-marks, rate of capitalization, and Vader sentiment (Hutto and Gilbert, 2014) ."}, {"id": 143, "string": "Combining the post title and post body: number of links, number of Reddit links, number of imgur links, number of sentences, Flesch-Kincaid readability score, rate of italics, rate of boldface, presence of a list, and the rate of word use from 25 Empath wordlists (Fast et al., 2016) , which include various categories, such as politeness, swearing, sadness, etc."}, {"id": 144, "string": "W2V."}, {"id": 145, "string": "We consider a mean, 300D word2vec (Mikolov et al., 2013) embedding representation, computed from a GoogleNews corpus."}, {"id": 146, "string": "ARORA."}, {"id": 147, "string": "A slight modification of W2V, proposed by Arora et al."}, {"id": 148, "string": "(2017) , serves as a \"tough to beat\" baseline for sentence representations."}, {"id": 149, "string": "LSTM."}, {"id": 150, "string": "We train a Bi-LSTM (Graves and Schmidhuber, 2005 ) over the first 128 tokens of titles + post text, followed by a mean pooling layer, and then a logistic regression layer."}, {"id": 151, "string": "The LSTM's embedding layer is initialized with the same word2vec embeddings used in W2V."}, {"id": 152, "string": "Markdown formatting artifacts are discarded."}, {"id": 153, "string": "BERT-LSTM."}, {"id": 154, "string": "Recently, features extracted from fixed, pretrained, neural language models have resulted in high performance on a range of language tasks."}, {"id": 155, "string": "Following the recommendations of \u00a75.4 of Devlin et al."}, {"id": 156, "string": "(2019) , we consider representing posts by extracting BERT-Large embeddings computed for the first 128 tokens of titles + post text; we average the final 4 layers of the 24-layer, pretrained Transformer-decoder network (Vaswani et al., 2017) ."}, {"id": 157, "string": "These token-specific vectors are then passed to a Bi-LSTM, a mean pooling layer, and a logistic classification layer."}, {"id": 158, "string": "We keep markdown formatting artifacts because BERT's token vocabulary are WordPiece subtokens (Wu et al., 2016) , which are able to incorporate arbitrary punctuation without modification."}, {"id": 159, "string": "BERT-MP."}, {"id": 160, "string": "Instead of training a Bi-LSTM over BERT features, we mean pool over the first 128 tokens, apply L2 normalization to the resulting representations, reduce to 100 dimensions using PCA, 19 and train a linear classifier on top."}, {"id": 161, "string": "BERT-MP-512."}, {"id": 162, "string": "The same as BERT-MP, except the algorithm is given access to 512 tokens (the maximum allowed by BERT-Large) instead of 128."}, {"id": 163, "string": "Results: Table 2 gives the performance of each text classifier for each community."}, {"id": 164, "string": "In general, the best performing models are based on the BERT features, though HAND+W2V performs well, too."}, {"id": 165, "string": "However, no performance gain is achieved when adding hand designed features to BERT."}, {"id": 166, "string": "This may be because BERT's subtokenization scheme incorporates punctuation, link urls, etc., which are similar to the features captured by HAND."}, {"id": 167, "string": "Adding an LSTM over BERT features is comparable to mean pooling over the sequence; similarly, considering 128 tokens vs. 512 tokens results in comparable  performance."}, {"id": 168, "string": "Based on the results of this experiment, we adopt BERT-MP-512 to represent text in experiments for the rest of this work."}, {"id": 169, "string": "Post-time Metadata Many non-content factors can influence community reception of posts, e.g., Hessel et al."}, {"id": 170, "string": "(2017) find that when a post is made on Reddit can significantly influence its eventual popularity."}, {"id": 171, "string": "TIME."}, {"id": 172, "string": "These features encode when a post was created."}, {"id": 173, "string": "These include indicator variables for year, month, day-of-week, and hour-of-day."}, {"id": 174, "string": "AUTHOR."}, {"id": 175, "string": "We add an indicator variable for each user that appears at least 3 times in the training set, encoding the hypothesis that some users may simply have a greater propensity to post controversial content."}, {"id": 176, "string": "The results of incorporating the metadata features on top of TEXT are given in Table 3 ."}, {"id": 177, "string": "While incorporating TIME features on top of TEXT results in consistent improvements across all communities, incorporating author features on top of TIME+TEXT does not."}, {"id": 178, "string": "We adopt our highest performing models, TEXT+TIME, as a strong posttime baseline."}, {"id": 179, "string": "Early Discussion Features Basic statistics of early comments."}, {"id": 180, "string": "We augment the post-time features with early-discussion feature sets by giving our algorithms access to comments from increasing observation periods."}, {"id": 181, "string": "Specifically, we train linear classifiers by combining our best post-time feature set (TEXT+TIME) with features derived from comment trees available after t minutes, and sweep t from t = 15 to t = 180 minutes in 15 minute intervals."}, {"id": 182, "string": "Figure 6 plots the median number of comments available per thread at different t values for each community."}, {"id": 183, "string": "The amount of data available for the early-prediction algorithms to consider varies significantly, e.g., while AskMen threads have a median 10 comments available at 45 minutes, Life-ProTips posts do not reach that threshold even after 3 hours, and we thus expect that it will be a harder setting for early prediction."}, {"id": 184, "string": "We see, too, that even our maximal 3 hour window is still early in a post's lifecycle, i.e., posts tend to receive significant attention afterwards: only 15% (LT) to 32% (AW) of all eventual comments are available per thread at this time, on average."}, {"id": 185, "string": "Figure 7 gives the distribution of the number of comments available for controversial/non-controversial posts on AskWomen at t = 60 minutes."}, {"id": 186, "string": "As with the other communities we consider, the distribution of number of available posts is not overly-skewed, i.e., most posts in our set (we filtered out posts with less than 30 comments) get at least some early comments."}, {"id": 187, "string": "We explore a number of feature sets based on early comment trees (comment feature sets are prefixed with \"C-\"): C-RATE and C-TREE."}, {"id": 188, "string": "We described these in \u00a73."}, {"id": 189, "string": "C-TEXT."}, {"id": 190, "string": "For each comment available at a given observation period, we extract the BERT-MP-512 embedding."}, {"id": 191, "string": "Then, for each conversation thread, we take a simple mean over all comment representations."}, {"id": 192, "string": "While we tried several more expressive means of encoding the text of posts in comment trees, this simple method proved surprisingly effective."}, {"id": 193, "string": "20 Sweeping over time."}, {"id": 194, "string": "Figure 5 gives the performance of the post-time baseline combined with comment features while sweeping t from 15 to 180 minutes."}, {"id": 195, "string": "For five of the six communities we consider, the performance of the comment feature classifier significantly (p < .05) ex-  ceeds the performance of the post-time baseline in less than three hours of observation, e.g., in the case of AskMen and AskWomen, significance is achieved within 15 and 45 minutes, respectively."}, {"id": 196, "string": "In general, C-RATE improves only slightly over post only, even though rate features have proven useful in predicting popularity in prior work (He et al., 2014) ."}, {"id": 197, "string": "While adding C-TREE also improves performance, comment textual content is the biggest source of predictive gain."}, {"id": 198, "string": "These results demonstrate i) that incorporating a variety of early conversation features, e.g., structural features of trees, can improve performance of contro-versy prediction over strong post-time baselines, and ii) the text content of comments contains significant complementary information to post text."}, {"id": 199, "string": "Controversy prediction = popularity prediction."}, {"id": 200, "string": "We return to a null hypothesis introduced in \u00a72: that the controversy prediction models we consider here are merely learning the same patterns that a popularity prediction algorithm would learn."}, {"id": 201, "string": "We train popularity prediction algorithms, and then attempt to use them at test-time to predict controversy; under the null hypothesis, we would expect little to no performance degradation when training on these alternate labels."}, {"id": 202, "string": "We 1) train binary popularity predictors using post text/time + comment rate/tree/text features available at t = 180, 21 and use them to predict controversy at test-time; and 2) consider an oracle that predicts the true popularity label at test-time; this oracle is quite strong, as prior work suggests that perfectly predicting popularity is impossible (Salganik et al., 2006) ."}, {"id": 203, "string": "In all cases, the best popularity predictor does not achieve performance comparable to even the post-only baseline."}, {"id": 204, "string": "For 3 of 6 communities, even the popularity oracle does not beat post time baseline, and in all cases, the mean performance of the controversy predictor exceeds the oracle by t = 180."}, {"id": 205, "string": "Thus, in our setting, controversy predictors and popularity predictors learn disjoint patterns."}, {"id": 206, "string": "Domain Transfer We conduct experiments where we train models on one subreddit and test them on another."}, {"id": 207, "string": "For these experiments, we discard all posting time features, and compare C-(TEXT+TREE+RATE) to C-(TREE+RATE); the goal is to empirically examine the hypothesis in \u00a71: that controversial text is community-specific."}, {"id": 208, "string": "To measure performance differences in the domain transfer setting, we compute the percentage accuracy drop relative to a constant prediction baseline when switching the training subreddit from the matching subreddit to a different one."}, {"id": 209, "string": "For example, at t = 60, we observe that raw accuracy drops from 65.6 \u2192 55.8 when training on AskWomen and testing on AskMen when considering text, rate, and tree features together; given that the constant prediction baseline achieves 50% accuracy, we compute the percent drop in accuracy as: (55.8 \u2212 50)/(65.6 \u2212 50) \u2212 1 = \u221263%."}, {"id": 210, "string": "The results of this experiment (Figure 8 ) suggest that while text features are quite strong indomain, they are brittle and community specific."}, {"id": 211, "string": "Conversely, while rate and structural comment tree features do not carry as much in-domain predictive capacity on their own, they generally transfer better between communities, e.g., for RATE+TREE, there is very little performance drop-off when training/testing on AskMen/AskWomen (this holds for all timing cutoffs we considered)."}, {"id": 212, "string": "Similarly, in the case of training on Fitness and testing on PersonalFinance, we sometimes observe a performance increase when switching domains (e.g., at t = 60); we suspect that this could be an effect of dataset size, as our Fitness dataset has the most posts of any subreddit we consider, and PersonalFinance has the least."}, {"id": 213, "string": "Figure 8 : Average cross-validated performance degradation for transfer learning setting at t = 180 and t = 60; the y-axis is the training subreddit and the xaxis is testing."}, {"id": 214, "string": "For a fixed test subreddit, each column gives the percent accuracy drop when switching from the matching training set to a domain transfer setting."}, {"id": 215, "string": "In general, while incorporating comment text features results in higher accuracy overall, comment rate + tree features transfer between communities with less performance degradation."}, {"id": 216, "string": "Conclusion We demonstrated that early discussion features are predictive of eventual controversiality in several reddit communities."}, {"id": 217, "string": "This finding was dependent upon considering an expressive feature set of early discussions; to our knowledge, this type of feature set (consisting of text, trees, etc.)"}, {"id": 218, "string": "hadn't been thoroughly explored in prior early prediction work."}, {"id": 219, "string": "One promising avenue for future work is to examine higher-quality textual representations for conversation trees."}, {"id": 220, "string": "While our mean-pooling method did produce high performance, the resulting classifiers do not transfer between domains effectively."}, {"id": 221, "string": "Developing a more expressive algorithm (e.g., one that incorporates reply-structure relationships) could boost predictive performance, and enable textual features to be less brittle."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 25}, {"section": "Datasets", "n": "2", "start": 26, "end": 33}, {"section": "comments, 72% upvoted", "n": "62", "start": 34, "end": 36}, {"section": "comments, 93% upvoted", "n": "115", "start": 37, "end": 40}, {"section": "comments, 63% upvoted", "n": "66", "start": 41, "end": 42}, {"section": "comments, 90% upvoted", "n": "394", "start": 43, "end": 44}, {"section": "comments, 57% upvoted", "n": "61", "start": 45, "end": 45}, {"section": "comments, 62% upvoted", "n": "125", "start": 46, "end": 48}, {"section": "comments, 97% upvoted", "n": "110", "start": 49, "end": 81}, {"section": "Quantitative Validation of Labels", "n": "2.1", "start": 82, "end": 100}, {"section": "Early Discussion Threads", "n": "3", "start": 101, "end": 116}, {"section": "Early Prediction of Controversy", "n": "4", "start": 117, "end": 130}, {"section": "Comparing Text Models", "n": "4.1", "start": 131, "end": 168}, {"section": "Post-time Metadata", "n": "4.2", "start": 169, "end": 178}, {"section": "Early Discussion Features", "n": "4.3", "start": 179, "end": 205}, {"section": "Domain Transfer", "n": "4.3.1", "start": 206, "end": 215}, {"section": "Conclusion", "n": "5", "start": 216, "end": 221}], "figures": [{"filename": "../figure/image/1337-Figure1-1.png", "caption": "Figure 1: How our research relates to prior work.", "page": 1, "bbox": {"x1": 72.0, "x2": 524.16, "y1": 66.24, "y2": 364.32}}, {"filename": "../figure/image/1337-Table2-1.png", "caption": "Table 2: Average accuracy for each post-time, textonly predictor for each dataset, averaged over 15 crossvalidation splits; standard errors are \u00b1.6, on average (and never exceed \u00b11.03). Bold is best in column; underlined are statistically indistinguishable from best in column (p < .01)", "page": 6, "bbox": {"x1": 72.0, "x2": 292.32, "y1": 62.4, "y2": 174.23999999999998}}, {"filename": "../figure/image/1337-Table3-1.png", "caption": "Table 3: Post-time only results: the effect of incorporating timing and author identity features.", "page": 6, "bbox": {"x1": 84.96, "x2": 276.0, "y1": 268.8, "y2": 312.96}}, {"filename": "../figure/image/1337-Figure3-1.png", "caption": "Figure 3: For each community, a histogram of percent-upvoted and the median number of comments per bin.", "page": 2, "bbox": {"x1": 385.91999999999996, "x2": 516.48, "y1": 62.4, "y2": 222.72}}, {"filename": "../figure/image/1337-Figure2-1.png", "caption": "Figure 2: Examples of two controversial and one non-controversial post from three communities. Also shown are the text of the first reply, the number of comments the post received, and its percent-upvoted.", "page": 2, "bbox": {"x1": 72.0, "x2": 372.0, "y1": 77.75999999999999, "y2": 209.28}}, {"filename": "../figure/image/1337-Figure5-1.png", "caption": "Figure 5: Classifier accuracy for increasing periods of observation; the \u201c+\u201d in the legend indicates that a feature set is combined with the feature sets below. ts, the time the full feature set first achieves statistical significance over the post-time only baseline, is given for each community (if significance is achieved).", "page": 7, "bbox": {"x1": 86.88, "x2": 516.0, "y1": 62.4, "y2": 337.91999999999996}}, {"filename": "../figure/image/1337-Figure6-1.png", "caption": "Figure 6: Observation period versus median number of comments available.", "page": 7, "bbox": {"x1": 84.96, "x2": 165.6, "y1": 407.03999999999996, "y2": 495.35999999999996}}, {"filename": "../figure/image/1337-Figure7-1.png", "caption": "Figure 7: Histogram of the number of comments available per thread at t = 60 minutes in AskWomen.", "page": 7, "bbox": {"x1": 196.79999999999998, "x2": 280.32, "y1": 403.68, "y2": 488.15999999999997}}, {"filename": "../figure/image/1337-Table1-1.png", "caption": "Table 1: Dataset statistics: number of posts, number of comments, mean percent-upvoted for the controversial and non-controversial classes.", "page": 3, "bbox": {"x1": 76.8, "x2": 283.2, "y1": 62.4, "y2": 144.96}}, {"filename": "../figure/image/1337-Figure8-1.png", "caption": "Figure 8: Average cross-validated performance degradation for transfer learning setting at t = 180 and t = 60; the y-axis is the training subreddit and the xaxis is testing. For a fixed test subreddit, each column gives the percent accuracy drop when switching from the matching training set to a domain transfer setting. In general, while incorporating comment text features results in higher accuracy overall, comment rate + tree features transfer between communities with less performance degradation.", "page": 8, "bbox": {"x1": 306.71999999999997, "x2": 526.0799999999999, "y1": 62.4, "y2": 257.28}}, {"filename": "../figure/image/1337-Figure4-1.png", "caption": "Figure 4: Early conversation trees from AskMen; nodes are comments and edges indicate reply structure. The original post is the black node, and as node colors lighten, comment timing increases from zero minutes to sixty minutes.", "page": 4, "bbox": {"x1": 73.92, "x2": 286.08, "y1": 62.879999999999995, "y2": 228.0}}]}