{"title": "Let's do it \"again\": A First Computational Approach to Detecting Adverbial Presupposition Triggers", "abstract": "We introduce the task of predicting adverbial presupposition triggers such as also and again. Solving such a task requires detecting recurring or similar events in the discourse context, and has applications in natural language generation tasks such as summarization and dialogue systems. We create two new datasets for the task, derived from the Penn Treebank and the Annotated English Gigaword corpora, as well as a novel attention mechanism tailored to this task. Our attention mechanism augments a baseline recurrent neural network without the need for additional trainable parameters, minimizing the added computational cost of our mechanism. We demonstrate that our model statistically outperforms a number of baselines, including an LSTM-based language model.", "text": [{"id": 0, "string": "Introduction In pragmatics, presuppositions are assumptions or beliefs in the common ground between discourse participants when an utterance is made (Frege, 1892; Strawson, 1950; Stalnaker, 1973 Stalnaker, , 1998 , and are ubiquitous in naturally occurring discourses (Beaver and Geurts, 2014) ."}, {"id": 1, "string": "Presuppositions underly spoken statements and written sentences and understanding them facilitates smooth communication."}, {"id": 2, "string": "We refer to expressions that indicate the presence of presuppositions as presupposition triggers."}, {"id": 3, "string": "These include definite descriptions, factive verbs and certain adverbs, among others."}, {"id": 4, "string": "For example, consider the following statements: (1) John is going to the restaurant again."}, {"id": 5, "string": "* Authors (listed in alphabetical order) contributed equally."}, {"id": 6, "string": "(2) John has been to the restaurant."}, {"id": 7, "string": "(1) is only appropriate in the context where (2) is held to be true because of the presence of the presupposition trigger again."}, {"id": 8, "string": "One distinguishing characteristic of presupposition is that it is unaffected by negation of the presupposing context, unlike other semantic phenomena such as entailment and implicature."}, {"id": 9, "string": "The negation of (1), John is not going to the restaurant again., also presupposes (2)."}, {"id": 10, "string": "Our focus in this paper is on adverbial presupposition triggers such as again, also and still."}, {"id": 11, "string": "Adverbial presupposition triggers indicate the recurrence, continuation, or termination of an event in the discourse context, or the presence of a similar event."}, {"id": 12, "string": "In one study of presuppositional triggers in English journalistic texts (Khaleel, 2010) , adverbial triggers were found to be the most commonly occurring presupposition triggers after existential triggers."}, {"id": 13, "string": "1 Despite their frequency, there has been little work on these triggers in the computational literature from a statistical, corpus-driven perspective."}, {"id": 14, "string": "As a first step towards language technology systems capable of understanding and using presuppositions, we propose to investigate the detection of contexts in which these triggers can be used."}, {"id": 15, "string": "This task constitutes an interesting testing ground for pragmatic reasoning, because the cues that are indicative of contexts containing recurring or similar events are complex and often span more than one sentence, as illustrated in Sentences (1) and (2) ."}, {"id": 16, "string": "Moreover, such a task has immediate practical consequences."}, {"id": 17, "string": "For example, in language generation applications such as summarization and dialogue systems, adding presuppositional triggers in contextually appropriate loca-tions can improve the readability and coherence of the generated output."}, {"id": 18, "string": "We create two datasets based on the Penn Treebank corpus (Marcus et al., 1993) and the English Gigaword corpus (Graff et al., 2007) , extracting contexts that include presupposition triggers as well as other similar contexts that do not, in order to form a binary classification task."}, {"id": 19, "string": "In creating our datasets, we consider a set of five target adverbs: too, again, also, still, and yet."}, {"id": 20, "string": "We focus on these adverbs in our investigation because these triggers are well known in the existing linguistic literature and commonly triggering presuppositions."}, {"id": 21, "string": "We control for a number of potential confounding factors, such as class balance, and the syntactic governor of the triggering adverb, so that models cannot exploit these correlating factors without any actual understanding of the presuppositional properties of the context."}, {"id": 22, "string": "We test a number of standard baseline classifiers on these datasets, including a logistic regression model and deep learning methods based on recurrent neural networks (RNN) and convolutional neural networks (CNN)."}, {"id": 23, "string": "In addition, we investigate the potential of attention-based deep learning models for detecting adverbial triggers."}, {"id": 24, "string": "Attention is a promising approach to this task because it allows a model to weigh information from multiple points in the previous context and infer long-range dependencies in the data (Bahdanau et al., 2015) ."}, {"id": 25, "string": "For example, the model could learn to detect multiple instances involving John and restaurants, which would be a good indication that again is appropriate in that context."}, {"id": 26, "string": "Also, an attention-based RNN has achieved success in predicting article definiteness, which involves another class of presupposition triggers (Kabbara et al., 2016) ."}, {"id": 27, "string": "As another contribution, we introduce a new weighted pooling attention mechanism designed for predicting adverbial presupposition triggers."}, {"id": 28, "string": "Our attention mechanism allows for a weighted averaging of our RNN hidden states where the weights are informed by the inputs, as opposed to a simple unweighted averaging."}, {"id": 29, "string": "Our model uses a form of self-attention (Paulus et al., 2018; Vaswani et al., 2017) , where the input sequence acts as both the attention mechanism's query and key/value."}, {"id": 30, "string": "Unlike other attention models, instead of simply averaging the scores to be weighted, our approach aggregates (learned) attention scores by learning a reweighting scheme of those scores through another level (dimension) of attention."}, {"id": 31, "string": "Additionally, our mechanism does not introduce any new parameters when compared to our LSTM baseline, reducing its computational impact."}, {"id": 32, "string": "We compare our model using the novel attention mechanism against the baseline classifiers in terms of prediction accuracy."}, {"id": 33, "string": "Our model outperforms these baselines for most of the triggers on the two datasets, achieving 82.42% accuracy on predicting the adverb \"also\" on the Gigaword dataset."}, {"id": 34, "string": "The contributions of this work are as follows: 1."}, {"id": 35, "string": "We introduce the task of predicting adverbial presupposition triggers."}, {"id": 36, "string": "2."}, {"id": 37, "string": "We present new datasets for the task of detecting adverbial presupposition triggers, with a data extraction method that can be applied to other similar pre-processing tasks."}, {"id": 38, "string": "3."}, {"id": 39, "string": "We develop a new attention mechanism in an RNN architecture that is appropriate for the prediction of adverbial presupposition triggers, and show that its use results in better prediction performance over a number of baselines without introducing additional parameters."}, {"id": 40, "string": "2 Related Work Presupposition and pragmatic reasoning The discussion of presupposition can be traced back to Frege's work on the philosophy of language (Frege, 1892), which later leads to the most commonly accepted view of presupposition called the Frege-Strawson theory (Kaplan, 1970; Strawson, 1950) ."}, {"id": 41, "string": "In this view, presuppositions are preconditions for sentences/statements to be true or false."}, {"id": 42, "string": "To the best of our knowledge, there is no previous computational work that directly investigates adverbial presupposition."}, {"id": 43, "string": "However in the fields of semantics and pragmatics, there exist linguistic studies on presupposition that involve adverbs such as \"too\" and \"again\" (e.g., (Blutner et al., 2003) , (Kang, 2012) ) as a pragmatic presupposition trigger."}, {"id": 44, "string": "Also relevant to our work is (Kabbara et al., 2016) , which proposes using an attention-based LSTM network to predict noun phrase definiteness in English."}, {"id": 45, "string": "Their work demonstrates the ability of these attention-based models to pick up on contextual cues for pragmatic reasoning."}, {"id": 46, "string": "Many different classes of construction can trigger presupposition in an utterance, this includes but is not limited to stressed constituents, factive verbs, and implicative verbs (Zare et al., 2012) ."}, {"id": 47, "string": "In this work, we focus on the class of adverbial presupposition triggers."}, {"id": 48, "string": "Our task setup resembles the Cloze test used in psychology (Taylor, 1953; E. B. Coleman, 1968; Earl F. Rankin, 1969) and machine comprehension (Riloff and Thelen, 2000) , which tests text comprehension via a fill-in-the-blanks task."}, {"id": 49, "string": "We similarly pre-process our samples such that they are roughly the same length, and have equal numbers of negative samples as positive ones."}, {"id": 50, "string": "However, we avoid replacing the deleted words with a blank, so that our model has no clue regarding the exact position of the possibly missing trigger."}, {"id": 51, "string": "Another related work on the Children's Book Test (Hill et al., 2015) notes that memories that encode sub-sentential chunks (windows) of informative text seem to be most useful to neural networks when interpreting and modelling language."}, {"id": 52, "string": "Their finding inspires us to run initial experiments with different context windows and tune the size of chunks according to the Logistic Regression results on the development set."}, {"id": 53, "string": "Attention In the context of encoder-decoder models, attention weights are usually based on an energy measure of the previous decoder hidden state and encoder hidden states."}, {"id": 54, "string": "Many variations on attention computation exist."}, {"id": 55, "string": "Sukhbaatar et al."}, {"id": 56, "string": "(2015) propose an attention mechanism conditioned on a query and applied to a document."}, {"id": 57, "string": "To generate summaries, Paulus et al."}, {"id": 58, "string": "(2018) add an attention mechanism in the prediction layer, as opposed to the hidden states."}, {"id": 59, "string": "Vaswani et al."}, {"id": 60, "string": "(2017) suggest a model which learns an input representation by self-attending over inputs."}, {"id": 61, "string": "While these methods are all tailored to their specific tasks, they all inspire our choice of a self-attending mechanism."}, {"id": 62, "string": "3 Datasets Corpora We extract datasets from two corpora, namely the Penn Treebank (PTB) corpus (Marcus et al., 1993) and a subset (sections 000-760) of the third edition of the English Gigaword corpus (Graff et al., 2007) ."}, {"id": 63, "string": "For the PTB dataset, we use sections 22 and 23 for testing."}, {"id": 64, "string": "For the Gigaword corpus, we use sections 700-760 for testing."}, {"id": 65, "string": "For the remaining data, we randomly chose 10% of them for development, and the other 90% for training."}, {"id": 66, "string": "For each dataset, we consider a set of five target adverbs: too, again, also, still, and yet."}, {"id": 67, "string": "We choose these five because they are commonly used adverbs that trigger presupposition."}, {"id": 68, "string": "Since we are concerned with investigating the capacity of attentional deep neural networks in predicting the presuppositional effects in general, we frame the learning problem as a binary classification for predicting the presence of an adverbial presupposition (as opposed to the identity of the adverb)."}, {"id": 69, "string": "On the Gigaword corpus, we consider each adverb separately, resulting in five binary classification tasks."}, {"id": 70, "string": "This was not feasible for PTB because of its small size."}, {"id": 71, "string": "Finally, because of the commonalities between the adverbs in presupposing similar events, we create a dataset that unifies all instances of the five adverbs found in the Gigaword corpus, with a label \"1\" indicating the presence of any of these adverbs."}, {"id": 72, "string": "Data extraction process We define a sample in our dataset as a 3-tuple, consisting of a label (representing the target adverb, or 'none' for a negative sample), a list of tokens we extract (before/after the adverb), and a list of corresponding POS tags (Klein and Manning, 2002) ."}, {"id": 73, "string": "In each sample, we also add a special token \"@@@@\" right before the head word and the corresponding POS tag of the head word, both in positive and negative cases."}, {"id": 74, "string": "We add such special tokens to identify the candidate context in the passage to the model."}, {"id": 75, "string": "Figure 1 shows a single positive sample in our dataset."}, {"id": 76, "string": "We first extract positive contexts that contain a triggering adverb, then extract negative contexts that do not, controlling for a number of potential confounds."}, {"id": 77, "string": "Our positive data consist of cases where the target adverb triggers presupposition by modifying a certain head word which, in most cases, is a verb."}, {"id": 78, "string": "We define such head word as a governor of the target adverb."}, {"id": 79, "string": "When extracting positive data, we scan through all the documents, searching for target adverbs."}, {"id": 80, "string": "For each occurrence of a target adverb, we store the location and the governor of the adverb."}, {"id": 81, "string": "Taking each occurrence of a governor as a pivot, we extract the 50 unlemmatized tokens preceding it, together with the tokens right after it up to the end of the sentence (where the adverb is)-with the adverb itself being removed."}, {"id": 82, "string": "If there are less than 50 tokens before the adverb, we simply extract all of these tokens."}, {"id": 83, "string": "In preliminary testing using a logistic regression classifier, we found that limiting the size to 50 tokens had higher accuracy than 25 or 100 tokens."}, {"id": 84, "string": "As some head words themselves are stopwords, in the list of tokens, we do not remove any stopwords from the sample; otherwise, we would lose many important samples."}, {"id": 85, "string": "We filter out the governors of \"too\" that have POS tags \"JJ\" and \"RB\" (adjectives and adverbs), because such cases corresponds to a different sense of \"too\" which indicates excess quantity and does not trigger presupposition (e.g., \"rely too heavily on\", \"it's too far from\")."}, {"id": 86, "string": "After extracting the positive cases, we then use the governor information of positive cases to extract negative data."}, {"id": 87, "string": "In particular, we extract sentences containing the same governors but not any of the target adverbs as negatives."}, {"id": 88, "string": "In this way, models cannot rely on the identity of the governor alone to predict the class."}, {"id": 89, "string": "This procedure also roughly balances the number of samples in the positive and negative classes."}, {"id": 90, "string": "For each governor in a positive sample, we locate a corresponding context in the corpus where the governor occurs without being modified by any of the target adverbs."}, {"id": 91, "string": "We then extract the surrounding tokens in the same fashion as above."}, {"id": 92, "string": "Moreover, we try to control positionrelated confounding factors by two randomization approaches: 1) randomize the order of documents to be scanned, and 2) within each document, start scanning from a random location in the document."}, {"id": 93, "string": "Note that the number of negative cases might not be exactly equal to the number of negative cases in all datasets because some governors appearing in positive cases are rare words, and we're unable to find any (or only few) occurrences that match them for the negative cases."}, {"id": 94, "string": "Learning Model In this section, we introduce our attention-based model."}, {"id": 95, "string": "At a high level, our model extends a bidirectional LSTM model by computing correlations between the hidden states at each timestep, then applying an attention mechanism over these correlations."}, {"id": 96, "string": "Our proposed weighted-pooling (WP) neural network architecture is shown in Figure 2 ."}, {"id": 97, "string": "The input sequence u = {u 1 , u 2 , ."}, {"id": 98, "string": "."}, {"id": 99, "string": "."}, {"id": 100, "string": ", u T } consists of a sequence, of time length T , of onehot encoded word tokens, where the original tokens are those such as in Listing 1."}, {"id": 101, "string": "Each token u t is embedded with pretrained embedding matrix W e \u2208 R |V |\u00d7d , where |V | corresponds to the number of tokens in vocabulary V , and d defines the size of the word embeddings."}, {"id": 102, "string": "The embedded token vector x t \u2208 R d is retrieved simply with x t = u t W e ."}, {"id": 103, "string": "Optionally, x t may also include the token's POS tag."}, {"id": 104, "string": "In such instances, the embedded token at time step t is concatenated with the POS tag's one-hot encoding p t : x t = u t W e ||p t , where || denotes the vector concatenation operator."}, {"id": 105, "string": "At each input time step t, a bi-directional LSTM (Hochreiter and Schmidhuber, 1997) encodes x t into hidden state h t \u2208 R s : h t = \u2212 \u2192 h t || \u2190 \u2212 h t (1) where \u2212 \u2192 h t = f (x t , h t\u22121 ) is computed by the forward LSTM, and \u2190 \u2212 h t = f (x t , h t+1 ) is computed by the backward LSTM."}, {"id": 106, "string": "Concatenated vector h t is of size 2s, where s is a hyperparameter determining the size of the LSTM hidden states."}, {"id": 107, "string": "Let matrix H \u2208 R 2s\u00d7T correspond to the concatenation of all hidden state vectors: H = [h 1 ||h 2 || ."}, {"id": 108, "string": "."}, {"id": 109, "string": "."}, {"id": 110, "string": "||h T ]."}, {"id": 111, "string": "(2) Our model uses a form of self-attention (Paulus et al., 2018; Vaswani et al., 2017) , where the input sequence acts as both the attention mechanism's query and key/value."}, {"id": 112, "string": "Since the location of a presupposition trigger can greatly vary from one sample to another, and because dependencies can be long range or short range, we model all possible word-pair interactions within a sequence."}, {"id": 113, "string": "We calculate the energy between all input tokens with a Figure 2: Our weighted-pooling neural network architecture (WP)."}, {"id": 114, "string": "The tokenized input is embedded with pretrained word embeddings and possibly concatenated with one-hot encoded POS tags."}, {"id": 115, "string": "The input is then encoded with a bi-directional LSTM, followed by our attention mechanism."}, {"id": 116, "string": "The computed attention scores are then used as weights to average the encoded states, in turn connected to a fully connected layer to predict presupposition triggering."}, {"id": 117, "string": "pair-wise matching matrix: M = H H (3) where M is a square matrix \u2208 R T \u00d7T ."}, {"id": 118, "string": "To get a single attention weight per time step, we adopt the attention-over-attention method (Cui et al., 2017) ."}, {"id": 119, "string": "With matrix M , we first compute row-wise attention score M r ij over M : M r ij = exp(e ij ) T t=1 exp(e it ) (4) where e ij = M ij ."}, {"id": 120, "string": "M r can be interpreted as a word-level attention distribution over all other words."}, {"id": 121, "string": "Since we would like a single weight per word, we need an additional step to aggregate these attention scores."}, {"id": 122, "string": "Instead of simply averaging the scores, we follow (Cui et al., 2017) 's approach which learns the aggregation by an additional attention mechanism."}, {"id": 123, "string": "We compute columnwise softmax M c ij over M : M c ij = exp(e ij ) T t=1 exp(e tj ) (5) The columns of M r are then averaged, forming vector \u03b2 \u2208 R T ."}, {"id": 124, "string": "Finally, \u03b2 is multiplied with the column-wise softmax matrix M c to get attention vector \u03b1: \u03b1 = M r \u03b2."}, {"id": 125, "string": "(6) Note Equations (2) to (6) have described how we derived an attention score over our input without the introduction of any new parameters, potentially minimizing the computational effect of our attention mechanism."}, {"id": 126, "string": "As a last layer to their neural network, Cui et al."}, {"id": 127, "string": "(2017) sum over \u03b1 to extract the most relevant input."}, {"id": 128, "string": "However, we use \u03b1 as weights to combine all of our hidden states h t : c = T t=1 \u03b1 t h t (7) where c \u2208 R s ."}, {"id": 129, "string": "We follow the pooling with a dense layer z = \u03c3(W z c + b z ), where \u03c3 is a non-linear function, matrix W z \u2208 R 64\u00d7s and vector b z \u2208 R 64 are learned parameters."}, {"id": 130, "string": "The presupposition trigger probability is computed with an affine transform followed by a softmax: y = softmax(W o z + b o ) (8) where matrix W o \u2208 R 2\u00d764 and vector b o \u2208 R 2 are learned parameters."}, {"id": 131, "string": "The training objective minimizes: J(\u03b8) = 1 m m t=1 E(\u0177, y) (9) where E(\u00b7 , \u00b7) is the standard cross-entropy."}, {"id": 132, "string": "Experiments We compare the performance of our WP model against several models which we describe in this section."}, {"id": 133, "string": "We carry out the experiments on both datasets described in Section 3."}, {"id": 134, "string": "We also investigate the impact of POS tags and attention mechanism on the models' prediction accuracy."}, {"id": 135, "string": "Baselines We compare our learning model against the following systems."}, {"id": 136, "string": "The first is the most-frequentclass baseline (MFC) which simply labels all samples with the most frequent class of 1."}, {"id": 137, "string": "The second is a logistic regression classifier (LogReg), in which the probabilities describing the possible outcomes of a single input x is modeled using a logistic function."}, {"id": 138, "string": "We implement this baseline classifier with the scikit-learn package (Pedregosa et al., 2011) , with a CountVectorizer including bi-gram features."}, {"id": 139, "string": "All of the other hyperparameters are set to default weights."}, {"id": 140, "string": "The third is a variant LSTM recurrent neural network as introduced in (Graves, 2013) ."}, {"id": 141, "string": "The input is encoded by a bidirectional LSTM like the WP model detailed in Section 4."}, {"id": 142, "string": "Instead of a self-attention mechanism, we simply mean-pool matrix H, the concatenation of all LSTM hidden states, across all time steps."}, {"id": 143, "string": "This is followed by a fully connected layer and softmax function for the binary classification."}, {"id": 144, "string": "Our WP model uses the same bidirectional LSTM as this baseline LSTM, and has the same number of parameters, allowing for a fair comparison of the two models."}, {"id": 145, "string": "Such a standard LSTM model represents a state-of-the-art language model, as it outperforms more recent models on language modeling tasks when the number of model parameters is controlled for (Melis et al., 2017) ."}, {"id": 146, "string": "For the last model, we use a slight variant of the CNN sentence classification model of (Kim, 2014) based on the Britz tensorflow implementation 2 ."}, {"id": 147, "string": "Hyperparameters & Additional Features After tuning, we found the following hyperparameters to work best: 64 units in fully connected layers and 40 units for POS embeddings."}, {"id": 148, "string": "We used dropout with probability 0.5 and mini-batch size of 64."}, {"id": 149, "string": "For all models, we initialize word embeddings with word2vec  pretrained embeddings of size 300."}, {"id": 150, "string": "Unknown words are randomly initialized to the same size as the word2vec embeddings."}, {"id": 151, "string": "In early tests on the development datasets, we found that our neural networks would consistently perform better when fixing the word embeddings."}, {"id": 152, "string": "All neural network performance reported in this paper use fixed embeddings."}, {"id": 153, "string": "Fully connected layers in the LSTM, CNN and WP model are regularized with dropout (Srivastava et al., 2014) ."}, {"id": 154, "string": "The model parameters for these neural networks are fine-tuned with the Adam algorithm (Kingma and Ba, 2015) ."}, {"id": 155, "string": "To stabilize the RNN training gradients (Pascanu et al., 2013) , we perform gradient clipping for gradients below threshold value -1, or above 1."}, {"id": 156, "string": "To reduce overfitting, we stop training if the development set does not improve in accuracy for 10 epochs."}, {"id": 157, "string": "All performance on the test set is reported using the best trained model as measured on the development set."}, {"id": 158, "string": "In addition, we use the CoreNLP Part-of- Table 2 : Performance of various models, including our weighted-pooled LSTM (WP)."}, {"id": 159, "string": "MFC refers to the most-frequent-class baseline, LogReg is the logistic regression baseline."}, {"id": 160, "string": "LSTM and CNN correspond to strong neural network baselines."}, {"id": 161, "string": "Note that we bold the performance numbers for the best performing model for each of the \"+ POS\" case and the \"-POS\" case."}, {"id": 162, "string": "Speech (POS) tagger (Manning et al., 2014) to get corresponding POS features for extracted tokens."}, {"id": 163, "string": "In all of our models, we limit the maximum length of samples and POS tags to 60 tokens."}, {"id": 164, "string": "For the CNN, sequences shorter than 60 tokens are zeropadded."}, {"id": 165, "string": "Table 3 shows the confusion matrix for the best performing model (WP,+POS)."}, {"id": 166, "string": "The small differences in the off-diagonal entries inform us that the model misclassifications are not particularly skewed towards the presence or absence of pre-supposition triggers."}, {"id": 167, "string": "Results Predicted Actual Absence Presence Absence 54,658 11,961 Presence 11,776 55,006 Analysis Consider the following pair of samples that we randomly choose from the PTB dataset (shortened for readability): 1."}, {"id": 168, "string": "...Taped just as the market closed yesterday , it offers Ms. Farrell advising , \" We view the market here as going through a relatively normal cycle ... ."}, {"id": 169, "string": "We continue to feel that the stock market is the @@@@ place to be for long-term appreciation 2."}, {"id": 170, "string": "...More people are remaining independent longer presumably because they are better off physically and financially ."}, {"id": 171, "string": "Careers count most for the well-to-do many affluent people @@@@ place personal success and money above family In both cases, the head word is place."}, {"id": 172, "string": "In Example 1, the word continue (emphasized in the above text) suggests that adverb still could be used to modify head word place (i.e., ... the stock market is still the place ...)."}, {"id": 173, "string": "Further, it is also easy to see that place refers to stock market, which has occurred in the previous context."}, {"id": 174, "string": "Our model correctly predicts this sample as containing a presupposition, this despite the complexity of the coreference across the text."}, {"id": 175, "string": "In the second case of the usage of the same main head word place in Example 2, our model falsely predicts the presence of a presupposition."}, {"id": 176, "string": "However, even a human could read the sentence as \"many people still place personal success and money above family\"."}, {"id": 177, "string": "This underlies the subtlety and difficulty of the task at hand."}, {"id": 178, "string": "The longrange dependencies and interactions within sentences seen in these examples are what motivate the use of the various deep non-linear models presented in this work, which are useful in detecting these coreferences, particularly in the case of attention mechanisms."}, {"id": 179, "string": "Conclusion In this work, we have investigated the task of predicting adverbial presupposition triggers and introduced several datasets for the task."}, {"id": 180, "string": "Additionally, we have presented a novel weighted-pooling attention mechanism which is incorporated into a recurrent neural network model for predicting the presence of an adverbial presuppositional trigger."}, {"id": 181, "string": "Our results show that the model outperforms the CNN and LSTM, and does not add any additional parameters over the standard LSTM model."}, {"id": 182, "string": "This shows its promise in classification tasks involving capturing and combining relevant information from multiple points in the previous context."}, {"id": 183, "string": "In future work, we would like to focus more on designing models that can deal with and be optimized for scenarios with severe data imbalance."}, {"id": 184, "string": "We would like to also explore various applications of presupposition trigger prediction in language generation applications, as well as additional attention-based neural network architectures."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 39}, {"section": "Presupposition and pragmatic reasoning", "n": "2.1", "start": 40, "end": 52}, {"section": "Attention", "n": "2.2", "start": 53, "end": 61}, {"section": "Corpora", "n": "3.1", "start": 62, "end": 71}, {"section": "Data extraction process", "n": "3.2", "start": 72, "end": 93}, {"section": "Learning Model", "n": "4", "start": 94, "end": 131}, {"section": "Experiments", "n": "5", "start": 132, "end": 134}, {"section": "Baselines", "n": "5.1", "start": 135, "end": 146}, {"section": "Hyperparameters & Additional Features", "n": "5.2", "start": 147, "end": 166}, {"section": "Analysis", "n": "7", "start": 167, "end": 178}, {"section": "Conclusion", "n": "8", "start": 179, "end": 184}], "figures": [{"filename": "../figure/image/1121-Figure1-1.png", "caption": "Figure 1: An example of an instance containing a presuppositional trigger from our dataset.", "page": 2, "bbox": {"x1": 302.88, "x2": 529.4399999999999, "y1": 62.879999999999995, "y2": 169.92}}, {"filename": "../figure/image/1121-Table1-1.png", "caption": "Table 1: Number of training samples in each dataset.", "page": 4, "bbox": {"x1": 72.0, "x2": 526.0799999999999, "y1": 61.44, "y2": 186.23999999999998}}, {"filename": "../figure/image/1121-Figure2-1.png", "caption": "Figure 2: Our weighted-pooling neural network architecture (WP). The tokenized input is embedded with pretrained word embeddings and possibly concatenated with one-hot encoded POS tags. The input is then encoded with a bi-directional LSTM, followed by our attention mechanism. The computed attention scores are then used as weights to average the encoded states, in turn connected to a fully connected layer to predict presupposition triggering.", "page": 4, "bbox": {"x1": 72.96, "x2": 525.12, "y1": 217.44, "y2": 464.15999999999997}}, {"filename": "../figure/image/1121-Table4-1.png", "caption": "Table 4: Contingency table for correct (cor.) and incorrect (inc.) predictions between the LSTM baseline and the attention model (WP) on the Giga_also dataset.", "page": 6, "bbox": {"x1": 331.68, "x2": 501.12, "y1": 500.64, "y2": 543.36}}, {"filename": "../figure/image/1121-Table2-1.png", "caption": "Table 2: Performance of various models, including our weighted-pooled LSTM (WP). MFC refers to the most-frequent-class baseline, LogReg is the logistic regression baseline. LSTM and CNN correspond to strong neural network baselines. Note that we bold the performance numbers for the best performing model for each of the \u201c+ POS\u201d case and the \u201c- POS\u201d case.", "page": 6, "bbox": {"x1": 72.0, "x2": 526.0799999999999, "y1": 63.839999999999996, "y2": 272.15999999999997}}, {"filename": "../figure/image/1121-Table3-1.png", "caption": "Table 3: Confusion matrix for the best performing model, predicting the presence of a presupposition trigger or the absence of such as trigger.", "page": 6, "bbox": {"x1": 337.91999999999996, "x2": 501.12, "y1": 374.88, "y2": 431.03999999999996}}]}