{"title": "Exploring Semantic Properties of Sentence Embeddings", "abstract": "Neural vector representations are ubiquitous throughout all subfields of NLP. While word vectors have been studied in much detail, thus far only little light has been shed on the properties of sentence embeddings. In this paper, we assess to what extent prominent sentence embedding methods exhibit select semantic properties. We propose a framework that generate triplets of sentences to explore how changes in the syntactic structure or semantics of a given sentence affect the similarities obtained between their sentence embeddings.", "text": [{"id": 0, "string": "Introduction Neural vector representations have become ubiquitous in all subfields of natural language processing."}, {"id": 1, "string": "For the case of word vectors, important properties of the representations have been studied, including their linear substructures (Mikolov et al., 2013; Levy and Goldberg, 2014) , the linear superposition of word senses (Arora et al., 2016b) , and the nexus to pointwise mutual information scores between co-occurring words (Arora et al., 2016a) ."}, {"id": 2, "string": "However, thus far, only little is known about the properties of sentence embeddings."}, {"id": 3, "string": "Sentence embedding methods attempt to encode a variablelength input sentence into a fixed length vector."}, {"id": 4, "string": "A number of such sentence embedding methods have been proposed in recent years (Le and Mikolov, 2014; Kiros et al., 2015; Wieting et al., 2015; Conneau et al., 2017; Arora et al., 2017) ."}, {"id": 5, "string": "Sentence embeddings have mainly been evaluated in terms of how well their cosine similarities mirror human judgments of semantic relatedness, typically with respect to the SemEval Semantic Textual Similarity competitions."}, {"id": 6, "string": "The SICK dataset (Marelli et al., 2014) was created to better benchmark the effectiveness of different models across a broad range of challenging lexical, syntactic, and semantic phenomena, in terms of both similarities and the ability to be predictive of entailment."}, {"id": 7, "string": "However, even on SICK, oftentimes very shallow methods prove effective at obtaining fairly competitive results (Wieting et al., 2015) ."}, {"id": 8, "string": "Adi et al."}, {"id": 9, "string": "investigated to what extent different embedding methods are predictive of i) the occurrence of words in the original sentence, ii) the order of words in the original sentence, and iii) the length of the original sentence (Adi et al., 2016 (Adi et al., , 2017 ."}, {"id": 10, "string": "inspected neural machine translation systems with regard to their ability to acquire morphology, while Shi et al."}, {"id": 11, "string": "(2016) investigated to what extent they learn source side syntax."}, {"id": 12, "string": "Wang et al."}, {"id": 13, "string": "(2016) argue that the latent representations of advanced neural reading comprehension architectures encode information about predication."}, {"id": 14, "string": "Finally, sentence embeddings have also often been investigated in classification tasks such as sentiment polarity or question type classification (Kiros et al., 2015) ."}, {"id": 15, "string": "Concurrently with our research, Conneau et al."}, {"id": 16, "string": "(2018) investigated to what extent one can learn to classify specific syntactic and semantic properties of sentences using large amounts of training data (100,000 instances) for each property."}, {"id": 17, "string": "Overall, still, remarkably little is known about what specific semantic properties are directly reflected by such embeddings."}, {"id": 18, "string": "In this paper, we specifically focus on a few select aspects of sentence semantics and inspect to what extent prominent sentence embedding methods are able to capture them."}, {"id": 19, "string": "Our framework generates triplets of sentences to explore how changes in the syntactic structure or semantics of a given sentence affect the similarities obtained between their sentence embeddings."}, {"id": 20, "string": "Analysis To conduct our analysis, we proceed by generating new phenomena-specific evaluation datasets."}, {"id": 21, "string": "Our starting point is that even minor alterations of a sentence may lead to notable shifts in meaning."}, {"id": 22, "string": "For instance, a sentence S such as A rabbit is jumping over the fence and a sentence S * such as A rabbit is not jumping over the fence diverge with respect to many of the inferences that they warrant."}, {"id": 23, "string": "Even if sentence S * is somewhat less idiomatic than alternative wordings such as There are no rabbits jumping over the fence, we nevertheless expect sentence embedding methods to interpret both correctly, just as humans do."}, {"id": 24, "string": "Despite the semantic differences between the two sentences due to the negation, we still expect the cosine similarity between their respective embeddings to be fairly high, in light of their semantic relatedness in touching on similar themes."}, {"id": 25, "string": "Hence, only comparing the similarity between sentence pairs of this sort does not easily lend itself to insightful automated analyses."}, {"id": 26, "string": "Instead, we draw on another key idea."}, {"id": 27, "string": "It is common for two sentences to be semantically close despite differences in their specific linguistic realizations."}, {"id": 28, "string": "Building on the previous example, we can construct a further contrasting sentence S + such as A rabbit is hopping over the fence."}, {"id": 29, "string": "This sentence is very close in meaning to sentence S, despite minor differences in the choice of words."}, {"id": 30, "string": "In this case, we would want for the semantic relatedness between sentences S and S + to be assessed as higher than between sentence S and sentence S * ."}, {"id": 31, "string": "We refer to this sort of scheme as sentence triplets."}, {"id": 32, "string": "We rely on simple transformations to generate several different sets of sentence triplets."}, {"id": 33, "string": "Sentence Modification Schemes In the following, we first describe the kinds of transformations we apply to generate altered sentences."}, {"id": 34, "string": "Subsequently, in Section 2.2, we shall consider how to assemble such sentences into sentence triplets of various kinds so as to assess different semantic properties of sentence embeddings."}, {"id": 35, "string": "Not-Negation."}, {"id": 36, "string": "We negate the original sentence by inserting the negation marker not before the first verb of the original sentence A to generate a new sentence B, including contractions as appropriate, or removing negations when they are already present, as in: A: The young boy is climbing the wall made of rock."}, {"id": 37, "string": "B: The young boy isn't climbing the wall made of rock."}, {"id": 38, "string": "Quantifier-Negation."}, {"id": 39, "string": "We prepend the quantifier expression there is no to original sentences beginning with A to generate new sentences."}, {"id": 40, "string": "A: A girl is cutting butter into two pieces."}, {"id": 41, "string": "B: There is no girl cutting butter into two pieces."}, {"id": 42, "string": "Synonym Substitution."}, {"id": 43, "string": "We substitute the verb in the original sentence with an appropriate synonym to generate a new sentence B."}, {"id": 44, "string": "A: The man is talking on the telephone."}, {"id": 45, "string": "B: The man is chatting on the telephone."}, {"id": 46, "string": "Embedded Clause Extraction."}, {"id": 47, "string": "For those sentences containing verbs such as say, think with embedded clauses, we extract the clauses as the new sentence."}, {"id": 48, "string": "A: Octel said the purchase was expected."}, {"id": 49, "string": "B: The purchase was expected."}, {"id": 50, "string": "Passivization."}, {"id": 51, "string": "Sentences that are expressed in active voice are changed to passive voice."}, {"id": 52, "string": "A: Harley asked Abigail to bake some muffins."}, {"id": 53, "string": "B: Abigail is asked to bake some muffins."}, {"id": 54, "string": "Argument Reordering."}, {"id": 55, "string": "For sentences matching the structure \" somebody verb somebody to do something \", we swap the subject and object of the original sentence A to generate a new sentence B."}, {"id": 56, "string": "A: Matilda encouraged Sophia to compete in a match."}, {"id": 57, "string": "B: Sophia encouraged Matilda to compete in a match."}, {"id": 58, "string": "Fixed Point Inversion."}, {"id": 59, "string": "We select a word in the sentence as the pivot and invert the order of words before and after the pivot."}, {"id": 60, "string": "The intuition here is that this simple corruption is likely to result in a new sentence that does not properly convey the original meaning, despite sharing the original words in common with it."}, {"id": 61, "string": "Hence, these sorts of corruptions can serve as a useful diagnostic."}, {"id": 62, "string": "A: A dog is running on concrete and is holding a blue ball B: concrete and is holding a blue ball a dog is running on."}, {"id": 63, "string": "Sentence Triplet Generation Given the above forms of modified sentences, we induce five evaluation datasets, consisting of triplets of sentences as follows."}, {"id": 64, "string": "1."}, {"id": 65, "string": "Negation Detection: Original sentence, Synonym Substitution, Not-Negation With this dataset, we seek to explore how well sentence embeddings can distinguish sentences with similar structure and opposite meaning, while using Synonym Substitution as the contrast set."}, {"id": 66, "string": "We would want the similarity between the original sentence and the negated sentence to be lower than that between the original sentence and its synonym version."}, {"id": 67, "string": "Negation Variants: Quantifier-Negation, Not-Negation, Original sentence In the second dataset, we aim to investigate how well the sentence embeddings reflect negation quantifiers."}, {"id": 68, "string": "We posit that the similarity between the Quantifier-Negation and Not-Negation versions should be a bit higher than between either the Not-Negation or the Quantifier-Negation and original sentences."}, {"id": 69, "string": "3."}, {"id": 70, "string": "Clause Relatedness: Original sentence, Embedded Clause Extraction, Not-Negation In this third set, we want to explore whether the similarity between a sentence and its embedded clause is higher than between a sentence and its negation."}, {"id": 71, "string": "Argument Sensitivity: Original sentence, Passivization, Argument Reordering With this last test, we wish to ascertain whether the sentence embeddings succeed in distinguishing semantic information from structural information."}, {"id": 72, "string": "Consider, for instance, the following triplet."}, {"id": 73, "string": "S: Lilly loves Imogen."}, {"id": 74, "string": "S + : Imogen is loved by Lilly."}, {"id": 75, "string": "S * : Imogen loves Lilly."}, {"id": 76, "string": "Here, S and S + mostly share the same meaning, whereas S + and S * have a similar word order, but do not possess the same specific meaning."}, {"id": 77, "string": "If the sentence embeddings focus more on semantic cues, then the similarity between S and S + ought to be larger than that between S + and S * ."}, {"id": 78, "string": "If the sentence embedding however is easily misled by matching sentence structures, the opposite will be the case."}, {"id": 79, "string": "Fixed Point Reorder: Original sentence, Semantically equivalent sentence, Fixed Point Inversion With this dataset, our objective is to explore how well the sentence embeddings account for shifts in meaning due to the word order in a sentence."}, {"id": 80, "string": "We select sentence pairs from the SICK dataset according to their semantic relatedness score and entailment labeling."}, {"id": 81, "string": "Sentence pairs with a high relatedness score and the Entailment tag are considered semantically similar sentences."}, {"id": 82, "string": "We rely on the Levenshtein Distance as a filter to ensure a structural similarity between the two sentences, i.e., sentence pairs whose Levenshtein Distance is sufficiently high are regarded as eligible."}, {"id": 83, "string": "Additionally, we use the Fixed Point Inversion technique to generate a contrastive sentence."}, {"id": 84, "string": "The resulting sentence likely no longer adequately reflects the original meaning."}, {"id": 85, "string": "Hence, we expect that, on average, the similarity between the original sentence and the semantically similar sentence should be higher than that between the original sentence and the contrastive version."}, {"id": 86, "string": "Experiments We now proceed to describe our experimental evaluation based on this paradigm."}, {"id": 87, "string": "Datasets Using the aforementioned triplet generation methods, we create the evaluation datasets listed in Table 1, drawing on source sentences from SICK, Penn Treebank WSJ and MSR Paraphase corpus."}, {"id": 88, "string": "Although the process to modify the sentences is automatic, we rely on human annotators to double-check the results for grammaticality and semantics."}, {"id": 89, "string": "This is particularly important for synonym substitution, for which we relied on Word-Net (Fellbaum, 1998) ."}, {"id": 90, "string": "Unfortunately, not all synonyms are suitable as replacements in a given context."}, {"id": 91, "string": "Embedding Methods In our experiments, we compare three particularly prominent sentence embedding methods: 1."}, {"id": 92, "string": "GloVe Averaging (GloVe Avg."}, {"id": 93, "string": "): The simple approach of taking the average of the word vectors for all words in a sentence."}, {"id": 94, "string": "Although this method neglects the order of words entirely, it can fare reasonably well on some of the most commonly invoked forms of evaluation (Wieting et al., 2015; Arora et al., 2017) ."}, {"id": 95, "string": "Note that we here rely on regular unweighted GloVe vectors (Pennington et al., 2014) instead of fine-tuned or weighted word vectors."}, {"id": 96, "string": "2."}, {"id": 97, "string": "Concatenated P-Mean Embeddings (P-Means): R\u00fcckl\u00e9 et al."}, {"id": 98, "string": "(2018) proposed concatenating different p-means of multiple kinds of word vectors."}, {"id": 99, "string": "3."}, {"id": 100, "string": "Sent2Vec: Pagliardini et al."}, {"id": 101, "string": "(2018) proposed a method to learn word and n-gram embeddings such that the average of all words and n-grams in a sentence can serve as a highquality sentence vector."}, {"id": 102, "string": "The Skip-Thought Vector approach (SkipThought) by Kiros et al."}, {"id": 103, "string": "(2015) applies the neighbour prediction intuitions of the word2vec Skip-Gram model at the level of entire sentences, as encoded and decoded via recurrent neural networks."}, {"id": 104, "string": "The method trains an encoder to process an input sentence such that the resulting latent representation is optimized for predicting neighbouring sentences via the decoder."}, {"id": 105, "string": "(Conneau et al., 2017) is based on supervision from an auxiliary task, namely the Stanford NLI dataset."}, {"id": 106, "string": "InferSent Results and Discussion Negation Detection."}, {"id": 107, "string": "Table 2 lists the results for the Negation Detection dataset, where S, S + , S * refer to the original, Synonym Substitution, and Not-Negation versions of the sentences, respectively."}, {"id": 108, "string": "For each of the considered embedding methods, we first report the average cosine similarity scores between all relevant sorts of pairings of two sentences, i.e."}, {"id": 109, "string": "between the original and the Synonym-Substitution sentences (S and S + ), between original and Not-Negated (S and S * ), and between Not-Negated and Synonym-Substitution (S + and S * )."}, {"id": 110, "string": "Finally, in the last column, we report the Accuracy, computed as the percentage of sentence triplets for which the proximity relationships were as desired, i.e., the cosine similarity between the original and synonym-substituted versions was higher than the similarity between that same original and its Not-Negation version."}, {"id": 111, "string": "On this dataset, we observe that GloVe Avg."}, {"id": 112, "string": "is more often than not misled by the introduction of synonyms, although the corresponding word vector typically has a high cosine similarity with the original word's embedding."}, {"id": 113, "string": "In contrast, both In-ferSent and SkipThought succeed in distinguishing unnegated sentences from negated ones."}, {"id": 114, "string": "Negation Variants."}, {"id": 115, "string": "In Table 3 , S, S + , S * refer to the original, Not-Negation, and Quantifier-Negation versions of a sentence, respectively."}, {"id": 116, "string": "Accuracy in this problem is defined as percentage of sentence triples whose similarity between S+ and S * is the higher than similarity between S and S+ and S + and S * The results of both averaging of word embeddings."}, {"id": 117, "string": "and SkipThought are dismal in terms of the accuracy."}, {"id": 118, "string": "InferSent, in contrast, appears to have acquired a better understanding of negation quantifiers, as these are commonplace in many NLI datasets."}, {"id": 119, "string": "Clause Relatedness."}, {"id": 120, "string": "In Table 4 , S, S + , S * refer to original, Embedded Clause Extraction, and Not-Negation, respectively."}, {"id": 121, "string": "Although not particularly more accurate than random guessing, among the considered approaches, Sent2vec fares best in distinguishing the embedded clause of a sentence from a negation of said sentence."}, {"id": 122, "string": "For a detailed analysis, we can divide the sentence triplets in this dataset into two categories as exemplified by the following examples: a) Copperweld said it doesn't expect a protracted strike."}, {"id": 123, "string": "-Copperweld said it expected a protracted strike."}, {"id": 124, "string": "-It doesn't expect a protracted strike."}, {"id": 125, "string": "b) \"We made our own decision,\" he said."}, {"id": 126, "string": "-\"We didn't make our own decision,\" he said."}, {"id": 127, "string": "-We made our own decision."}, {"id": 128, "string": "For cases resembling a), the average SkipThought similarity between the sentence and its Not-Negation version is 79.90%, while for cases resembling b), it is 26.71%."}, {"id": 129, "string": "The accuracy of SkipThought on cases resembling a is 36.90%, and the accuracy of SkipThought on cases like b is only 0.75% It seems plausible that SkipThought is more sensitive to the word order due to the recurrent architecture."}, {"id": 130, "string": "Infersent also achieved better performance on sentences resembling a) compared with sentences resembling b), its accuracy on these two structures is 28.37% and 15.73% respectively."}, {"id": 131, "string": "Argument Sensitivity."}, {"id": 132, "string": "In Table 5 , S, S + , S * to refer to the original sentence, it Passivization form, and the Argument Reordering version, respectively."}, {"id": 133, "string": "Although recurrent architectures are able to consider the order of words, unfortunately, none of the analysed approaches prove adept at distinguishing the semantic information from structural information in this case."}, {"id": 134, "string": "Fixed Point Reorder."}, {"id": 135, "string": "In Table 6 , S, S + , S * to refer to the original sentence, its semantically equivalent one and Fixed Point Inversion Version."}, {"id": 136, "string": "As Table 6 indicates, sentence embeddings based on means (GloVe averages), weighted means (Sent2Vec), or concatenation of p-mean embeddings (P-Means) are unable to distinguish the fixed point inverted sentence from the semantically equivalent one, as they do not encode sufficient word order information into the sentence embeddings."}, {"id": 137, "string": "Sent2Vec does consider ngrams but these do not affect the results sufficiently.SkipThought and InferSent did well when the original sentence and its semantically equivalence share similar structure."}, {"id": 138, "string": "Conclusion This paper proposes a simple method to inspect sentence embeddings with respect to their semantic properties, analysing three popular embedding methods."}, {"id": 139, "string": "We find that both SkipThought and InferSent distinguish negation of a sentence from synonymy."}, {"id": 140, "string": "InferSent fares better at identifying semantic equivalence regardless of the order of words and copes better with quantifiers."}, {"id": 141, "string": "SkipThoughts is more suitable for tasks in which the semantics of the sentence corresponds to its structure, but it often fails to identify sentences with different word order yet similar meaning."}, {"id": 142, "string": "In almost all cases, dedicated sentence embeddings from hidden states a neural network outperform a simple averaging of word embeddings."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 19}, {"section": "Analysis", "n": "2", "start": 20, "end": 32}, {"section": "Sentence Modification Schemes", "n": "2.1", "start": 33, "end": 62}, {"section": "Sentence Triplet Generation", "n": "2.2", "start": 63, "end": 66}, {"section": "Negation Variants: Quantifier-Negation, Not-Negation, Original sentence", "n": "2.", "start": 67, "end": 70}, {"section": "Argument Sensitivity: Original sentence, Passivization, Argument Reordering", "n": "4.", "start": 71, "end": 78}, {"section": "Fixed Point Reorder:", "n": "5.", "start": 79, "end": 83}, {"section": "Experiments", "n": "3", "start": 84, "end": 86}, {"section": "Datasets", "n": "3.1", "start": 87, "end": 90}, {"section": "Embedding Methods", "n": "3.2", "start": 91, "end": 101}, {"section": "The Skip-Thought", "n": "4.", "start": 102, "end": 105}, {"section": "Results and Discussion", "n": "3.3", "start": 106, "end": 137}, {"section": "Conclusion", "n": "4", "start": 138, "end": 142}], "figures": [{"filename": "../figure/image/1228-Table6-1.png", "caption": "Table 6: Evaluation of Fixed Point Reorder", "page": 4, "bbox": {"x1": 306.71999999999997, "x2": 530.4, "y1": 375.84, "y2": 482.88}}, {"filename": "../figure/image/1228-Table4-1.png", "caption": "Table 4: Evaluation of Clause Relatedness", "page": 4, "bbox": {"x1": 72.0, "x2": 291.36, "y1": 530.88, "y2": 604.3199999999999}}, {"filename": "../figure/image/1228-Table3-1.png", "caption": "Table 3: Evaluation of Negation Variants", "page": 4, "bbox": {"x1": 74.88, "x2": 288.0, "y1": 83.52, "y2": 156.0}}, {"filename": "../figure/image/1228-Table5-1.png", "caption": "Table 5: Evaluation of Argument Sensitivity", "page": 4, "bbox": {"x1": 306.71999999999997, "x2": 526.0799999999999, "y1": 83.52, "y2": 156.0}}, {"filename": "../figure/image/1228-Table1-1.png", "caption": "Table 1: Generated Evaluation Datasets", "page": 3, "bbox": {"x1": 89.75999999999999, "x2": 272.15999999999997, "y1": 80.64, "y2": 175.2}}, {"filename": "../figure/image/1228-Table2-1.png", "caption": "Table 2: Evaluation of Negation Detection", "page": 3, "bbox": {"x1": 309.59999999999997, "x2": 523.1999999999999, "y1": 407.52, "y2": 480.96}}]}