{"title": "Learning How to Actively Learn: A Deep Imitation Learning Approach", "abstract": "Heuristic-based active learning (AL) methods are limited when the data distribution of the underlying learning problems vary. We introduce a method that learns an AL policy using imitation learning (IL). Our IL-based approach makes use of an efficient and effective algorithmic expert, which provides the policy learner with good actions in the encountered AL situations. The AL strategy is then learned with a feedforward network, mapping situations to most informative query datapoints. We evaluate our method on two different tasks: text classification and named entity recognition. Experimental results show that our IL-based AL strategy is more effective than strong previous methods using heuristics and reinforcement learning.", "text": [{"id": 0, "string": "Introduction For many real-world NLP tasks, labeled data is rare while unlabelled data is abundant."}, {"id": 1, "string": "Active learning (AL) seeks to learn an accurate model with minimum amount of annotation cost."}, {"id": 2, "string": "It is inspired by the observation that a model can get better performance if it is allowed to choose the data points on which it is trained."}, {"id": 3, "string": "For example, the learner can identify the areas of the space where it does not have enough knowledge, and query those data points which bridge its knowledge gap."}, {"id": 4, "string": "Traditionally, AL is performed using engineered heuristics in order to estimate the usefulness of unlabeled data points as queries to an annotator."}, {"id": 5, "string": "Recent work (Fang et al., 2017; Bachman et al., 2017; Woodward and Finn, 2017) have focused on learning the AL querying strategy, as engineered heuristics are not flexible to exploit char-acteristics inherent to a given problem."}, {"id": 6, "string": "The basic idea is to cast AL as a decision process, where the most informative unlabeled data point needs to be selected based on the history of previous queries."}, {"id": 7, "string": "However, previous works train for the AL policy by a reinforcement learning (RL) formulation, where the rewards are provided at the end of sequences of queries."}, {"id": 8, "string": "This makes learning the AL policy difficult, as the policy learner needs to deal with the credit assignment problem."}, {"id": 9, "string": "Intuitively, the learner needs to observe many pairs of query sequences and the resulting end-rewards to be able to associate single queries with their utility scores."}, {"id": 10, "string": "In this work, we formulate learning AL strategies as an imitation learning problem."}, {"id": 11, "string": "In particular, we consider the popular pool-based AL scenario, where an AL agent is presented with a pool of unlabelled data."}, {"id": 12, "string": "Inspired by the Dataset Aggregation (DAGGER) algorithm (Ross et al., 2011) , we develop an effective AL policy learning method by designing an efficient and effective algorithmic expert, which provides the AL agent with good decisions in the encountered states."}, {"id": 13, "string": "We then use a deep feedforward network to learn the AL policy to associate states to actions."}, {"id": 14, "string": "Unlike the RL approach, our method can get observations and actions directly from the expert's trajectory."}, {"id": 15, "string": "Therefore, our trained policy can make better rankings of unlabelled datapoints in the pool, leading to more effective AL strategies."}, {"id": 16, "string": "We evaluate our method on text classification and named entity recognition."}, {"id": 17, "string": "The results show our method performs better than strong AL methods using heuristics and reinforcement learning, in that it boosts the performance of the underlying model with fewer labelling queries."}, {"id": 18, "string": "An open source implementation of our model is available at: https://github.com/Grayming/ ALIL."}, {"id": 19, "string": "Pool-based AL as a Decision Process We consider the popular pool-based AL setting where we are given a small set of initial labeled data and a large pool of unlabelled data, and a budget for getting the annotation of some unlabelled data by querying an oracle, e.g."}, {"id": 20, "string": "a human annotator."}, {"id": 21, "string": "The goal is to intelligently pick those unlabelled data for which if the annotations were available, the performance of the underlying re-trained model would be improved the most."}, {"id": 22, "string": "The main challenge in AL is how to identify and select the most beneficial unlabelled data points."}, {"id": 23, "string": "Various heuristics have been proposed to guide the unlabelled data selection (Settles, 2010) ."}, {"id": 24, "string": "However, there is no one AL heuristic which performs best for all problems."}, {"id": 25, "string": "The goal of this paper is to provide an approach to learn an AL strategy which is best suited for the problem at hand, instead of resorting to ad-hoc heuristics."}, {"id": 26, "string": "The AL strategy can be learned by attempting to actively learn on tasks sampled from a distribution over the tasks (Bachman et al., 2017) ."}, {"id": 27, "string": "The idea is to simulate the AL scenario on instances of the problem created using available labeled data, where the label of some part of the data is kept hidden."}, {"id": 28, "string": "This allows to have an automatic oracle to reveal the labels of the queried data, resulting in an efficient way to quickly evaluate a hypothesised AL strategy."}, {"id": 29, "string": "Once the AL strategy is learned on simulations, it is then applied to real AL scenarios."}, {"id": 30, "string": "The more related are the tasks in the real scenario to those used to train the AL strategy, the more effective the AL strategy would be."}, {"id": 31, "string": "We are interested to train a model m \u03c6 \u03c6 \u03c6 which maps an input x x x \u2208 X to its label y y y \u2208 Y x x x , where Y x x x is the set of labels for the input x x x and \u03c6 \u03c6 \u03c6 is the parameter vector of the underling model."}, {"id": 32, "string": "For example, in the named entity recognition (NER) task, the input is a sentence and the output is its label sequence, e.g."}, {"id": 33, "string": "in the IBO format."}, {"id": 34, "string": "Let D = {(x x x, y y y)} be a support set of labeled data, which is randomly partitioned into labeled D lab , unlabelled D unl , and evaluation D evl datasets."}, {"id": 35, "string": "Repeated random partitioning creates multiple instances of the AL problem."}, {"id": 36, "string": "At each time step t of an AL problem, the algorithm interacts with the oracle and queries the label of a datapoint x x x t \u2208 D unl t ."}, {"id": 37, "string": "As the result of this action, the followings happen: \u2022 The automatic oracle reveals the label y y y t ; \u2022 The labeled and unlabelled datasets are up-dated to include and exclude the recently queried data point, respectively; \u2022 The underlying model is re-trained based on the enlarged labeled data to update \u03c6 \u03c6 \u03c6; and \u2022 The AL algorithm receives a reward \u2212loss(m \u03c6 \u03c6 \u03c6 , D evl ), which is the negative loss of the current trained model on the evaluation set, defined as loss(m \u03c6 \u03c6 \u03c6 , D evl ) := (x x x,y y y)\u2208D evl loss(m \u03c6 \u03c6 \u03c6 (x x x), y y y) where loss(y y y , y y y) is the loss incurred due to predicting y y y instead of the ground truth y y y."}, {"id": 38, "string": "More formally, a pool-based AL problem is a Markov decision process (MDP), denoted by (S, A, P r(s s s t+1 |s s s t , a t ), R) where S is the state space, A is the set of actions, P r(s s s t+1 |s s s t , a t ) is the transition function, and R is the reward function."}, {"id": 39, "string": "The state s s s t \u2208 S at time t consists of the labeled D lab t and unlabelled D unl t datasets paired with the parameters of the currently trained model \u03c6 t ."}, {"id": 40, "string": "An action a t \u2208 A corresponds to the selection of a query datapoint, and the reward function R(s s s t , a t , s s s t+1 ) := \u2212loss(m \u03c6 \u03c6 \u03c6t , D evl )."}, {"id": 41, "string": "We aim to find the optimal AL policy prescribing which datapoint needs to be queried in a given state to get the most benefit."}, {"id": 42, "string": "The optimal policy is found by maximising the following objective over the parameterised policies: E (D lab ,D unl ,D evl )\u223cD E\u03c0 \u03b8 \u03b8 \u03b8 B t=1 R(s s st, at, s s st+1) (1) where \u03c0 \u03b8 \u03b8 \u03b8 is the policy network parameterised by \u03b8 \u03b8 \u03b8, D is a distribution over possible AL problem instances, and B is the maximum number of queries made in an AL run, a.k.a."}, {"id": 43, "string": "an episode."}, {"id": 44, "string": "Following (Bachman et al., 2017) , we maximise the sum of the rewards after each time step to encourage the anytime behaviour, i.e."}, {"id": 45, "string": "the model should perform well after each label query."}, {"id": 46, "string": "Deep Imitation Learning to Train the AL Policy The question remains as how can we train the policy network to maximise the training objective in eqn 1."}, {"id": 47, "string": "Typical learning approaches resort to deep reinforcement learning (RL) and provide training signal at the end of each episode to learn the optimal policy (Fang et al., 2017; Bachman et al., 2017) e.g., using policy gradient methods."}, {"id": 48, "string": "These approaches, however, need a large number of training episodes to learn a reasonable policy as they need to deal with the credit assignment problem, i.e."}, {"id": 49, "string": "discovery of the utility of individual actions in the sequence based on the achieved reward at the end of the episode."}, {"id": 50, "string": "This exacerbates the difficulty of finding a good AL policy."}, {"id": 51, "string": "We formulate learning for the AL policy as an imitation learning problem."}, {"id": 52, "string": "At each state, we provide the AL agent with a correct action which is computed by an algorithmic expert."}, {"id": 53, "string": "The AL agent uses the sequence of states observed in an episode paired with the expert's sequence of actions to update its policy."}, {"id": 54, "string": "This directly addresses the credit assignment problem, and reduces the complexity of the problem compared to the RL approaches."}, {"id": 55, "string": "In what follows, we describe the ingredients of our deep imitation learning (IL) approach, which is summarised in Algorithm 1."}, {"id": 56, "string": "Algorithmic Expert."}, {"id": 57, "string": "At a given AL state s s s t , our algorithmic expert computes an action by evaluating the current pool of unlabeled data."}, {"id": 58, "string": "More concretely, for each x x x \u2208 D pool rnd and its correct label y y y , the underlying model m \u03c6 \u03c6 \u03c6t is re-trained to get m x x x \u03c6 \u03c6 \u03c6t , where D pool rnd \u2282 D unl t is a small subset of the current large pool of unlabeled data."}, {"id": 59, "string": "The expert action is then computed as: arg min x x x \u2208D pool rnd loss(m x x x \u03c6 \u03c6 \u03c6t (x x x), D evl )."}, {"id": 60, "string": "(2) In other words, our algorithmic expert tries a subset of actions to roll-out one step from the current state, in order to efficiently compute a reasonable action."}, {"id": 61, "string": "Searching for the optimal action would be O(|D unl | B ), which is computationally challenging due to (i) the large action set, and (ii) the exponential dependence on the length of the roll out."}, {"id": 62, "string": "We will see in the experiments that our method efficiently learns effective AL policies."}, {"id": 63, "string": "Policy Network."}, {"id": 64, "string": "Our policy network is a feedforward network with two fully-connected hidden layers."}, {"id": 65, "string": "It receives the current AL state, and provides a preference score for a given unlabeled data point, allowing to select the most beneficial one corresponding to the highest score."}, {"id": 66, "string": "The input to our policy network consists of three parts: (i) a fixed dimensional representation of the content and the predicted label of the unlabeled data point under consideration, (ii) a fixed-dimensional rep-resentation of the content and the labels of the labeled dataset, and (iii) a fixed-dimensional representation of the content of the unlabeled dataset."}, {"id": 67, "string": "Imitation Learning Algorithm."}, {"id": 68, "string": "A typical approach to imitation learning (IL) is to train the policy network so that it mimics the expert's behaviour given training data of the encountered states (input) and actions (output) performed by the expert."}, {"id": 69, "string": "The policy network's prediction affects future inputs during the execution of the policy."}, {"id": 70, "string": "This violates the crucial independent and identically distributed (iid) assumption, inherent to most statistical supervised learning approaches for learning a mapping from states to actions."}, {"id": 71, "string": "We make use of Dataset Aggregation (DAGGER) (Ross et al., 2011) , an iterative algorithm for IL which addresses the non-iid nature of the encountered states during the AL process (see Algorithm 1)."}, {"id": 72, "string": "In round \u03c4 of DAG-GER, the learned policy network\u03c0 \u03c4 is applied to the AL problem to collect a sequence of states which are paired with the expert actions."}, {"id": 73, "string": "The collected pair of states and actions are aggregated to the dataset of such pairs M , collected from the previous iterations of the algorithm."}, {"id": 74, "string": "The policy network is then re-trained on the aggregated set, resulting in\u03c0 \u03c4 +1 for the next iteration of the algorithm."}, {"id": 75, "string": "The intuition is to build up the set of states that the algorithm is likely to encounter during its execution, in order to increase the generalization of the policy network."}, {"id": 76, "string": "To better leverage the training signal from the algorithmic expert, we allow the algorithm to collect state-action pairs according to a modified policy which is a mixture of\u03c0 \u03c4 and the expert policy\u03c0 * \u03c4 , i.e."}, {"id": 77, "string": "\u03c0 \u03c4 = \u03b2 \u03c4\u03c0 * + (1 \u2212 \u03b2 \u03c4 )\u03c0 \u03c4 where \u03b2 \u03c4 \u2208 [0, 1] is a mixing coefficient."}, {"id": 78, "string": "This amounts to tossing a coin with parameter \u03b2 \u03c4 in each iteration of the algorithm to decide one of these two policies for data collection."}, {"id": 79, "string": "Re-training the Policy Network."}, {"id": 80, "string": "To train our policy network, we turn the preference scores to probabilities, and optimise the parameters such that the probability of the action prescribed by the expert is maximized."}, {"id": 81, "string": "More specifically, let M := {(s s s i , a a a i )} I i=1 be the collected states paired with their expert's prescribed actions."}, {"id": 82, "string": "Let D pool i be the set of unlabelled datapoints in the pool within the state, and a a a i denote the datapoint selected by the expert in the set."}, {"id": 83, "string": "Our training objective is I i=1 log P r(a a a i |D pool i ) where P r(a a a i |D pool i ) := exp\u03c0(a a a i ; s s s i ) x x x\u2208D pool i exp\u03c0(x x x; s s s i ) ."}, {"id": 84, "string": "The above can be interpreted as the probability of a a a i being the best action among all possible actions in the state."}, {"id": 85, "string": "Following (Mnih et al., 2015) , we randomly sample multiple 1 mini-batches from the replay memory M, in addition to the current round's stat-action pair, in order to retrain the policy network."}, {"id": 86, "string": "For each mini-batch, we make one SGD step to update the policy, where the gradients of the network parameters are calculated using the backpropagation algorithm."}, {"id": 87, "string": "Transferring the Policy."}, {"id": 88, "string": "We now apply the policy learned on the source task to AL in the target task."}, {"id": 89, "string": "We expect the learned policy to be effective for target tasks which are related to the source task in terms of the data distribution and characteristics."}, {"id": 90, "string": "Algorithm 2 illustrates the policy transfer."}, {"id": 91, "string": "The pool-based AL scenario in Algorithm 2 is cold-start; however, extending to incorporate initially available labeled data is straightforward."}, {"id": 92, "string": "Experiments We conduct experiments on text classification and named entity recognition (NER)."}, {"id": 93, "string": "The AL scenarios include cross-domain sentiment classification, cross-lingual authorship profiling, and crosslingual named entity recognition (NER), whereby an AL policy trained on a source domain/language is transferred to the target domain/language."}, {"id": 94, "string": "We compare our proposed AL method using imitation learning (ALIL) with the followings: \u2022 Random sampling: The query datapoint is chosen randomly."}, {"id": 95, "string": "Algorithm 1 Learn active learning policy via imitation learning Input: large labeled data D, max episodes T , budget B, sample size K, the coin parameter \u03b2 Output: The learned policy 1: M \u2190 \u2205 the aggregated dataset 2: initialise\u03c01 with a random policy 3: for \u03c4 =1, ."}, {"id": 96, "string": "."}, {"id": 97, "string": "."}, {"id": 98, "string": ", T do 4: D lab , D unl , D evl \u2190 dataPartition(D) 5: \u03c6 \u03c6 \u03c61 \u2190 trainModel(D lab ) 6: c \u2190 coinToss(\u03b2) 7: for t \u2208 1, ."}, {"id": 99, "string": "."}, {"id": 100, "string": "."}, {"id": 101, "string": ", B do 8: D pool rnd \u2190 sampleUniform(D unl , K) 9: s s st \u2190 (D lab , D pool rnd , \u03c6 \u03c6 \u03c6t) 10: a a at \u2190 arg min x x x \u2208D pool rnd loss(m x x x \u03c6 \u03c6 \u03c6 t , D evl ) 11: if c is head then the expert 12: x x xt \u2190 a a at 13: else the policy 14: x \u03c6 \u2190 retrainModel(\u03c6 \u03c6 \u03c6, D lab ) 10: end for 11: return D lab and \u03c6 \u03c6 \u03c6 \u2022 Diversity sampling: The query datapoint is arg minx x x x x x \u2208D lab Jaccard(x x x, x x x ), where the Jaccard coefficient between the unigram features of the two given texts is used as the similarity measure."}, {"id": 102, "string": "x xt \u2190 arg max x x x \u2208D pool rnd\u03c0 \u03c4 (x x x ; s s st) 15: end if 16: D lab \u2190 D lab + {(x x xt, y y yt)} 17: D unl \u2190 D unl \u2212 {x x xt} 18: M \u2190 M + {(s s st, a a at)} 19: \u03c6 \u03c6 \u03c6t+1 \u2190 retrainModel(\u03c6 \u03c6 \u03c6t, D \u2022 Uncertainty-based sampling: For text classification, we use the datapoint with the highest predictive entropy, arg maxx x x \u2212 y p(y|x x x, D lab ) log p(y|x x x, D lab ) where p(y y y|x x x, D lab ) comes from the underlying model."}, {"id": 103, "string": "We further use a state-of-the-art extension of this method, called uncertainty with rationals (Sharma et al., 2015) , which not only considers uncertainty but also looks whether  the unlabelled document contains sentiment words or phrases that were returned as rationales for any of the existing labeled documents."}, {"id": 104, "string": "For NER, we use the Total Token Entropy (TTE) as the uncertainty sampling method, arg maxx x x \u2212 |x x x| i=1 y i p(yi|x x x, D lab ) log p(yi|x x x, D lab ) which has been shown to be the best heuristic for this task among 17 different heuristics (Settles and Craven, 2008) ."}, {"id": 105, "string": "\u2022 PAL: A reinforcement learning based approach (Fang et al., 2017) , which makes use a deep Q-network to make the selection decision for stream-based active learning."}, {"id": 106, "string": "Text Classification Datasets and Setup."}, {"id": 107, "string": "The first task is sentiment classification, in which product reviews express either positive or negative sentiment."}, {"id": 108, "string": "The data comes from the Amazon product reviews (McAuley and Yang, 2016); see Table 1 for data statistics."}, {"id": 109, "string": "The second task is Authorship Profiling, in which we aim to predict the gender of the text author."}, {"id": 110, "string": "The data comes from the gender profiling task in PAN 2017 (Rangel et al., 2017) , which consists of a large Twitter corpus in multiple languages: English (en), Spanish (es) and Portuguese (pt)."}, {"id": 111, "string": "For each language, all tweets collected from a user constitute one document; Table 1 shows data statistics."}, {"id": 112, "string": "The multilingual embeddings for this task come from off-the-shelf CCA-trained embeddings (Ammar et al., 2016) for twelve languages, including English, Spanish and Portuguese."}, {"id": 113, "string": "We fix these word embeddings during training of both the policy and the underlying classification model."}, {"id": 114, "string": "For training, 10% of the source data is used as the evaluation set for computing the best action in imitation learning."}, {"id": 115, "string": "We run T = 100 episodes with the budget B = 100 documents in each episode, set the sample size K = 5, and fix the mixing coefficient \u03b2 \u03c4 = 0.5."}, {"id": 116, "string": "For testing, we take 90% of the target data as the unlabeled pool, and the remaining 10% as the test set."}, {"id": 117, "string": "We show the test accuracy w.r.t."}, {"id": 118, "string": "the number of labelled documents selected in the AL process."}, {"id": 119, "string": "As the underlying model m \u03c6 \u03c6 \u03c6 , we use a fast and efficient text classifier based on convolutional neural networks."}, {"id": 120, "string": "More specifically, we apply 50 convolutional filters with ReLU activation on the embedding of all words in a document x x x, where the width of the filters is 3."}, {"id": 121, "string": "The filter outputs are averaged to produce a 50-dimensional document representation h h h(x x x), which is then fed into a softmax to predict the class."}, {"id": 122, "string": "Results."}, {"id": 123, "string": "Fig 2 shows the results on product sentiment prediction and authorship profiling, in cross-domain and cross-lingual AL scenarios 2 ."}, {"id": 124, "string": "Our ALIL method consistently outperforms both heuristic-based and RL-based (PAL) (Fang et al., 2017) approaches across all tasks."}, {"id": 125, "string": "ALIL tends to convergence faster than other methods, which indicates its policy can quickly select the most informative datapoints."}, {"id": 126, "string": "Interestingly, the uncertainty and diversity sampling heuristics perform worse than random sampling on sentiment classification."}, {"id": 127, "string": "We speculate this may be due to these two heuristics not being able to capture the polarity information during the data selection process."}, {"id": 128, "string": "PAL performs on-par with uncertainty with rationals on musical device, both of which outperform the traditional diversity and uncertainty sampling heuristics."}, {"id": 129, "string": "Interestingly, PAL is outperformed by random sampling on movie reviews, and by the traditional uncertainty sampling heuristic on authorship profiling tasks."}, {"id": 130, "string": "We attribute this to ineffectiveness of the RL-based approach for learning a reasonable AL query strategy."}, {"id": 131, "string": "We further investigate combining the transfer of the policy network with the transfer of the underlying classifier."}, {"id": 132, "string": "That is, we first train a classi- fier on all of the annotated data from the source domain/language."}, {"id": 133, "string": "Then, this classifier is ported to the target domain/language; for cross-language transfer, we make use of multilingual word embeddings."}, {"id": 134, "string": "We start the AL process starting from the transferred classifier, referred to as the warmstart AL."}, {"id": 135, "string": "We compare the performance of the directly transferred classifier with those obtained after the AL process in the warm-start and cold-start scenarios."}, {"id": 136, "string": "The results are shown in Table 2 ."}, {"id": 137, "string": "We have run the cold-start and warm-start AL for 25 times, and reported the average accuracy in Table 2."}, {"id": 138, "string": "As seen from the results, both the cold and warm start AL settings outperform the direct transfer significantly, and the warm start consistently gets higher accuracy than the cold start."}, {"id": 139, "string": "The difference between the results are statistically significant, with a p-value of .001, according to McNemar test 3 (Dietterich, 1998) ."}, {"id": 140, "string": "musical movie es pt direct transfer 0.715 0.640 0.675 0.740 cold-start AL 0.800 0.760 0.728 0.773 warm-start AL 0.825 0.765 0.730 0.780 Table 2 : Classifiers performance under three different transfer settings."}, {"id": 141, "string": "Named Entity Recognition Data and setup We use NER corpora from the CONLL2002/2003 shared tasks, which include annotated text in English (en), German (de), Spanish (es), and Dutch (nl)."}, {"id": 142, "string": "The original annotation is based on IOB1, which we convert to the IO labelling scheme."}, {"id": 143, "string": "Following Fang et al."}, {"id": 144, "string": "(2017) , we consider two experimental conditions: (i) the bilingual scenario where English is the source (used for policy training) and other languages are the target, and (ii) the multilingual scenario where one of the languages (except English) is the target and the remaining ones are the source used in joint training of the AL policy."}, {"id": 145, "string": "The underlying model m \u03c6 \u03c6 \u03c6 is a conditional random field (CRF) treating NER as a sequence labelling task."}, {"id": 146, "string": "The prediction is made using the Viterbi algorithm."}, {"id": 147, "string": "In the existing corpus partitions from CoNLL, each language has three subsets: train, testa and testb."}, {"id": 148, "string": "During policy training with the source language(s), we combine these three subsets, shuffle, and re-split them into simulated training, unlabelled pool, and evaluation sets in every episode."}, {"id": 149, "string": "We run N = 100 episodes with the budget B = 200, and set the sample size k = 5."}, {"id": 150, "string": "When we transfer the policy to the target language, we do one episode and select B datapoints from train (treated as the pool of unlabeled data) and report F1 scores on testa."}, {"id": 151, "string": "Representing state-action."}, {"id": 152, "string": "The input to the policy network includes the representation of the candidate sentence using the sum of its words' embeddings h h h(x x x), the representation of the labelling marginals using the label-level convolutional network cnn lab (E m \u03c6 \u03c6 \u03c6 (y y y|x x x) [y y y]) (Fang et al., 2017) , the representation of sentences in the labeled data  diction |x x x| max y y y m \u03c6 \u03c6 \u03c6 (y y y|x x x), where |x x x| denotes the length of the sentence x x x."}, {"id": 153, "string": "For the word embeddings, we use off-the-shelf CCA trained multilingual embeddings (Ammar et al., 2016) with 40 dimensions; we fix these during policy training."}, {"id": 154, "string": "Results."}, {"id": 155, "string": "Fig."}, {"id": 156, "string": "3 shows the results for three target languages."}, {"id": 157, "string": "In addition to the strong heuristicbased methods, we compare our imitation learning approach (ALIL) with the reinforcement learning approach (PAL) (Fang et al., 2017) , in both bilingual (bi) and multilingual (mul) transfer settings."}, {"id": 158, "string": "Across all three languages, ALIL.bi and ALIL.mul outperform the heuristic methods, including Uncertainty Sampling based on TTE."}, {"id": 159, "string": "This is expected as the uncertainty sampling largely relies on a high quality underlying model, and diversity sampling ignores the labelling information."}, {"id": 160, "string": "In the bilingual case, ALIL.bi outperforms PAL.bi on Spanish (es) and Dutch (nl), and performs similarly on German (de)."}, {"id": 161, "string": "In the multilingual case, ALIL.mul achieves the best performance on Spanish, and performs competitively with PAL.mul on German and Dutch."}, {"id": 162, "string": "Analysis Insight on the selected data."}, {"id": 163, "string": "We compare the data selected by ALIL to other methods."}, {"id": 164, "string": "This will confirm that ALIL learns policies which are suitable for the problem at hand, without resorting to a fixed engineered heuristics."}, {"id": 165, "string": "For this analysis, we report the mean reciprocal rank (MRR) of the data points selected by the ALIL policy under rankings of the unlabelled pool generated by the uncertainty and diversity sampling."}, {"id": 166, "string": "Furthermore, we measure the fraction of times the decisions made by the ALIL policy agrees with those which would  have been made by the heuristic methods, which is measured by the accuracy (acc)."}, {"id": 167, "string": "Table 3 report these measures."}, {"id": 168, "string": "As we can see, for sentiment classification since uncertainty and diversity sampling perform badly, ALIL has a big disagreement with them on the selected data points."}, {"id": 169, "string": "While for gender classification on Portuguese and NER on Spanish, ALIL shows much more agreement with other three heuristics."}, {"id": 170, "string": "Lastly, we compare chosen queries by ALIL to those by PAL, to investigate the extent of the agreement between these two methods."}, {"id": 171, "string": "This is simply measure by the fraction of identical query data points among the total number of queries (i.e."}, {"id": 172, "string": "accuracy)."}, {"id": 173, "string": "Since PAL is stream-based and sensitive to the order in which it receives the data points, we report the average accuracy taken over multiple runs with random input streams."}, {"id": 174, "string": "The expected accuracy numbers are reported in Table 3 ."}, {"id": 175, "string": "As seen, ALIL has higher overlap with PAL than the heuristic-based methods, in terms of the selected queries."}, {"id": 176, "string": "Sensitivity to K. As seen in Algorithm 1, we resort to an approximate algorithmic expert, which selects the best action in a random subset of the pool of unlabelled data with size K, in order to make the policy training efficient."}, {"id": 177, "string": "Note that, in policy training, setting K to one and the size of the unlabelled data pool correspond to stream-based and pool-based AL scenarios, respectively."}, {"id": 178, "string": "By changing K to values between these two extremes, we can analyse the effect of the quality of the algorithmic expert on the trained policy; Figure 4 shows the results."}, {"id": 179, "string": "A larger candidate set may correspond to a better learned policy, needed to be traded off with the training time growing linearly with K. Interestingly, even small candidate sets lead to strong AL policies as increasing K beyond 10 does not change the performance significantly."}, {"id": 180, "string": "Dynamically changing \u03b2."}, {"id": 181, "string": "In our algorithm, \u03b2 plays an important role as it trades off exploration versus exploitation."}, {"id": 182, "string": "In the above experiments, we fix it to 0.5; however, we can change its value throughout trajectory collection as a function of \u03c4 (see Algorithm 1)."}, {"id": 183, "string": "We investigate schedules which tend to put more emphasis on exploration and exploitation towards the beginning and end of data collection, respectively."}, {"id": 184, "string": "We investigate the following schedules: (i) linear \u03b2 \u03c4 = max(0.5, 1 \u2212 0.01\u03c4 ), (ii) exponential \u03b2 \u03c4 = 0.9 \u03c4 , and (iii) and inverse sigmoid \u03b2 \u03c4 = 5 5+exp(\u03c4 /5) , as a function of iterations."}, {"id": 185, "string": "Fig."}, {"id": 186, "string": "5 shows the comparisons of these schedules."}, {"id": 187, "string": "The learned policy seems to perform competitively with either a fixed or an exponential schedule."}, {"id": 188, "string": "We have also investigated tossing the coin in each step within the trajectory roll out, but found that it is more effective to have it before the full trajectory roll out (as currently done in Algorithm 1)."}, {"id": 189, "string": "Related Work Traditional active learning algorithms rely on various heuristics (Settles, 2010) , such as uncertainty sampling (Settles and Craven, 2008; Houlsby et al., 2011 ), query-by-committee (Gilad-Bachrach et al., 2006 , and diversity sampling (Brinker, 2003; Joshi et al., 2009; Yang et al., 2015) ."}, {"id": 190, "string": "Apart from these, different heuristics can be combined, thus creating integrated strategy which consider one or more heuristics at the same time."}, {"id": 191, "string": "Combined with transfer learning, pre-existing labeled data from related tasks can help improve the performance of an active learner (Xiao and Guo, 2013; Kale and Liu, 2013; Huang and Chen, 2016; Konyushkova et al., 2017) ."}, {"id": 192, "string": "More recently, deep reinforcement learning is used as the framework for learning active learning algorithms, where the active learning cycle is considered as a decision process."}, {"id": 193, "string": "(Woodward and Finn, 2017) extended one shot learning to active learning and combined reinforcement learning with a deep recurrent model to make labeling decisions."}, {"id": 194, "string": "(Bachman et al., 2017) introduced a policy gradient based method which jointly learns data representation, selection heuristic as well as the model prediction function."}, {"id": 195, "string": "(Fang et al., 2017) designed an active learning algorithm based on a deep Qnetwork, in which the action corresponds to binary annotation decisions applied to a stream of data."}, {"id": 196, "string": "The learned policy can then be transferred between languages or domains."}, {"id": 197, "string": "Imitation learning (IL) refers to an agent's acquisition of skills or behaviours by observing an expert's trajectory in a given task."}, {"id": 198, "string": "It helps reduce sequential prediction tasks into supervised learning by employing a (near) optimal oracle at training time."}, {"id": 199, "string": "Several IL algorithms has been proposed in sequential prediction tasks, including SEARA (Daum\u00e9 et al., 2009) , AggreVaTe (Ross and Bagnell, 2014) , DaD (Venkatraman et al., 2015) , LOLS , DeeplyAggre-VaTe (Sun et al., 2017) ."}, {"id": 200, "string": "Our work is closely related to Dagger (Ross et al., 2011) , which can guarantee to find a good policy by addressing the dependency nature of encountered states in a trajectory."}, {"id": 201, "string": "Conclusion In this paper, we have proposed a new method for learning active learning algorithms using deep imitation learning."}, {"id": 202, "string": "We formalize pool-based active learning as a Markov decision process, in which active learning corresponds to the selection decision of the most informative data points from the pool."}, {"id": 203, "string": "Our efficient algorithmic expert provides state-action pairs from which effective active learning policies can be learned."}, {"id": 204, "string": "We show that the algorithmic expert allows direct policy learning, while at the same time, the learned policies transfer successfully between domains and languages, demonstrating improvement over previous heuristic and reinforcement learning approaches."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 18}, {"section": "Pool-based AL as a Decision Process", "n": "2", "start": 19, "end": 45}, {"section": "Deep Imitation Learning to Train the AL Policy", "n": "3", "start": 46, "end": 91}, {"section": "Experiments", "n": "4", "start": 92, "end": 105}, {"section": "Text Classification", "n": "4.1", "start": 106, "end": 140}, {"section": "Named Entity Recognition", "n": "4.2", "start": 141, "end": 161}, {"section": "Analysis", "n": "4.3", "start": 162, "end": 188}, {"section": "Related Work", "n": "5", "start": 189, "end": 200}, {"section": "Conclusion", "n": "6", "start": 201, "end": 204}], "figures": [{"filename": "../figure/image/1297-Table2-1.png", "caption": "Table 2: Classifiers performance under three different transfer settings.", "page": 5, "bbox": {"x1": 77.75999999999999, "x2": 284.15999999999997, "y1": 536.64, "y2": 595.1999999999999}}, {"filename": "../figure/image/1297-Figure2-1.png", "caption": "Figure 2: The performance of different active learning methods for cross domain sentiment classification (left two plots) and cross lingual authorship profiling (right two plots).", "page": 5, "bbox": {"x1": 72.0, "x2": 526.0799999999999, "y1": 61.44, "y2": 213.12}}, {"filename": "../figure/image/1297-Figure4-1.png", "caption": "Figure 4: The learning curves of agents with different K on Spanish (es) NER.", "page": 6, "bbox": {"x1": 391.68, "x2": 525.12, "y1": 68.64, "y2": 189.12}}, {"filename": "../figure/image/1297-Figure3-1.png", "caption": "Figure 3: The performance of active learning methods on the bilingual and multilingual settings for three target languages: German (de), Spanish (es) and Dutch (nl).", "page": 6, "bbox": {"x1": 72.96, "x2": 387.36, "y1": 61.44, "y2": 196.32}}, {"filename": "../figure/image/1297-Table3-1.png", "caption": "Table 3: The first four rows show MRR and accuracy of instances returned by ALIL under the rankings of uncertainty and diversity sampling, the last row give average accuracy of instances under PAL.", "page": 6, "bbox": {"x1": 309.59999999999997, "x2": 521.28, "y1": 264.48, "y2": 329.28}}, {"filename": "../figure/image/1297-Figure1-1.png", "caption": "Figure 1: The policy network and its inputs.", "page": 2, "bbox": {"x1": 330.71999999999997, "x2": 497.28, "y1": 112.8, "y2": 226.07999999999998}}, {"filename": "../figure/image/1297-Figure5-1.png", "caption": "Figure 5: The learning curves of agents with different schedules for \u03b2 before the trajectory on Spanish (es) NER.", "page": 7, "bbox": {"x1": 112.8, "x2": 250.07999999999998, "y1": 61.44, "y2": 187.2}}, {"filename": "../figure/image/1297-Table1-1.png", "caption": "Table 1: The data sets used in sentiment classification (top part) and gender profiling (bottom part).", "page": 4, "bbox": {"x1": 76.8, "x2": 283.2, "y1": 62.879999999999995, "y2": 129.12}}]}