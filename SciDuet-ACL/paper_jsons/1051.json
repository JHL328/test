{"title": "Language identification of names with SVMs", "abstract": "The task of identifying the language of text or utterances has a number of applications in natural language processing. Language identification has traditionally been approached with character-level language models. However, the language model approach crucially depends on the length of the text in question. In this paper, we consider the problem of language identification of names. We show that an approach based on SVMs with n-gram counts as features performs much better than language models. We also experiment with applying the method to pre-process transliteration data for the training of separate models.", "text": [{"id": 0, "string": "Introduction The task of identifying the language of text or utterances has a number of applications in natural language processing."}, {"id": 1, "string": "Font Llitj\u00f3s and Black (2001) show that language identification can improve the accuracy of letter-to-phoneme conversion."}, {"id": 2, "string": "Li et al."}, {"id": 3, "string": "(2007) use language identification in a transliteration system to account for different semantic transliteration rules between languages when the target language is Chinese."}, {"id": 4, "string": "Huang (2005) improves the accuracy of machine transliteration by clustering his training data according to the source language."}, {"id": 5, "string": "Language identification has traditionally been approached using character-level n-gram language models."}, {"id": 6, "string": "In this paper, we propose the use of support vector machines (SVMs) for the language identification of very short texts such as proper nouns."}, {"id": 7, "string": "We show that SVMs outperform language models on two different data sets consisting of personal names."}, {"id": 8, "string": "Furthermore, we test the hypothesis that language identification can improve transliteration by pre-processing the source data and training separate models using a state-of-the-art transliteration system."}, {"id": 9, "string": "Previous work N -gram approaches have proven very popular for language identification in general."}, {"id": 10, "string": "Cavnar and Trenkle (1994) apply n-gram language models to general text categorization."}, {"id": 11, "string": "They construct character-level language models using n-grams up to a certain maximum length from each class in their training corpora."}, {"id": 12, "string": "To classify new text, they generate an n-gram frequency profile from the text and then assign it to the class having the most similar language model, which is determined by summing the differences in n-gram ranks."}, {"id": 13, "string": "Given 14 languages, text of 300 characters or more, and retaining the 400 most common n-grams up to length 5, they achieve an overall accuracy of 99.8%."}, {"id": 14, "string": "However, the accuracy of the n-gram approach strongly depends on the length of the texts."}, {"id": 15, "string": "Kruengkrai et al."}, {"id": 16, "string": "(2005) report that, on a language identification task of 17 languages with average text length 50 bytes, the accuracy drops to 90.2%."}, {"id": 17, "string": "When SVMs were used for the same task, they achieved 99.7% accuracy."}, {"id": 18, "string": "Konstantopoulos (2007) looks particularly at the task of identifying the language of proper nouns."}, {"id": 19, "string": "He focuses on a data set of soccer player names coming from 13 possible national languages."}, {"id": 20, "string": "He finds that using general n-gram language models yields an average F 1 score of only 27%, but training the models specifically to these smaller data gives significantly better results: 50% average F 1 score for last names only, and 60% for full names."}, {"id": 21, "string": "On the other hand, Li et al."}, {"id": 22, "string": "(2007) report some good results for single-name language identification using n-gram language models."}, {"id": 23, "string": "For the task of separating single Chinese, English, and Japanese names, they achieve an overall accuracy of 94.8%."}, {"id": 24, "string": "One reason that they do better is because of the smaller number of classes."}, {"id": 25, "string": "We can further see that the languages in question are very dissimilar, making the problem easier; for example, the character \"x\" appears only in the list of Chinese names, and the bigram \"kl\" appears only in the list of English names."}, {"id": 26, "string": "Language identification with SVMs Rather than using language models to determine the language of a name, we propose to count character n-gram occurrences in the given name, for n up to some maximum length, and use these counts as the features in an SVM."}, {"id": 27, "string": "We choose SVMs because they can take a large number of features and learn to weigh them appropriately."}, {"id": 28, "string": "When counting n-grams, we include space characters at the beginning and end of each word, so that prefixes and suffixes are counted appropriately."}, {"id": 29, "string": "In addition to n-gram counts, we also include word length as a feature."}, {"id": 30, "string": "In our initial experiments, we tested several different kernels."}, {"id": 31, "string": "The kernels that performed the best were the linear, sigmoid, and radial basis function (RBF) kernels."}, {"id": 32, "string": "We tested various maximum n-gram lengths; Figure 1 shows the accuracy of the linear kernel as a function of maximum n-gram length."}, {"id": 33, "string": "Polynomial kernels, a substring match-count string kernel, and a string kernel based on the edit distance all performed poorly in comparison."}, {"id": 34, "string": "We also experimented with other modifications such as normalizing the feature vectors, and decreasing the weights of frequent n-gram counts to avoid larger counts dominating smaller counts."}, {"id": 35, "string": "Since the effects were negligible, we exclude these results from this paper."}, {"id": 36, "string": "In our experiments, we used the LIBLINEAR (Fan et al., 2008) package for the linear kernel and the LIBSVM (Chang and Lin, 2001 ) package for the RBF and sigmoid kernels."}, {"id": 37, "string": "We discarded any periods and parentheses, but kept apostrophes and hyphens, and we converted all letters to lower case."}, {"id": 38, "string": "We removed very short names of length less than two."}, {"id": 39, "string": "For all data sets, we held out 10% of the data as the test set."}, {"id": 40, "string": "We then found optimal parameters for each kernel type using 10-fold cross-validation on the remaining training set."}, {"id": 41, "string": "This yielded optimum maximum n-gram lengths of four for single names and five for full names."}, {"id": 42, "string": "Using the optimal parameters, we constructed models from the entire training data and then tested the models on the held-out test set."}, {"id": 43, "string": "Intrinsic evaluation We used two corpora to test our SVM-based approach: the Transfermarkt corpus of soccer player names, and the Chinese-English-Japanese (CEJ) corpus of first names and surnames."}, {"id": 44, "string": "These corpora are described in further detail below."}, {"id": 45, "string": "Transfermarkt corpus The Transfermarkt corpus (Konstantopoulos, 2007) consists of European soccer player names annotated with one of 13 possible national languages, with separate lists provided for last names and full names."}, {"id": 46, "string": "Diacritics were removed in order to avoid trivializing the task."}, {"id": 47, "string": "There are 14914 full names, with average length 14.8, and 12051 last names, with average length 7.8."}, {"id": 48, "string": "It should be noted that these data are noisy; the fact that a player plays for a certain nation's team does not necessarily indicate that his or her name is of that nation's language."}, {"id": 49, "string": "For example, Dario Dakovic was born in Bosnia but plays for the Austrian national team; his name is therefore annotated as German."}, {"id": 50, "string": "ing SVMs clearly outperforms using language models on the Transfermarkt corpus; in fact, SVMs yield better accuracy on last names than language models on full names."}, {"id": 51, "string": "Differences between kernels are not statistically significant."}, {"id": 52, "string": "CEJ corpus The CEJ corpus (Li et al., 2007) provides a combined list of first names and surnames, each classified as Chinese, English, or Japanese."}, {"id": 53, "string": "There are a total of 97115 names with an average length of 7.6 characters."}, {"id": 54, "string": "This corpus was used for the semantic transliteration of personal names into Chinese."}, {"id": 55, "string": "We found that the RBF and sigmoid kernels were very slow-presumably due to the large size of the corpus-so we tested only the linear kernel."}, {"id": 56, "string": "Table 2 shows our results in comparison to those of language models reported in (Li et al., 2007) ; we reduce the error rate by over 50%."}, {"id": 57, "string": "Application to machine transliteration Machine transliteration is one of the primary potential applications of language identification because the language of a word often determines its pronunciation."}, {"id": 58, "string": "We therefore tested language identification to see if results could indeed be improved by using language identification as a pre-processing step."}, {"id": 59, "string": "Data The English-Hindi corpus of names (Li et al., 2009; MSRI, 2009 ) contains a test set of 1000 names represented in both the Latin and Devanagari scripts."}, {"id": 60, "string": "We manually classified these names as being of either Indian or non-Indian origin, occasionally resorting to web searches to help disambiguate them."}, {"id": 61, "string": "1 We discarded those names that fell into both categories 1 Our tagged data are available online at http://www."}, {"id": 62, "string": "cs.ualberta.ca/\u02dcab31/langid/."}, {"id": 63, "string": "(e.g."}, {"id": 64, "string": "\"Maya\") as well as those that we could not confidently classify."}, {"id": 65, "string": "In total, we discarded 95 of these names, and randomly selected 95 names from the training set that we could confidently classify to complete our corpus of 1000 names."}, {"id": 66, "string": "Of the 1000 names, 546 were classified as being of Indian origin and the remaining 454 were classified as being of non-Indian origin; the names have an average length of 7.0 characters."}, {"id": 67, "string": "We trained our language identification approach on 900 names, with the remaining 100 names serving as the test set."}, {"id": 68, "string": "The resulting accuracy was 80% with the linear kernel, 84% with the RBF kernel, and 83% with the sigmoid kernel."}, {"id": 69, "string": "In this case, the performance of the RBF kernel was found to be significantly better than that of the linear kernel according to the McNemar test with p < 0.05."}, {"id": 70, "string": "Experimental setup We tested a simple method of combining language identification with transliteration."}, {"id": 71, "string": "We use a language identification model to split the training, development, and test sets into disjoint classes."}, {"id": 72, "string": "We train a transliteration model on each separate class, and then combine the results."}, {"id": 73, "string": "Our transliteration system was DIRECTL (Jiampojamarn et al., 2009) ."}, {"id": 74, "string": "We trained the language identification model over the entire set of 1000 tagged names using the parameters from above."}, {"id": 75, "string": "Because these names comprised most of the test set and were now being used as the training set for the language identification model, we swapped various names between sets such that none of the words used for training the language identification model were in the final transliteration test set."}, {"id": 76, "string": "Using this language identification model, we split the data."}, {"id": 77, "string": "After splitting, the \"Indian\" training, development, and testing sets had 5032, 575, and 483 words respectively while the \"non-Indian\" sets had 11081, 993, and 517 words respectively."}, {"id": 78, "string": "Results Splitting the data and training two separate models yielded a combined top-1 accuracy of 46.0%, as compared to 47.0% achieved by a single transliteration model trained over the full data; this difference is not statistically significant."}, {"id": 79, "string": "Somewhat counterintuitively, using language identification as a preprocessing step for machine transliteration yields no improvement in performance for our particular data and transliteration system."}, {"id": 80, "string": "While it could be argued that our language identification accuracy of 84% is too low to be useful here, we believe that the principal reason for this performance decrease is the reduction in the amount of data available for the training of the separate models."}, {"id": 81, "string": "We performed an experiment to confirm this hypothesis: we randomly split the full data into two sets, matching the sizes of the Indian and non-Indian sets."}, {"id": 82, "string": "We then trained two separate models and combined the results; this yielded a top-1 accuracy of 41.5%."}, {"id": 83, "string": "The difference between this and the 46.0% result above is statistically significant with p < 0.01."}, {"id": 84, "string": "From this we conclude that the reduction in data size was a significant factor in the previously described null result, and that language identification does provide useful information to the transliteration system."}, {"id": 85, "string": "In addition, we believe that the transliteration system may implicitly leverage the language origin information."}, {"id": 86, "string": "Whether a closer coupling of the two modules could produce an increase in accuracy remains an open question."}, {"id": 87, "string": "Conclusion We have proposed a novel approach to the task of language identification of names."}, {"id": 88, "string": "We have shown that applying SVMs with n-gram counts as features outperforms the predominant approach based on language models."}, {"id": 89, "string": "We also tested language identification in one of its potential applications, machine transliteration, and found that a simple method of splitting the data by language yields no significant change in accuracy, although there is an improvement in comparison to a random split."}, {"id": 90, "string": "In the future, we plan to investigate other methods of incorporating language identification in machine transliteration."}, {"id": 91, "string": "Options to explore include the use of language identification probabilities as features in the transliteration system (Li et al., 2007) , as well as splitting the data into sets that are not necessarily disjoint, allowing separate transliteration models to learn from potentially useful common information."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 8}, {"section": "Previous work", "n": "2", "start": 9, "end": 25}, {"section": "Language identification with SVMs", "n": "3", "start": 26, "end": 41}, {"section": "Intrinsic evaluation", "n": "4", "start": 42, "end": 44}, {"section": "Transfermarkt corpus", "n": "4.1", "start": 45, "end": 51}, {"section": "CEJ corpus", "n": "4.2", "start": 52, "end": 55}, {"section": "Application to machine transliteration", "n": "5", "start": 56, "end": 58}, {"section": "Data", "n": "5.1", "start": 59, "end": 69}, {"section": "Experimental setup", "n": "5.2", "start": 70, "end": 77}, {"section": "Results", "n": "5.3", "start": 78, "end": 86}, {"section": "Conclusion", "n": "6", "start": 87, "end": 91}], "figures": [{"filename": "../figure/image/1051-Table2-1.png", "caption": "Table 2: Language identification accuracy on the CEJ corpus. Language models have n = 4.", "page": 2, "bbox": {"x1": 327.84, "x2": 525.12, "y1": 60.0, "y2": 103.2}}, {"filename": "../figure/image/1051-Table1-1.png", "caption": "Table 1: Language identification accuracy on the Transfermarkt corpus. Language models have n = 5.", "page": 2, "bbox": {"x1": 79.67999999999999, "x2": 291.36, "y1": 60.0, "y2": 130.07999999999998}}, {"filename": "../figure/image/1051-Figure1-1.png", "caption": "Figure 1: Cross-validation accuracy of the linear kernel on the Transfermarkt full names corpus.", "page": 1, "bbox": {"x1": 317.76, "x2": 536.64, "y1": 63.36, "y2": 140.64}}]}