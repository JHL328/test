{"title": "Sampling-based Alignment and Hierarchical Sub-sentential Alignment in Chinese-Japanese Translation of Patents", "abstract": "This paper describes Chinese-Japanese translation systems based on different alignment methods using the JPO corpus and our submission (ID: WASUIPS) to the subtask of the 2015 Workshop on Asian Translation. One of the alignment methods used is bilingual hierarchical sub-sentential alignment combined with sampling-based multilingual alignment. We also accelerated this method and in this paper, we evaluate the translation results and time spent on several machine translation tasks. The training time is much faster than the standard baseline pipeline (GIZA++/Moses) and MGIZA/Moses. 1", "text": [{"id": 0, "string": "Introduction Phrase-based Statistical Machine Translation (PB-SMT) as a data-oriented approach to machine translation has been widely used for over 10 years."}, {"id": 1, "string": "The Moses (Koehn et al., 2007) open source statistical machine translation toolkit was developed by the Statistical Machine Translation Group at the University of Edinburgh."}, {"id": 2, "string": "During the three processes (training, tuning and decoding) for building a phrase-based translation system using Moses, training is the most important step as it creates the core knowledge used in machine translation."}, {"id": 3, "string": "Word or phrase alignment in the training step allows to obtain translation relationships among the words or phrases in a sentence-aligned bi-corpus."}, {"id": 4, "string": "Word or phrase alignment affects the quality of translation."}, {"id": 5, "string": "It is also one of the most time-consuming processing step."}, {"id": 6, "string": "The probabilistic approach attempts at determining the best set of alignment links between source and target words or phrases in parallel sentences."}, {"id": 7, "string": "IBM models (Brown et al., 1993) and HMM alignment models (Vogel et al., 1996) , which are typical implementation of the EM algorithm (Dempster et al., 1977) , are the most widely used representatives in this category."}, {"id": 8, "string": "GIZA++ (Och and Ney, 2003) implemented IBM Models, it aligns words based on statistical models."}, {"id": 9, "string": "It is a global optimization process simultaneously considers all possible associations in the entire corpus and estimates the parameters of the parallel corpus."}, {"id": 10, "string": "Several improvements were made: MGIZA (Gao and Vogel, 2008) is a parallel implementation of IBM models."}, {"id": 11, "string": "However, the parallelization may lead to slightly different final alignment results, thus preventing reproduction of results to a certain extent."}, {"id": 12, "string": "The associative approaches, introduced in (Gale and Church, 1991), do not rely on an alignment model, but on independence statistical measures."}, {"id": 13, "string": "The Dice coefficient, mutual information (Gale and Church, 1991) , and likelihood ratio (Dunning, 1993) are representative cases of this approach."}, {"id": 14, "string": "The associative approaches use a local maximization process in which each sentence is processed independently."}, {"id": 15, "string": "Sampling-based multilingual alignment (Anymalign) (Lardilleux et al., 2013) and hierarchical sub-sentential alignment (Cutnalign) (Lardilleux et al., 2012) are two associative approaches."}, {"id": 16, "string": "Anymalign 1 is an open source multilingual associative aligner (Lardilleux and Lepage, 2009; Lardilleux et al., 2013) ."}, {"id": 17, "string": "This method samples large numbers of sub-corpora randomly to obtain source and target word or phrase occurrence distributions."}, {"id": 18, "string": "The more often two words or phrases have the same occurrence distribution over particular sub-corpora, the higher the association between them."}, {"id": 19, "string": "We can run Anymalign by setting with -t (running time) option and stop it at any time, and the option -i allows to to extract longer phrases by enforcing n-grams to be considered as tokens."}, {"id": 20, "string": "For pre-segmented texts, option -i allows to group words into phrases more easily."}, {"id": 21, "string": "Cutnalign is a bilingual hierarchical subsentential alignment method (Lardilleux et al., 2012) ."}, {"id": 22, "string": "It is based on a recursive binary segmentation process of the alignment matrix between a source sentence and its corresponding target sentence."}, {"id": 23, "string": "We make use of this method in combination with Anymalign."}, {"id": 24, "string": "In the experiments, reported in this paper, we extend the work to decrease time costs in the training step."}, {"id": 25, "string": "We obtained comparable results in only one fifth of the training time required by the GIZA++/Moses baseline pipeline."}, {"id": 26, "string": "Chinese and Japanese data used The data used in our systems are the Chinese-Japanese JPO Patent Corpus (JPC) 2 provided by WAT 2015 for the patents subtask (Nakazawa et al., 2015) ."}, {"id": 27, "string": "It contains 1 million Chinese-Japanese parallel sentences in four domains in the training data."}, {"id": 28, "string": "These are Chemistry, Electricity, Mechanical engineering, and Physics."}, {"id": 29, "string": "We used sentences of 40 words or less than 40 words as our training data for the translation models, but use all of the Japanese sentences in the parallel corpus for training the language models."}, {"id": 30, "string": "We used all of the development data for tuning."}, {"id": 31, "string": "For Chinese and Japanese segmentation we used the Stanford Segmenter (version: 2014-01-04 with Chinese Penn Treebank (CTB) model) 3 and Juman (version 7.0) 4 ."}, {"id": 32, "string": "Table 1 shows some statistics on the data we used in our systems (after tokenization, lowercase and clean)."}, {"id": 33, "string": "Bilingual hierarchical sub-sentential alignment method Cutnalign as a bilingual hierarchical subsentential alignment method based on a recursive binary segmentation process of the alignment matrix between a source sentence and its translation."}, {"id": 34, "string": "It is a three-step approach: \u2022 measure the strength of the translation link between any source and target pair of words; \u2022 compute the optimal joint clustering of a bipartite graph to search the best alignment; \u2022 segment and align a pair of sentences."}, {"id": 35, "string": "When building alignment matrices, the strength between two words is evaluated using the following formula (Lardilleux et al., 2012) ."}, {"id": 36, "string": "w(s, t) = p(s|t) \u00d7 p(t|s) (1) (p(s|t) and p(t|s)) are translation probabilities estimated by Anymalign."}, {"id": 37, "string": "An example of alignment matrix is shown in Table 2 ."}, {"id": 38, "string": "The optimal joint clustering of a bipartite graph is computed recursively using the following formula for searching the best alignment between words in the source and target languages (Zha et al., 2001; Lardilleux et al., 2012) ."}, {"id": 39, "string": "cut(X, Y ) = W (X, Y ) + W (X, Y ) (2) X, X, Y , Y denote the segmentation of the sentences."}, {"id": 40, "string": "Here the block we start with is the entire matrix."}, {"id": 41, "string": "Splitting horizontally and vertically into two parts gives four sub-blocks."}, {"id": 42, "string": "W (X, Y ) = s\u2208X,t\u2208Y w(s, t) (3) W (X, Y ) is the sum of all translation strengths between all source and target words inside a subblock (X, Y )."}, {"id": 43, "string": "The point where to is found on the x and y which minimize N cut (Lardilleux et al., 2012) : shows several segmentations out of all the possible segmentation in two blocks by computing the sub-sentential alignment between a Chinese and a Japanese sentences."}, {"id": 44, "string": "For each word pair (x, y), we compute N cut (x, y) ."}, {"id": 45, "string": "In this case, we start at word pair (\u6839\u636e, \u305d\u308c\u3089), the search space is the rectangle area [(\u6839\u636e, \u305d\u308c\u3089), (\u3002, \u3002)]."}, {"id": 46, "string": "In Table 3 , only 7 out of all the possible segmentations in two blocks are shown."}, {"id": 47, "string": "The number of possible segmentation is: the length of the Japanese sentence minus one, multiplied by the length of the Chinese sentence minus one, multiplied by two, as there are two possible direction for segmenting."}, {"id": 48, "string": "After computing all N cut(x, y), we compare and find the minimal N cut(x, y)."}, {"id": 49, "string": "Table 4 shows the flow of recursive segmentation and alignment."}, {"id": 50, "string": "N cut(X, Y ) = cut(X, Y ) cut(X, Y ) + 2 \u00d7 W (X, Y ) + cut(X, Y ) cut(X, Y ) + 2 \u00d7 W (X, Y ) (4) In the our experiments, we introduced two types of improvements (Yang and Lepage, 2015) compared to the original implementation."}, {"id": 51, "string": "The first one, introduces multi-processing in both the sampling-based alignment method and hierarchical sub-sentential alignment method so as to trivially accelerate the overall alignment process."}, {"id": 52, "string": "We also re-implement the core of Cutnalign in C. The second one, approximations in the computation of N cut accelerate some decisions."}, {"id": 53, "string": "Also a method to reduce the search space in hierarchical subsentential alignment has been introduced, so that important speed-ups are obtained."}, {"id": 54, "string": "We refer the reader to (Yang and Lepage, 2015) for a detailed description of these improvements."}, {"id": 55, "string": "4 Experiments based on different alignment methods Experiment settings Here, we basically perform experiments with GIZA++ or MGIZA."}, {"id": 56, "string": "The phrase tables are extracted from the alignments obtained using the grow-diag-final-and heuristic (Ayan and Dorr, 2006) integrated in the Moses toolkit."}, {"id": 57, "string": "Our sampling-based alignment method and hierarchical sub-sentential alignment method are also evaluated within a PB-SMT system built by using the Moses toolkit, the Ken Language Modeling toolkit (Heafield, 2011) and a lexicalized reordering model (Koehn et al., 2005) ."}, {"id": 58, "string": "We built systems from Chinese to Japanese."}, {"id": 59, "string": "Each experiment was run using the same data sets (see Section 2)."}, {"id": 60, "string": "Translations were evaluated using BLEU (Papineni et al., 2002) and RIBES (Isozaki et al., 2010) ."}, {"id": 61, "string": "We used Anymalign (i=2, two words can be considered as one token) and Cutnalign to build phrase tables."}, {"id": 62, "string": "As a timeout (-t) should be given, we set two different timeouts (5400 sec."}, {"id": 63, "string": "and 1200 sec.)."}, {"id": 64, "string": "We also use different Cutnalign versions where core components are implemented in C or Python."}, {"id": 65, "string": "We passed word-to-word associations output by Anymalign (i=2) to Cutnalign which produces sub-sentential alignments, which are in turn passed to the grow-dial-final-and heuristic of the Moses toolkit to build phrase tables."}, {"id": 66, "string": "Results Evaluation results using different alignment methods based on the same data sets are given in Tables 5 and 7."}, {"id": 67, "string": "The system built based on GIZA++/Moses pipeline as a baseline system is given in Table 5 ."}, {"id": 68, "string": "We also show the evaluation results obtained by the WAT 2015 automatic evaluation 5 in Table 6 and 8."}, {"id": 69, "string": "The results in Table 7 and 8 show that there are no significant differences among the evaluation results based on different versions of Moses, different Anymalign timeouts or different versions of Cutnalign."}, {"id": 70, "string": "However, the training times changed considerably depending on the timeouts for Anymalign."}, {"id": 71, "string": "The fastest training time is obtained with Moses version 2.1.1, a timeout of 1200 sec."}, {"id": 72, "string": "for Anymalign and the C version of Cutnalign: 57 minutes, i.e., about one fifth of the time used by GIZA++ or MGIZA (Table 5 and 6) ."}, {"id": 73, "string": "We also checked the confidence intervals between using GIZA++ and our method (the fastest one): 37.24 \u00b1 0.86 and 35.72 \u00b1 0.90."}, {"id": 74, "string": "The probability of actually getting them (p-value) is 0."}, {"id": 75, "string": "Conclusion In this paper, we have shown that it is possible to accelerate development of SMT systems following the work by Lardilleux et al."}, {"id": 76, "string": "(2012) and Yang and Lepage (2015) on bilingual hierarchical sub-sentential alignment."}, {"id": 77, "string": "We performed several machine translation experiments using different alignment methods and obtained a significant reduction of processing training time."}, {"id": 78, "string": "Setting different timeouts for Anymalign did not change the translation quality."}, {"id": 79, "string": "In other word, we get a relative steady translation quality even when less time is allotted to word-to-word association computation."}, {"id": 80, "string": "Here, the fastest training time was only 57 minutes, one fifth compared with the use of GIZA++ or MGIZA."}, {"id": 81, "string": "References"}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 25}, {"section": "Chinese and Japanese data used", "n": "2", "start": 26, "end": 32}, {"section": "Bilingual hierarchical sub-sentential alignment method", "n": "3", "start": 33, "end": 54}, {"section": "Experiment settings", "n": "4.1", "start": 55, "end": 65}, {"section": "Results", "n": "4.2", "start": 66, "end": 74}, {"section": "Conclusion", "n": "5", "start": 75, "end": 81}], "figures": [{"filename": "../figure/image/1086-Table3-1.png", "caption": "Table 3: 7 out of all the possible segmentation in two blocks are shown.", "page": 5, "bbox": {"x1": 81.6, "x2": 530.4, "y1": 146.88, "y2": 657.12}}, {"filename": "../figure/image/1086-Table1-1.png", "caption": "Table 1: Statistics of our baseline training data of JPC.", "page": 1, "bbox": {"x1": 308.64, "x2": 525.12, "y1": 62.879999999999995, "y2": 180.95999999999998}}, {"filename": "../figure/image/1086-Table4-1.png", "caption": "Table 4: Steps in recursive segmentation and alignment result using sampling-based alignment and hierarchical sub-sentential alignment method.", "page": 6, "bbox": {"x1": 81.6, "x2": 530.4, "y1": 76.8, "y2": 587.04}}, {"filename": "../figure/image/1086-Table5-1.png", "caption": "Table 5: Evaluation results by using different aligner (GIZA++ and MGIZA) based on the data of JPC given in Table 1.", "page": 6, "bbox": {"x1": 149.76, "x2": 448.32, "y1": 657.6, "y2": 708.9599999999999}}, {"filename": "../figure/image/1086-Table6-1.png", "caption": "Table 6: Evaluation results (Web server automatic evaluation) by using different aligner (GIZA++ and MGIZA ) based on the data of JPC given in Table 1.", "page": 7, "bbox": {"x1": 72.0, "x2": 546.24, "y1": 110.88, "y2": 176.16}}, {"filename": "../figure/image/1086-Table7-1.png", "caption": "Table 7: Evaluation results by using the alignment method of combining sampling-based alignment and bilingual hierarchical sub-sentential alignment methods based on the data of JPC given in Table 1. In decreasing order of BLEU cores. Here, 2 (c) shows option -i of Anymalign is 2, and Cutnlaign version where core component is implemented in C.", "page": 7, "bbox": {"x1": 133.92, "x2": 464.15999999999997, "y1": 315.84, "y2": 413.28}}, {"filename": "../figure/image/1086-Table8-1.png", "caption": "Table 8: Evaluation results (Web server automatic evaluation) by using the alignment method of combining sampling-based alignment and bilingual hierarchical sub-sentential alignment methods based on the data of JPC given in Table 1. In decreasing order of BLEU cores.", "page": 7, "bbox": {"x1": 73.92, "x2": 549.12, "y1": 580.8, "y2": 664.3199999999999}}, {"filename": "../figure/image/1086-Table2-1.png", "caption": "Table 2: An example of an alignment matrix which contains the translation strength for each word pair (Chinese\u2013Japanese). The scores are obtained using Anymalign\u2019s output. Computing by w.", "page": 4, "bbox": {"x1": 85.92, "x2": 511.2, "y1": 313.44, "y2": 472.32}}]}