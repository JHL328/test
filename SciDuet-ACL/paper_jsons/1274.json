{"title": "Extracting Commonsense Properties from Embeddings with Limited Human Guidance", "abstract": "Intelligent systems require common sense, but automatically extracting this knowledge from text can be difficult. We propose and assess methods for extracting one type of commonsense knowledge, object-property comparisons, from pretrained embeddings. In experiments, we show that our approach exceeds the accuracy of previous work but requires substantially less hand-annotated knowledge. Further, we show that an active learning approach that synthesizes common-sense queries can boost accuracy.", "text": [{"id": 0, "string": "Introduction Automatically extracting common sense from text is a long-standing challenge in natural language processing (Schubert, 2002; Van Durme and Schubert, 2008; Vanderwende, 2005) ."}, {"id": 1, "string": "As argued by Forbes and Yejin (2017) , typical language use may reflect common sense, but the commonsense knowledge itself is not often explicitly stated, due to reporting bias (Gordon and Van Durme, 2013) ."}, {"id": 2, "string": "Thus, additional human knowledge or annotated training data are often used to help systems learn common sense."}, {"id": 3, "string": "In this paper, we study methods for reducing the amount of human input needed to learn common sense."}, {"id": 4, "string": "Specifically, we focus on learning relative comparisons of (one-dimensional) object properties, such as the fact that a cantaloupe is more round than a hammer."}, {"id": 5, "string": "Methods for learning this kind of common sense have been developed previously (e.g."}, {"id": 6, "string": "Forbes and Choi, 2017) , but the best-performing methods in that previous work requires dozens of manually-annotated frames for each comparison property, to connect the property to how it is indirectly reflected in text-e.g., if text asserts that \"x carries y,\" this implies that x is probably larger than y."}, {"id": 7, "string": "Our architecture for relative comparisons follows the zero-shot learning paradigm (Palatucci et al., 2009) ."}, {"id": 8, "string": "It takes the form of a neural network that compares a projection of embeddings for each of two objects (e.g."}, {"id": 9, "string": "\"elephant\" and \"tiger\") to the embeddings for the two poles of the target dimension of comparison (e.g., \"big\" and \"small\" for the size property)."}, {"id": 10, "string": "The projected object embeddings are trained to be closer to the appropriate pole, using a small training set of hand-labeled comparisons."}, {"id": 11, "string": "Our experiments reveal that our architecture outperforms previous work, despite using less annotated data."}, {"id": 12, "string": "Further, because our architecture takes the property (pole) labels as arguments, it can extend to the zero-shot setting in which we evaluate on properties not seen in training."}, {"id": 13, "string": "We find that in zero-shot, our approach outperforms baselines and comes close to supervised results, but providing labels for both poles of the relation rather than just one is important."}, {"id": 14, "string": "Finally, because the number of properties we wish to learn is large, we experiment with active learning (AL) over a larger property space."}, {"id": 15, "string": "We show that synthesizing AL queries can be effective using an approach that explicitly models which comparison questions are nonsensical (e.g., is Batman taller than Democracy?)."}, {"id": 16, "string": "We release our code base and a new commonsense data set to the research community."}, {"id": 17, "string": "1 Problem Definition and Methods We define the task of comparing object properties in two different ways: a three-way classification task, and a four-way classification task."}, {"id": 18, "string": "In the three-way classification task, we want to estimate the following conditional probability: P (L|O 1 , O 2 , Property), L \u2208 { < , > , \u2248 }."}, {"id": 19, "string": "1 https://github.com/yangyiben/PCE For example, P rob(An elephant is larger than a dog) can be expressed as P (L = > |O 1 = \"elephant\", O 2 = \"dog\", Property = \"size\")."}, {"id": 20, "string": "The three-way classification task has been explored in previous work (Forbes and Choi, 2017) and is only performed on triples where both objects have the property, so that the comparison is meaningful."}, {"id": 21, "string": "In applications, however, we may not know in advance which comparisons are meaningful."}, {"id": 22, "string": "Thus, we also define a four-way classification task to include \"not applicable\" as the fourth label, so that inference can be performed on any objectproperty triples."}, {"id": 23, "string": "In the four-way task, the system is tasked with identifying the nonsensical comparisons."}, {"id": 24, "string": "Formally, we want to estimate the following conditional probability: P (L|O 1 , O 2 , Property), L\u2208{ < , > , \u2248 , N/A }."}, {"id": 25, "string": "Three-way Model For each comparison property, we pick an adjective and its antonym to represent the { < , > } labels."}, {"id": 26, "string": "For example, for the property size, we pick \"big\" and \"small\"."}, {"id": 27, "string": "The adjective \"similar\" serves as the label for \u2248 for all properties."}, {"id": 28, "string": "Under this framework, a relative comparison question, for instance, \"Is a dog bigger than an elephant?"}, {"id": 29, "string": "\", can be formulated as a quintuple query to the model, namely {dog, elephant, small, similar, big}."}, {"id": 30, "string": "Denoting the word embeddings for tokens in a quintuple query as X, Y , R < , R \u2248 , R > , our three-way model is defined as follows: P (L = s|Q) = sof tmax(R s \u00b7 \u03c3((X \u2295 Y )W )), for s \u2208 {<, >, \u2248}, where Q is an quintuple query, \u03c3(\u00b7) is an activation function and W is a learnable weight matrix."}, {"id": 31, "string": "The symbol \u2295 represents concatenation."}, {"id": 32, "string": "We refer to this method as PCE (Property Comparison from Embeddings) for the 3-way task."}, {"id": 33, "string": "We also experiment with generating label representations from just a single ad- jective (property) embedding R < , namely R \u2248 = \u03c3(R < W 2 ), R > = \u03c3(R < W 3 ) ."}, {"id": 34, "string": "We refer to this simpler method as PCE(one-pole)."}, {"id": 35, "string": "We note that in both the three-and four-way settings, the question \"A>B?\""}, {"id": 36, "string": "is equivalent to \"B<A?\"."}, {"id": 37, "string": "We leverage this fact at test time by feeding our network a reversed object pair, and taking the average of the aligned network outputs before the softmax layer to reduce prediction variance."}, {"id": 38, "string": "We refer to our model without this technique as PCE(no reverse)."}, {"id": 39, "string": "The key distinction of our method is that it learns a projection from the object word embedding space to the label embedding space."}, {"id": 40, "string": "This allows the model to leverage the property label embeddings to perform zero-shot prediction on properties not observed in training."}, {"id": 41, "string": "For example, from a training example \"dogs are smaller than elephants\", the model will learn a projection that puts \"dogs\" relatively closer to \"small,\" and far from \"big\" and \"similar.\""}, {"id": 42, "string": "Doing so may also result in projecting \"dog\" to be closer to \"light\" than to \"heavy,\" such that the model is able to predict \"dogs are lighter than elephants\" despite never being trained on any weight comparison examples."}, {"id": 43, "string": "Four-way Model Our four-way model is the same as our three-way model, with an additional module to learn whether the comparison is applicable."}, {"id": 44, "string": "Keeping the other output nodes unchanged, we add an additional component into the softmax layer to output the probability of \"N/A\": h x = \u03c3(XW a ), h y = \u03c3(Y W a ), A i = h i \u00b7 R > + h i \u00b7 R < , P (L = N/A |Q) \u221d exp(A x + A y )."}, {"id": 45, "string": "Synthesis for Active Learning We propose a method to synthesize informative queries to pose to annotators, a form of active learning (Settles, 2009 )."}, {"id": 46, "string": "We use the common heuristic that an informative training example will have a high uncertainty in the model's predictive distribution."}, {"id": 47, "string": "We adopt the confidence measure (Culotta and McCallum, 2005) to access the uncertainty of a given example: U ncertainty(x) = 1 \u2212 max y P (y|x, D train )."}, {"id": 48, "string": "Good candidates for acquisition should have high uncertainty measure, but we also want to avoid querying outliers."}, {"id": 49, "string": "As the vocabulary is finite, it is possible to evaluate the uncertainty measures for all possible inputs to synthesize the most uncertain query."}, {"id": 50, "string": "However, such a greedy policy is expensive and prone to selecting outliers."}, {"id": 51, "string": "Hence, we adopt a sampling based synthesis strategy: at each round, we generate one random object pair per property, and query the one that achieves the highest uncertainty measure."}, {"id": 52, "string": "A classical difficulty faced by synthesis approaches to active learning is that they may pro-duce unnatural queries that are difficult for a human to label (Baum and Lang, 1992)."}, {"id": 53, "string": "However, our task formulation includes \"similar\" and \"N/A\" classes that encompass many of the more difficult or confusing comparisons, which we believe aids the effectiveness of the synthesis approach."}, {"id": 54, "string": "Experiments We now present our experimental results on both the three-way and four-way tasks."}, {"id": 55, "string": "Data Sets We test our three-way model on the VERB PHYSICS data set from (Forbes and Choi, 2017) ."}, {"id": 56, "string": "As there are only 5 properties in VERB PHYSICS, we also develop a new data set we call PROP-ERTY COMMON SENSE."}, {"id": 57, "string": "We select 32 commonsense properties to form our property set (e.g., value, roundness, deliciousness, intelligence, etc.)."}, {"id": 58, "string": "We extract object nouns from the McRae Feature Norms dataset (McRae et al., 2005) and add selected named entities to form a object vocabulary of 689 distinct objects."}, {"id": 59, "string": "We randomly generate 3148 object-property triples, label them and reserve 45% of the data for the test set."}, {"id": 60, "string": "We further add 5 manually-selected applicable comparison examples per property to our test set, in order to make sure each property has some applicable testing examples."}, {"id": 61, "string": "To verify the labeling, we have a second annotator redundantly label 200 examples and find a Cohen's Kappa of 0.64, which indicates good annotator agreement (we analyze the source of the disagreements in Section 4.1)."}, {"id": 62, "string": "The training set is used for the passive learning and pool-based active learning, and a human oracle provides labels in the synthesis active learning setting."}, {"id": 63, "string": "Experimental Setup We experiment with three types of embeddings: GloVe, normalized 300-dimensional embeddings trained on a corpus of 6B tokens (Pennington et al., 2014) (the F&C method (Forbes and Choi, 2017) uses the 100-dimensional version, as it achieves the highest validation accuracy for their methods); Word2vec, normalized 300dimensional embeddings trained on 100B tokens (Mikolov et al., 2013) ; and LSTM, the normalized 1024-dimensional weight matrix from the softmax layer of the Google 1B LSTM language model (Jozefowicz et al., 2016) ."}, {"id": 64, "string": "For training PCE, we use an identity activation function and apply 50% dropout."}, {"id": 65, "string": "We use the Adam optimizer with default settings to train the models for 800 epochs, minimizing cross entropy loss."}, {"id": 66, "string": "For zero-shot learning, we adopt a hold-oneproperty-out scheme to test our models' zero-shot performance."}, {"id": 67, "string": "Finally, for active learning, we use Word2vec embeddings."}, {"id": 68, "string": "All the models are trained on 200 random training examples to warm up."}, {"id": 69, "string": "We train for 20 epochs after each label acquisition."}, {"id": 70, "string": "To smooth noise, we report the average of 20 different runs of random (passive learning) and least confident (LC) pool-based active learning (Culotta and McCallum, 2005) baselines."}, {"id": 71, "string": "We report the average of only 6 runs for an expected model change (EMC) pool-based active learning (Cai et al., 2013) baseline due to its high computational cost, and of only 2 runs for our synthesis active learning approach due to its high labeling cost."}, {"id": 72, "string": "The pool size is 1540 examples."}, {"id": 73, "string": "Results In Table 1 , we compare the performance of the three-way PCE model against the existing state of the art on the VERB PHYSICS data set."}, {"id": 74, "string": "The use of LSTM embeddings in PCE yields the best accuracy for all properties."}, {"id": 75, "string": "Across all embedding choices, PCE performs as well or better than F&C, despite the fact that PCE does not use the annotated frames that F&C requires (approximately 188 labels per property)."}, {"id": 76, "string": "Thus, our approach matches or exceeds the performance of previous work using significantly less annotated knowledge."}, {"id": 77, "string": "The lower performance of \"no reverse\" shows that the simple method of averaging over the reversed object pair is effective."}, {"id": 78, "string": "Table 2 evaluates our models on properties not seen in training (zero-shot learning)."}, {"id": 79, "string": "We compare against a random baseline, and an Emb-Similarity baseline that classifies based on the cosine similarity of the object embeddings to the pole label embeddings (i.e., without the projection layer in PCE)."}, {"id": 80, "string": "PCE outperforms the baselines."}, {"id": 81, "string": "Although the one-pole method was shown to perform similarly to the two-pole method for properties seen in training (Table 1) , we see that for zero-shot learning, using two poles is important."}, {"id": 82, "string": "In Table 3 , we show that our four-way models with different embeddings beat both the majority and random baselines on the PROPERTY Table 3 : Accuracy on the four-way task on the PROPERTY COMMON SENSE data."}, {"id": 83, "string": "COMMON SENSE data."}, {"id": 84, "string": "Here, the LSTM embeddings perform similarly to the Word2vec embeddings, perhaps because the PROPERTY COM-MON SENSE vocabulary consists of less frequent nouns than in VERB PHYSICS."}, {"id": 85, "string": "Thus, the Word2vec embeddings are able to catch up due to their larger vocabulary and much larger training corpus."}, {"id": 86, "string": "Finally, in Figure 1 , we evaluate in the active learning setting."}, {"id": 87, "string": "The synthesis approach performs best, especially later in training when the training pool for the pool-based methods has only uninformative examples remaining."}, {"id": 88, "string": "Figure 2 helps explain the relative advantage of the synthesis approach: it is able to continue synthesizing informative (uncertain) queries throughout the entire training run."}, {"id": 89, "string": "Discussion Sources of annotator disagreement As noted above, we found a \"good\" level of agreement (Cohen's Kappa of 0.64) for our PROPERTY COMMON SENSE data, which is lower than one might expect for task aimed at common sense."}, {"id": 90, "string": "We analyzed the disagreements and found that they stem from two sources of subjectivity in the task."}, {"id": 91, "string": "The first is that different labelers may have different thresholds for what counts as similar-a spider and an ant might be marked similar in size for one labeler, but not for another labeler."}, {"id": 92, "string": "In our data, 58% of the disagreements are cases in which one annotator marks similar while the other says not similar."}, {"id": 93, "string": "The second is that different labelers have different standards for whether a comparison is N/A."}, {"id": 94, "string": "For example, in our data set, one labeler labels that a toaster is physically stronger than alcohol, and the other labeler says the comparison is N/A."}, {"id": 95, "string": "37% of our disagreements are due to this type of subjectivity."}, {"id": 96, "string": "The above two types of subjectivity account for almost all disagreements (95%), and the remaining 5% are due to annotation errors (one of the annotators makes mistake)."}, {"id": 97, "string": "Model Interpretation Since we adopt an identity activation function and a single layer design, it is possible to simplify the mathematical expression of our model to make it more interpretable."}, {"id": 98, "string": "After accounting for model averaging, we have the following equality: P (L =< |Q) \u221d exp(R < \u00b7 ((X \u2295 Y )W ) + R > \u00b7 ((Y \u2295 X)W )) = exp(R T < (XW 1 + Y W 2 ) + R T > (Y W 1 + XW 2 )) \u221d exp((R < \u2212 R > ) T (XW 1 + XW 2 )), where W = W 1 \u2295 W 2 ."}, {"id": 99, "string": "So we can define a score of \"R < \" for a object with embedding X as the following: score(X, R < ) = (R < \u2212 R > ) T (XW 1 + XW 2 )."}, {"id": 100, "string": "An object with a higher score for R < is more associated with the R < pole than the R > one."}, {"id": 101, "string": "For example, score(\"elephant\",\"small\") represents how small an elephant is-a larger score indicates a smaller object."}, {"id": 102, "string": "Table 4 shows smallness scores for 5 randomly picked objects from the VERB PHYSICS data set."}, {"id": 103, "string": "PCE tends to assign higher scores to the smaller objects in the set."}, {"id": 104, "string": "Sensitivity to pole labels PCE requires labels for the poles of the target object property."}, {"id": 105, "string": "Table 5 : Trained and zero-shot accuracies for different word choices analysis to pole labels, evaluating the test accuracy of PCE as the pole label varies among different combinations of synonyms for the size and speed relations."}, {"id": 106, "string": "We evaluate in both the trained setting (comparable to the results in Table 1 ) and the zero-shot setting (comparable to Table 2 )."}, {"id": 107, "string": "We see that the trained accuracy remains essentially unchanged for different pole labels."}, {"id": 108, "string": "In the zeroshot setting, all combinations achieve accuracy that beats the baselines in Table 2 , but the accuracy value is somewhat sensitive to the choice of pole label."}, {"id": 109, "string": "Exploring how to select pole labels and experimenting with richer pole representations such as textual definitions are items of future work."}, {"id": 110, "string": "Conclusion In this paper, we presented a method for extracting commonsense knowledge from embeddings."}, {"id": 111, "string": "Our experiments demonstrate that the approach is effective at performing relative comparisons of object properties using less hand-annotated knowledge than in previous work."}, {"id": 112, "string": "A synthesis active learner was found to boost accuracy, and further experiments with this approach are an item of future work."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 16}, {"section": "Problem Definition and Methods", "n": "2", "start": 17, "end": 24}, {"section": "Three-way Model", "n": "2.1", "start": 25, "end": 42}, {"section": "Four-way Model", "n": "2.2", "start": 43, "end": 44}, {"section": "Synthesis for Active Learning", "n": "2.3", "start": 45, "end": 53}, {"section": "Experiments", "n": "3", "start": 54, "end": 54}, {"section": "Data Sets", "n": "3.1", "start": 55, "end": 62}, {"section": "Experimental Setup", "n": "3.2", "start": 63, "end": 72}, {"section": "Results", "n": "3.3", "start": 73, "end": 88}, {"section": "Sources of annotator disagreement", "n": "4.1", "start": 89, "end": 96}, {"section": "Model Interpretation", "n": "4.2", "start": 97, "end": 103}, {"section": "Sensitivity to pole labels", "n": "4.3", "start": 104, "end": 108}, {"section": "Conclusion", "n": "5", "start": 109, "end": 112}], "figures": [{"filename": "../figure/image/1274-Table4-1.png", "caption": "Table 4: Scores of smallness for 5 randomly picked objects in VERB PHYSICS data set", "page": 4, "bbox": {"x1": 366.71999999999997, "x2": 465.12, "y1": 62.879999999999995, "y2": 124.32}}, {"filename": "../figure/image/1274-Table5-1.png", "caption": "Table 5: Trained and zero-shot accuracies for different word choices", "page": 4, "bbox": {"x1": 337.91999999999996, "x2": 495.35999999999996, "y1": 168.48, "y2": 261.12}}, {"filename": "../figure/image/1274-Figure2-1.png", "caption": "Figure 2: The uncertainty measure of each queried training example. As training proceeds, the synthesis approach continues to select more uncertain examples.", "page": 4, "bbox": {"x1": 72.0, "x2": 291.36, "y1": 61.44, "y2": 222.23999999999998}}, {"filename": "../figure/image/1274-Table1-1.png", "caption": "Table 1: Accuracy on the VERB PHYSICS data set. PCE outperforms the F&C model from previous work. PCE(one-pole) and PCE(no reverse) use LSTM embeddings.", "page": 3, "bbox": {"x1": 72.0, "x2": 526.0799999999999, "y1": 62.879999999999995, "y2": 154.07999999999998}}, {"filename": "../figure/image/1274-Figure1-1.png", "caption": "Figure 1: Test accuracy as a function of the number of queried training examples. The synthesis approach performs best.", "page": 3, "bbox": {"x1": 308.64, "x2": 526.0799999999999, "y1": 314.88, "y2": 471.35999999999996}}, {"filename": "../figure/image/1274-Table2-1.png", "caption": "Table 2: Accuracy of zero-shot learning on the VERB PHYSICS data set(using LSTM embeddings). PCE outperforms the baselines, and using both poles is important for accuracy.", "page": 3, "bbox": {"x1": 109.92, "x2": 488.15999999999997, "y1": 199.68, "y2": 261.12}}, {"filename": "../figure/image/1274-Table3-1.png", "caption": "Table 3: Accuracy on the four-way task on the PROPERTY COMMON SENSE data.", "page": 3, "bbox": {"x1": 130.56, "x2": 231.35999999999999, "y1": 314.88, "y2": 376.32}}]}