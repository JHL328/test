{"title": "Discourse Marker Augmented Network with Reinforcement Learning for Natural Language Inference", "abstract": "Natural Language Inference (NLI), also known as Recognizing Textual Entailment (RTE), is one of the most important problems in natural language processing. It requires to infer the logical relationship between two given sentences. While current approaches mostly focus on the interaction architectures of the sentences, in this paper, we propose to transfer knowledge from some important discourse markers to augment the quality of the NLI model. We observe that people usually use some discourse markers such as \"so\" or \"but\" to represent the logical relationship between two sentences. These words potentially have deep connections with the meanings of the sentences, thus can be utilized to help improve the representations of them. Moreover, we use reinforcement learning to optimize a new objective function with a reward defined by the property of the NLI datasets to make full use of the labels information. Experiments show that our method achieves the state-of-the-art performance on several large-scale datasets. 1 Here sentences mean either the whole sentences or the main clauses of a compound sentence.", "text": [{"id": 0, "string": "Introduction In this paper, we focus on the task of Natural Language Inference (NLI), which is known as a significant yet challenging task for natural language understanding."}, {"id": 1, "string": "In this task, we are given two sentences which are respectively called premise and hypothesis."}, {"id": 2, "string": "The goal is to determine whether the logical relationship between them is entailment, neutral, or contradiction."}, {"id": 3, "string": "Recently, performance on NLI (Chen et al., 2017b; Gong et al., 2018; Chen et al., 2017c ) * corresponding author Premise: A soccer game with multiple males playing."}, {"id": 4, "string": "Hypothesis: Some men are playing a sport."}, {"id": 5, "string": "Label: Entailment Premise: An older and younger man smiling."}, {"id": 6, "string": "Hypothesis: Two men are smiling and laughing at the cats playing on the floor."}, {"id": 7, "string": "Label: Neutral Premise: A black race car starts up in front of a crowd of people Hypothesis: A man is driving down a lonely road."}, {"id": 8, "string": "Label: Contradiction has been significantly boosted since the release of some high quality large-scale benchmark datasets such as SNLI (Bowman et al., 2015) and MultiNLI (Williams et al., 2017) ."}, {"id": 9, "string": "Table 1 shows some examples in SNLI."}, {"id": 10, "string": "Most state-of-the-art works focus on the interaction architectures between the premise and the hypothesis, while they rarely concerned the discourse relations of the sentences, which is a core issue in natural language understanding."}, {"id": 11, "string": "People usually use some certain set of words to express the discourse relation between two sentences 1 ."}, {"id": 12, "string": "These words, such as \"but\" or \"and\", are denoted as discourse markers."}, {"id": 13, "string": "These discourse markers have deep connections with the intrinsic relations of two sentences and intuitively correspond to the intent of NLI, such as \"but\" to \"contradiction\", \"so\" to \"entailment\", etc."}, {"id": 14, "string": "Very few NLI works utilize this information revealed by discourse markers."}, {"id": 15, "string": "proposed to use discourse markers to help rep-resent the meanings of the sentences."}, {"id": 16, "string": "However, they represent each sentence by a single vector and directly concatenate them to predict the answer, which is too simple and not ideal for the largescale datasets."}, {"id": 17, "string": "In this paper, we propose a Discourse Marker Augmented Network for natural language inference, where we transfer the knowledge from the existing supervised task: Discourse Marker Prediction (DMP) , to an integrated NLI model."}, {"id": 18, "string": "We first propose a sentence encoder model that learns the representations of the sentences from the DMP task and then inject the encoder to the NLI network."}, {"id": 19, "string": "Moreover, because our NLI datasets are manually annotated, each example from the datasets might get several different labels from the annotators although they will finally come to a consensus and also provide a certain label."}, {"id": 20, "string": "In consideration of that different confidence level of the final labels should be discriminated, we employ reinforcement learning with a reward defined by the uniformity extent of the original labels to train the model."}, {"id": 21, "string": "The contributions of this paper can be summarized as follows."}, {"id": 22, "string": "\u2022 Unlike previous studies, we solve the task of the natural language inference via transferring knowledge from another supervised task."}, {"id": 23, "string": "We propose the Discourse Marker Augmented Network to combine the learned encoder of the sentences with the integrated NLI model."}, {"id": 24, "string": "\u2022 According to the property of the datasets, we incorporate reinforcement learning to optimize a new objective function to make full use of the labels' information."}, {"id": 25, "string": "\u2022 We conduct extensive experiments on two large-scale datasets to show that our method achieves better performance than other stateof-the-art solutions to the problem."}, {"id": 26, "string": "Task Description Natural Language Inference (NLI) In the natural language inference tasks, we are given a pair of sentences (P, H), which respectively means the premise and hypothesis."}, {"id": 27, "string": "Our goal is to judge whether their logical relationship between their meanings by picking a label from a small set: entailment (The hypothesis is definitely a true description of the premise), neutral (The hypothesis might be a true description of the premise), and contradiction (The hypothesis is definitely a false description of the premise)."}, {"id": 28, "string": "Discourse Marker Prediction (DMP) For DMP, we are given a pair of sentences (S 1 , S 2 ), which is originally the first half and second half of a complete sentence."}, {"id": 29, "string": "The model must predict which discourse marker was used by the author to link the two ideas from a set of candidates."}, {"id": 30, "string": "Sentence Encoder Model Following , we use BookCorpus  as our training data for discourse marker prediction, which is a dataset of text from unpublished novels, and it is large enough to avoid bias towards any particular domain or application."}, {"id": 31, "string": "After preprocessing, we obtain a dataset with the form (S 1 , S 2 , m), which means the first half sentence, the last half sentence, and the discourse marker that connected them in the original text."}, {"id": 32, "string": "Our goal is to predict the m given S 1 and S 2 ."}, {"id": 33, "string": "We first use Glove (Pennington et al., 2014) to transform {S t } 2 t=1 into vectors word by word and subsequently input them to a bi-directional LSTM: \u2212 \u2192 h i t = \u2212 \u2212\u2212\u2212 \u2192 LSTM(Glove(S i t )), i = 1, ..., |S t | \u2190 \u2212 h i t = \u2190 \u2212\u2212\u2212 \u2212 LSTM(Glove(S i t )), i = |S t |, ..., 1 (1) where Glove(w) is the embedding vector of the word w from the Glove lookup table, |S t | is the length of the sentence S t ."}, {"id": 34, "string": "We apply max pooling on the concatenation of the hidden states from both directions, which provides regularization and shorter back-propagation paths (Collobert and Weston, 2008) , to extract the features of the whole sequences of vectors: \u2212 \u2192 r t = Max dim ([ \u2212 \u2192 h 1 t ; \u2212 \u2192 h 2 t ; ...; \u2212 \u2212 \u2192 h |St| t ]) \u2190 \u2212 r t = Max dim ([ \u2190 \u2212 h 1 t ; \u2190 \u2212 h 2 t ; ...; \u2190 \u2212 \u2212 h |St| t ]) (2) where Max dim means that the max pooling is performed across each dimension of the concatenated vectors, [; ] denotes concatenation."}, {"id": 35, "string": "Moreover, we combine the last hidden state from both directions and the results of max pooling to represent our sentences: where r t is the representation vector of the sentence S t ."}, {"id": 36, "string": "To predict the discource marker between S 1 and S 2 , we combine the representations of them with some linear operation: r t = [ \u2212 \u2192 r t ; \u2190 \u2212 r t ; \u2212 \u2212 \u2192 h |St| t ; \u2190 \u2212 h 1 t ] (3) r = [r 1 ; r 2 ; r 1 + r 2 ; r 1 r 2 ] (4) where is elementwise product."}, {"id": 37, "string": "Finally we project r to a vector of label size (the total number of discourse markers in the dataset) and use softmax function to normalize the probability distribution."}, {"id": 38, "string": "Discourse Marker Augmented Network As presented in Figure 1 , we show how our Discourse Marker Augmented Network incorporates the learned encoder into the NLI model."}, {"id": 39, "string": "Encoding Layer We denote the premise as P and the hypothesis as H. To encode the words, we use the concatenation of following parts: Word Embedding: Similar to the previous section, we map each word to a vector space by using pre-trained word vectors GloVe."}, {"id": 40, "string": "Character Embedding: We apply Convolutional Neural Networks (CNN) over the characters of each word."}, {"id": 41, "string": "This approach is proved to be helpful in handling out-of-vocab (OOV) words (Yang et al., 2017) ."}, {"id": 42, "string": "POS and NER tags: We use the part-of-speech (POS) tags and named-entity recognition (NER) tags to get syntactic information and entity label of the words."}, {"id": 43, "string": "Following (Pan et al., 2017b) , we apply the skip-gram model (Mikolov et al., 2013) to train two new lookup tables of POS tags and NER tags respectively."}, {"id": 44, "string": "Each word can get its own POS embedding and NER embedding by these lookup tables."}, {"id": 45, "string": "This approach represents much better geometrical features than common used one-hot vectors."}, {"id": 46, "string": "Exact Match: Inspired by the machine comprehension tasks (Chen et al., 2017a) , we want to know whether every word in P is in H (and H in P )."}, {"id": 47, "string": "We use three binary features to indicate whether the word can be exactly matched to any question word, which respectively means original form, lowercase and lemma form."}, {"id": 48, "string": "For encoding, we pass all sequences of vectors into a bi-directional LSTM and obtain: p i = BiLSTM(f rep (P i ), p i\u22121 ), i = 1, ..., n u j = BiLSTM(f rep (H j ), u j\u22121 ), j = 1, ..., m (5) where f rep (x) = [Glove(x); Char(x); POS(x); NER(x); EM(x)] is the concatenation of the embedding vectors and the feature vectors of the word x, n = |P |, m = |H|."}, {"id": 49, "string": "Interaction Layer In this section, we feed the results of the encoding layer and the learned sentence encoder into the attention mechanism, which is responsible for linking and fusing information from the premise and the hypothesis words."}, {"id": 50, "string": "We first obtain a similarity matrix A \u2208 R n\u00d7m between the premise and hypothesis by A ij = v 1 [p i ; u j ; p i \u2022 u j ; r p ; r h ] (6) where v 1 is the trainable parameter, r p and r h are sentences representations from the equation (3) learned in the Section 3, which denote the premise and hypothesis respectively."}, {"id": 51, "string": "In addition to previous popular similarity matrix, we incorporate the relevance of each word of P (H) to the whole sentence of H(P )."}, {"id": 52, "string": "Now we use A to obtain the attentions and the attended vectors in both directions."}, {"id": 53, "string": "To signify the attention of the i-th word of P to every word of H, we use the weighted sum of u j by A i: :\u0169 i = j A ij \u00b7 u j (7) where\u0169 i is the attention vector of the i-th word of P for the entire H. In the same way, thep j is obtained via:p j = i A ij \u00b7 p i (8) To model the local inference between aligned word pairs, we integrate the attention vectors with the representation vectors via: p i = f ([p i ;\u0169 i ; p i \u2212\u0169 i ; p i \u0169 i ]) u j = f ([u j ;p j ; u j \u2212p j ; u j p j ]) (9) where f is a 1-layer feed-forward neural network with the ReLU activation function,p i and\u00fb j are local inference vectors."}, {"id": 54, "string": "Inspired by (Seo et al., 2016) and (Chen et al., 2017b) , we use a modeling layer to capture the interaction between the premise and the hypothesis."}, {"id": 55, "string": "Specifically, we use bi-directional LSTMs as building blocks: p M i = BiLSTM(p i , p M i\u22121 ) u M j = BiLSTM(\u00fb j , u M j\u22121 ) (10) Here, p M i and u M j are the modeling vectors which contain the crucial information and relationship among the sentences."}, {"id": 56, "string": "We compute the representation of the whole sentence by the weighted average of each word:  where v 2 , v 3 are trainable vectors."}, {"id": 57, "string": "We don't share these parameter vectors in this seemingly parallel strucuture because there is some subtle difference between the premise and hypothesis, which will be discussed later in Section 5. p M = i exp(v 2 p M i ) i exp(v 2 p M i ) p M i u M = j exp(v 3 u M j ) j exp(v 3 u M j ) u M j (11) Output Layer The NLI task requires the model to predict the logical relation from the given set: entailment, neutral or contradiction."}, {"id": 58, "string": "We obtain the probability distribution by a linear function with softmax function: d = softmax(W[p M ; u M ; p M u M ; r p r h ]) (12) where W is a trainable parameter."}, {"id": 59, "string": "We combine the representations of the sentences computed above with the representations learned from DMP to obtain the final prediction."}, {"id": 60, "string": "Training As shown in Table 2 , many examples from our datasets are labeled by several people, and the choices of the annotators are not always consistent."}, {"id": 61, "string": "For instance, when the label number is 3 in SNLI, \"total=0\" means that no examples have 3 annotators (maybe more or less); \"correct=8748\" means that there are 8748 examples whose number of correct labels is 3 (the number of annotators maybe 4 or 5, but some provided wrong labels)."}, {"id": 62, "string": "Although all the labels for each example will be unified to a final (correct) label, diversity of the labels for a single example indicates the low confidence of the result, which is not ideal to only use the final label to optimize the model."}, {"id": 63, "string": "We propose a new objective function that combines both the log probabilities of the ground-truth label and a reward defined by the property of the datasets for the reinforcement learning."}, {"id": 64, "string": "The most widely used objective function for the natural language inference is to minimize the negative log cross-entropy loss: J CE (\u0398) = \u2212 1 N N k log(d k l ) (13) where \u0398 are all the parameters to optimize, N is the number of examples in the dataset, d l is the probability of the ground-truth label l. However, directly using the final label to train the model might be difficult in some situations, where the example is confusing and the labels from the annotators are different."}, {"id": 65, "string": "For instance, consider an example from the SNLI dataset: \u2022 P : \"A smiling costumed woman is holding an umbrella.\""}, {"id": 66, "string": "\u2022 H: \"A happy woman in a fairy costume holds an umbrella.\""}, {"id": 67, "string": "The final label is neutral, but the original labels from the five annotators are neural, neural, entailment, contradiction, neural, in which case the relation between \"smiling\" and \"happy\" might be under different comprehension."}, {"id": 68, "string": "The final label's confidence of this example is obviously lower than an example that all of its labels are the same."}, {"id": 69, "string": "To simulate the thought of human being more closely, in this paper, we tackle this problem by using the REINFORCE algorithm (Williams, 1992) to minimize the negative expected reward, which is defined as: J RL (\u0398) = \u2212E l\u223c\u03c0(l|P,H) [R(l, {l * })] (14) where \u03c0(l|P, H) is the previous action policy that predicts the label given P and H, {l * } is the set of annotated labels, and R(l, {l * }) = number of l in {l * } |{l * }| (15) is the reward function defined to measure the distance to all the ideas of the annotators."}, {"id": 70, "string": "To avoid of overwriting its earlier results and further stabilize training, we use a linear function to integrate the above two objective functions: J(\u0398) = \u03bbJ CE (\u0398) + (1 \u2212 \u03bb)J RL (\u0398) (16) where \u03bb is a tunable hyperparameter."}, {"id": 71, "string": "Experiments Datasets BookCorpus: We use the dataset from BookCorpus  to pre-train our sentence encoder model."}, {"id": 72, "string": "We preprocessed and collected discourse markers from BookCorpus as ."}, {"id": 73, "string": "We finally curated a dataset of 6527128 pairs of sentences for 8 discourse markers, whose statistics are shown in Table 3 ."}, {"id": 74, "string": "SNLI: Stanford Natural Language Inference(Bowman et al., 2015) is a collection of more than 570k human annotated sentence pairs labeled for entailment, contradiction, and semantic independence."}, {"id": 75, "string": "SNLI is two orders of magnitude larger than all other resources of its type."}, {"id": 76, "string": "The premise data is extracted from the captions of the Flickr30k corpus (Young et al., 2014) , the hypothesis data and the labels are manually annotated."}, {"id": 77, "string": "The original SNLI corpus contains also the other category, which includes the sentence pairs lacking consensus among multiple human annotators."}, {"id": 78, "string": "We remove this category and use the same split as in (Bowman et al., 2015) and other previous work."}, {"id": 79, "string": "MultiNLI: Multi-Genre Natural Language Inference (Williams et al., 2017) is another large-scale corpus for the task of NLI."}, {"id": 80, "string": "MultiNLI has 433k sentences pairs and is in the same format as SNLI, but it includes a more diverse range of text, as well as an auxiliary test set for cross-genre transfer evaluation."}, {"id": 81, "string": "Half of these selected genres appear in training set while the rest are not, creating in-domain (matched) and cross-domain (mismatched) development/test sets."}, {"id": 82, "string": "Method SNLI MultiNLI Matched Mismatched 300D LSTM encoders (Bowman et al., 2016) 80.6 --300D Tree-based CNN encoders (Mou et al., 2016) 82.1 --4096D BiLSTM with max-pooling (Conneau et al., 2017) 84.5 --600D Gumbel TreeLSTM encoders (Choi et al., 2017) 86.0 --600D Residual stacked encoders (Nie and Bansal, 2017) 86.0 74.6 73.6 Gated-Att BiLSTM (Chen et al., 2017d) -73.2 73.6 100D LSTMs with attention (Rockt\u00e4schel et al., 2016) 83.5 --300D re-read LSTM (Sha et al., 2016) 87.5 --DIIN (Gong et al., 2018) 88.0 78.8 77.8 Biattentive Classification Network (McCann et al., 2017) 88.1 --300D CAFE (Tay et al., 2017) 88.5 78.7 77.9 KIM (Chen et al., 2017b) 88.6 --600D ESIM + 300D Syntactic TreeLSTM (Chen et al., 2017c) 88.8 --DIIN(Ensemble) (Gong et al., 2018) 88.9 80.0 78.7 KIM(Ensemble) (Chen et al., 2017b) 89.1 --300D CAFE(Ensemble) (Tay et al., 2017) 89 Implementation Details We use the Stanford CoreNLP toolkit  to tokenize the words and generate POS and NER tags."}, {"id": 83, "string": "The word embeddings are initialized by 300d Glove (Pennington et al., 2014) , the dimensions of POS and NER embeddings are 30 and 10."}, {"id": 84, "string": "The dataset we use to train the embeddings of POS tags and NER tags are the training set given by SNLI."}, {"id": 85, "string": "We apply Tensorflow r1.3 as our neural network framework."}, {"id": 86, "string": "We set the hidden size as 300 for all the LSTM layers and apply dropout (Srivastava et al., 2014) between layers with an initial ratio of 0.9, the decay rate as 0.97 for every 5000 step."}, {"id": 87, "string": "We use the AdaDelta for optimization as described in (Zeiler, 2012) with \u03c1 as 0.95 and as 1e-8."}, {"id": 88, "string": "We set our batch size as 36 and the initial learning rate as 0.6."}, {"id": 89, "string": "The parameter \u03bb in the objective function is set to be 0.2."}, {"id": 90, "string": "For DMP task, we use stochastic gradient descent with initial learning rate as 0.1, and we anneal by half each time the validation accuracy is lower than the previous epoch."}, {"id": 91, "string": "The number of epochs is set to be 10, and the feedforward dropout rate is 0.2."}, {"id": 92, "string": "The learned encoder in subsequent NLI task is trainable."}, {"id": 93, "string": "Results In (2016) proposed a simple baseline that uses LSTM to encode the whole sentences and feed them into a MLP classifier to predict the final inference relationship, they achieve an accuracy of 80.6% on SNLI."}, {"id": 94, "string": "Nie and Bansal (2017) test their model on both SNLI and MiltiNLI, and achieves competitive results."}, {"id": 95, "string": "In the medium part, we show the results of other neural network models."}, {"id": 96, "string": "Obviously, the performance of most of the integrated methods are better than the sentence encoding based models above."}, {"id": 97, "string": "Both DIIN (Gong et al., 2018) and  We present the ensemble results on both datasets in the bottom part of the table 4."}, {"id": 98, "string": "We build an ensemble model which consists of 10 single models with the same architecture but initialized with different parameters."}, {"id": 99, "string": "The performance of our model achieves 89.6% on SNLI, 80.3% on matched MultiNLI and 79.4% on mismatched MultiNLI, which are all state-of-the-art results."}, {"id": 100, "string": "Ablation Analysis As shown in Table 5 , we conduct an ablation experiment on SNLI development dataset to evaluate the individual contribution of each component of our model."}, {"id": 101, "string": "Firstly we only use the results of the sentence encoder model to predict the answer, in other words, we represent each sentence by a single vector and use dot product with a linear function to do the classification."}, {"id": 102, "string": "The result is obviously not satisfactory, which indicates that only using sentence embedding from discourse markers to predict the answer is not ideal in large-scale datasets."}, {"id": 103, "string": "We then remove the sentence encoder model, which means we don't use the knowledge transferred from the DMP task and thus the representations r p and r h are set to be zero vectors in the equation (6) and the equation (12)."}, {"id": 104, "string": "We observe that the performance drops significantly to 87.24%, which is nearly 1.5% to our DMAN model, which indicates that the discourse markers have deep connections with the logical relations between two sentences they links."}, {"id": 105, "string": "When Figure 2 : Performance when the sentence encoder is pretrained on different discourse markers sets."}, {"id": 106, "string": "\"NONE\" means the model doesn't use any discourse markers; \"ALL\" means the model use all the discourse markers."}, {"id": 107, "string": "we remove the character-level embedding and the POS and NER features, the performance drops a lot."}, {"id": 108, "string": "We conjecture that those feature tags help the model represent the words as a whole while the char-level embedding can better handle the outof-vocab (OOV) or rare words."}, {"id": 109, "string": "The exact match feature also demonstrates its effectiveness in the ablation result."}, {"id": 110, "string": "Finally, we ablate the reinforcement learning part, in other words, we only use the original loss function to optimize the model (set \u03bb = 1)."}, {"id": 111, "string": "The result drops about 0.5%, which proves that it is helpful to utilize all the information from the annotators."}, {"id": 112, "string": "Semantic Analysis In Figure 2 , we show the performance on the three relation labels when the model is pre-trained on different discourse markers sets."}, {"id": 113, "string": "In other words, we removed discourse marker from the original set each time and use the rest 7 discourse markers to pre-train the sentence encoder in the DMP task and then train the DMAN."}, {"id": 114, "string": "As we can see, there is a sharp decline of accuracy when removing \"but\", \"because\" and \"although\"."}, {"id": 115, "string": "We can intuitively speculate that \"but\" and \"although\" have direct connections with the contradiction label (which drops most significantly) while \"because\" has some links with the entailment label."}, {"id": 116, "string": "We observe that some discourse markers such as \"if\" or \"before\" contribute much less than other words which have strong logical hints, although they  actually improve the performance of the model."}, {"id": 117, "string": "Compared to the other two categories, the \"contradiction\" label examples seem to benefit the most from the pre-trained sentence encoder."}, {"id": 118, "string": "Visualization In Figure 3 , we also provide a visualized analysis of the hidden representation from similarity matrix A (computed in the equation (6) ) in the situations that whether we use the discourse markers or not."}, {"id": 119, "string": "We pick a sentence pair whose premise is \"3 young man in hoods standing in the middle of a quiet street facing the camera.\""}, {"id": 120, "string": "and hypothesis is \"Three people sit by a busy street bareheaded.\""}, {"id": 121, "string": "We observe that the values are highly correlated among the synonyms like \"people\" with \"man\", \"three\" with \"3\" in both situations."}, {"id": 122, "string": "However, words that might have contradictory meanings like \"hoods\" with \"bareheaded\", \"quiet\" with \"busy\" perform worse without the discourse markers augmentation, which conforms to the conclusion that the \"contradiction\" label examples benefit a lot which is observed in the Section 5.5."}, {"id": 123, "string": "6 Related Work Discourse Marker Applications This work is inspired most directly by the DisSent model and Discourse Prediction Task of , which introduce the use of the discourse markers information for the pretraining of sentence encoders."}, {"id": 124, "string": "They follow  to collect a large sentence pairs corpus from Book-Corpus  and propose a sentence representation based on that."}, {"id": 125, "string": "They also apply their pre-trained sentence encoder to a series of natural language understanding tasks such as sentiment analysis, question-type, entailment, and relatedness."}, {"id": 126, "string": "However, all those datasets are provided by Conneau et al."}, {"id": 127, "string": "(2017) for evaluating sentence embeddings and are almost all small-scale and are not able to support more complex neural network."}, {"id": 128, "string": "Moreover, they represent each sentence by a single vector and directly combine them to predict the answer, which is not able to interact among the words level."}, {"id": 129, "string": "In closely related work, Jernite et al."}, {"id": 130, "string": "(2017) propose a model that also leverage discourse relations."}, {"id": 131, "string": "However, they manually group the discourse markers into several categories based on human knowledge and predict the category instead of the explicit discourse marker phrase."}, {"id": 132, "string": "However, the size of their dataset is much smaller than that in , and sometimes there has been disagreement among annotators about what exactly is the correct categorization of discourse relations (Hobbs, 1990) ."}, {"id": 133, "string": "Unlike previous works, we insert the sentence encoder into an integrated network to augment the semantic representation for NLI tasks rather than directly combining the sentence embeddings to predict the relations."}, {"id": 134, "string": "Natural Language Inference Earlier research on the natural language inference was based on small-scale datasets (Marelli et al., 2014) , which relied on traditional methods such as shallow methods (Glickman et al., 2005) , natural logic methods(MacCartney and Manning, 2007) , etc."}, {"id": 135, "string": "These datasets are either not large enough to support complex deep neural network models or too easy to challenge natural language."}, {"id": 136, "string": "Large and complicated networks have been successful in many natural language processing tasks (Zhu et al., 2017; Chen et al., 2017e; Pan et al., 2017a) ."}, {"id": 137, "string": "Recently, Bowman et al."}, {"id": 138, "string": "(2015) released Stanford Natural language Inference (SNLI) dataset, which is a high-quality and large-scale benchmark, thus inspired many significant works (Bowman et al., 2016; Mou et al., 2016; Vendrov et al., 2016; Conneau et al., 2017; Gong et al., 2018; McCann et al., 2017; Chen et al., 2017b; Choi et al., 2017; Tay et al., 2017) ."}, {"id": 139, "string": "Most of them focus on the improvement of the interaction architectures and obtain competitive results, while transfer learning from external knowledge is popular as well."}, {"id": 140, "string": "Vendrov et al."}, {"id": 141, "string": "(2016) incorpated Skipthought , which is an unsupervised sequence model that has been proven to generate useful sentence embedding."}, {"id": 142, "string": "McCann et al."}, {"id": 143, "string": "(2017) proposed to transfer the pre-trained encoder from the neural machine translation (NMT) to the NLI tasks."}, {"id": 144, "string": "Our method combines a pre-trained sentence encoder from the DMP task with an integrated NLI model to compose a novel framework."}, {"id": 145, "string": "Furthermore, unlike previous studies, we make full use of the labels provided by the annotators and employ policy gradient to optimize a new objective function in order to simulate the thought of human being."}, {"id": 146, "string": "Conclusion In this paper, we propose Discourse Marker Augmented Network for the task of the natural language inference."}, {"id": 147, "string": "We transfer the knowledge learned from the discourse marker prediction task to the NLI task to augment the semantic representation of the model."}, {"id": 148, "string": "Moreover, we take the various views of the annotators into consideration and employ reinforcement learning to help optimize the model."}, {"id": 149, "string": "The experimental evaluation shows that our model achieves the state-of-the-art results on SNLI and MultiNLI datasets."}, {"id": 150, "string": "Future works involve the choice of discourse markers and some other transfer learning sources."}, {"id": 151, "string": "Acknowledgements This work was supported in part by the National Nature Science Foundation of China (Grant Nos: 61751307), in part by the grant ZJU Research 083650 of the ZJUI Research Program from Zhejiang University and in part by the National Youth Top-notch Talent Support Program."}, {"id": 152, "string": "The experiments are supported by Chengwei Yao in the Experiment Center of the College of Computer Science and Technology, Zhejiang university."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 24}, {"section": "Natural Language Inference (NLI)", "n": "2.1", "start": 25, "end": 27}, {"section": "Discourse Marker Prediction (DMP)", "n": "2.2", "start": 28, "end": 29}, {"section": "Sentence Encoder Model", "n": "3", "start": 30, "end": 37}, {"section": "Discourse Marker Augmented Network", "n": "4", "start": 38, "end": 38}, {"section": "Encoding Layer", "n": "4.1", "start": 39, "end": 48}, {"section": "Interaction Layer", "n": "4.2", "start": 49, "end": 57}, {"section": "Output Layer", "n": "4.3", "start": 58, "end": 59}, {"section": "Training", "n": "4.4", "start": 60, "end": 70}, {"section": "Datasets", "n": "5.1", "start": 71, "end": 82}, {"section": "Implementation Details", "n": "5.2", "start": 83, "end": 92}, {"section": "Results", "n": "5.3", "start": 93, "end": 99}, {"section": "Ablation Analysis", "n": "5.4", "start": 100, "end": 111}, {"section": "Semantic Analysis", "n": "5.5", "start": 112, "end": 117}, {"section": "Visualization", "n": "5.6", "start": 118, "end": 122}, {"section": "Discourse Marker Applications", "n": "6.1", "start": 123, "end": 133}, {"section": "Natural Language Inference", "n": "6.2", "start": 134, "end": 145}, {"section": "Conclusion", "n": "7", "start": 146, "end": 148}, {"section": "Acknowledgements", "n": "8", "start": 149, "end": 152}], "figures": [{"filename": "../figure/image/1023-Table1-1.png", "caption": "Table 1: Three examples in SNLI dataset.", "page": 0, "bbox": {"x1": 306.71999999999997, "x2": 529.4399999999999, "y1": 223.2, "y2": 407.03999999999996}}, {"filename": "../figure/image/1023-Table4-1.png", "caption": "Table 4: Performance on the SNLI dataset and the MultiNLI dataset. In the top part, we show sentence encoding-based models; In the medium part, we present the performance of integrated neural network models; In the bottom part, we show the results of ensemble models.", "page": 5, "bbox": {"x1": 74.88, "x2": 520.3199999999999, "y1": 68.64, "y2": 360.0}}, {"filename": "../figure/image/1023-Table5-1.png", "caption": "Table 5: Ablations on the SNLI development dataset.", "page": 6, "bbox": {"x1": 72.0, "x2": 291.36, "y1": 62.4, "y2": 197.28}}, {"filename": "../figure/image/1023-Figure2-1.png", "caption": "Figure 2: Performance when the sentence encoder is pretrained on different discourse markers sets. \u201cNONE\u201d means the model doesn\u2019t use any discourse markers; \u201cALL\u201d means the model use all the discourse markers.", "page": 6, "bbox": {"x1": 306.71999999999997, "x2": 544.3199999999999, "y1": 61.44, "y2": 240.0}}, {"filename": "../figure/image/1023-Figure1-1.png", "caption": "Figure 1: Overview of our Discource Marker Augmented Network, comprising the part of Discourse Marker Prediction (upper) for pre-training and Natural Language Inferance (bottom) to which the learned knowledge will be transferred.", "page": 2, "bbox": {"x1": 74.88, "x2": 524.16, "y1": 66.72, "y2": 239.51999999999998}}, {"filename": "../figure/image/1023-Figure3-1.png", "caption": "Figure 3: Comparison of the visualized similarity relations.", "page": 7, "bbox": {"x1": 73.92, "x2": 278.4, "y1": 68.16, "y2": 310.08}}, {"filename": "../figure/image/1023-Table2-1.png", "caption": "Table 2: Statistics of the labels of SNLI and MuliNLI. Total means the number of examples whose number of annotators is in the left column. Correct means the number of examples whose number of correct labels from the annotators is in the left column.", "page": 3, "bbox": {"x1": 306.71999999999997, "x2": 536.16, "y1": 62.879999999999995, "y2": 159.35999999999999}}, {"filename": "../figure/image/1023-Table3-1.png", "caption": "Table 3: Statistics of discouse markers in our dataset from BookCorpus.", "page": 4, "bbox": {"x1": 325.92, "x2": 505.44, "y1": 62.4, "y2": 197.28}}]}