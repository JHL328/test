{"title": "Don't Take the Premise for Granted: Mitigating Artifacts in Natural Language Inference", "abstract": "Natural Language Inference (NLI) datasets often contain hypothesis-only biases-artifacts that allow models to achieve non-trivial performance without learning whether a premise entails a hypothesis. We propose two probabilistic methods to build models that are more robust to such biases and better transfer across datasets. In contrast to standard approaches to NLI, our methods predict the probability of a premise given a hypothesis and NLI label, discouraging models from ignoring the premise. We evaluate our methods on synthetic and existing NLI datasets by training on datasets containing biases and testing on datasets containing no (or different) hypothesis-only biases. Our results indicate that these methods can make NLI models more robust to dataset-specific artifacts, transferring better than a baseline architecture in 9 out of 12 NLI datasets. Additionally, we provide an extensive analysis of the interplay of our methods with known biases in NLI datasets, as well as the effects of encouraging models to ignore biases and fine-tuning on target datasets. 1 * * Equal contribution 1 Our code is available at https://github.com/ azpoliak/robust-nli. 2 This hypothesis contradicts the premise and would likely not be inferred.", "text": [{"id": 0, "string": "Introduction Natural Language Inference (NLI) is often used to gauge a model's ability to understand a relationship between two texts (Cooper et al., 1996; Dagan et al., 2006) ."}, {"id": 1, "string": "In NLI, a model is tasked with determining whether a hypothesis (a woman is sleeping) would likely be inferred from a premise (a woman is talking on the phone)."}, {"id": 2, "string": "2 The development of new large-scale datasets has led to a flurry of various neural network architectures for solving NLI."}, {"id": 3, "string": "However, recent work has found that many NLI datasets contain biases, or annotation artifacts, i.e., features present in hypotheses that enable models to perform surprisingly well using only the hypothesis, without learning the relationship between two texts (Gururangan et al., 2018; Poliak et al., 2018b; Tsuchiya, 2018) ."}, {"id": 4, "string": "3 For instance, in some datasets, negation words like \"not\" and \"nobody\" are often associated with a relationship of contradiction."}, {"id": 5, "string": "As a ramification of such biases, models may not generalize well to other datasets that contain different or no such biases."}, {"id": 6, "string": "Recent studies have tried to create new NLI datasets that do not contain such artifacts, but many approaches to dealing with this issue remain unsatisfactory: constructing new datasets (Sharma et al., 2018) is costly and may still result in other artifacts; filtering \"easy\" examples and defining a harder subset is useful for evaluation purposes (Gururangan et al., 2018) , but difficult to do on a large scale that enables training; and compiling adversarial examples (Glockner et al., 2018) is informative but again limited by scale or diversity."}, {"id": 7, "string": "Instead, our goal is to develop methods that overcome these biases as datasets may still contain undesired artifacts despite annotation efforts."}, {"id": 8, "string": "Typical NLI models learn to predict an entailment label discriminatively given a premisehypothesis pair (Figure 1a ), enabling them to learn hypothesis-only biases."}, {"id": 9, "string": "Instead, we predict the premise given the hypothesis and the entailment label, which by design cannot be solved using data artifacts."}, {"id": 10, "string": "While this objective is intractable, it motivates two approximate training methods for standard NLI classifiers that are more resistant to biases."}, {"id": 11, "string": "Our first method uses a hypothesis-only classifier (Figure 1b ) and the second uses negative sampling by swapping premises between premisehypothesis pairs (Figure 1c )."}, {"id": 12, "string": "Figure 1 : Illustration of (a) the baseline NLI architecture, and our two proposed methods to remove hypothesis only-biases from an NLI model: (b) uses a hypothesis-only classifier, and (c) samples a random premise."}, {"id": 13, "string": "Arrows correspond to the direction of propagation."}, {"id": 14, "string": "Green or red arrows respectively mean that the gradient sign is kept as is or reversed."}, {"id": 15, "string": "Gray arrow indicates that the gradient is not back-propagated -this only occurs in (c) when we randomly sample a premise, otherwise the gradient is back-propagated."}, {"id": 16, "string": "f and g represent encoders and classifiers."}, {"id": 17, "string": "We evaluate the ability of our methods to generalize better in synthetic and naturalistic settings."}, {"id": 18, "string": "First, using a controlled, synthetic dataset, we demonstrate that, unlike the baseline, our methods enable a model to ignore the artifacts and learn to correctly identify the desired relationship between the two texts."}, {"id": 19, "string": "Second, we train models on an NLI dataset that is known to be biased and evaluate on other datasets that may have different or no biases."}, {"id": 20, "string": "We observe improved results compared to a fully discriminative baseline in 9 out of 12 target datasets, indicating that our methods generate models that are more robust to annotation artifacts."}, {"id": 21, "string": "An extensive analysis reveals that our methods are most effective when the target datasets have different biases from the source dataset or no noticeable biases."}, {"id": 22, "string": "We also observe that the more we encourage the model to ignore biases, the better it transfers, but this comes at the expense of performance on the source dataset."}, {"id": 23, "string": "Finally, we show that our methods can better exploit small amounts of training data in a target dataset, especially when it has different biases from the source data."}, {"id": 24, "string": "In this paper, we focus on the transferability of our methods from biased datasets to ones having different or no biases."}, {"id": 25, "string": "Elsewhere , we have analyzed the effect of these methods on the learned language representations, suggesting that they may indeed be less biased."}, {"id": 26, "string": "However, we caution that complete removal of biases remains difficult and is dependent on the techniques used."}, {"id": 27, "string": "The choice of whether to remove bias also depends on the goal; in an in-domain scenario certain biases may be helpful and should not necessarily be removed."}, {"id": 28, "string": "In summary, in this paper we make the follow-ing contributions: \u2022 Two novel methods to train NLI models that are more robust to dataset-specific artifacts."}, {"id": 29, "string": "\u2022 An empirical evaluation of the methods on a synthetic dataset and 12 naturalistic datasets."}, {"id": 30, "string": "\u2022 An extensive analysis of the effects of our methods on handling bias."}, {"id": 31, "string": "Motivation A training instance for NLI consists of a hypothesis sentence H, a premise statement P , and an inference label y."}, {"id": 32, "string": "A probabilistic NLI model aims to learn a parameterized distribution p \u03b8 (y | P, H) to compute the probability of the label given the two sentences."}, {"id": 33, "string": "We consider NLI models with premise and hypothesis encoders, f P,\u03b8 and f H,\u03b8 , which learn representations of P and H, and a classification layer, g \u03b8 , which learns a distribution over y."}, {"id": 34, "string": "Typically, this is done by maximizing this discriminative likelihood directly, which will act as our baseline ( Figure 1a )."}, {"id": 35, "string": "However, many NLI datasets contain biases that allow models to perform non-trivially well when accessing just the hypotheses (Tsuchiya, 2018; Gururangan et al., 2018; Poliak et al., 2018b) ."}, {"id": 36, "string": "This allows models to leverage hypothesis-only biases that may be present in a dataset."}, {"id": 37, "string": "A model may perform well on a specific dataset, without identifying whether P entails H. Gururangan et al."}, {"id": 38, "string": "(2018) argue that \"the bulk\" of many models' \"success [is] attribute[d] to the easy examples\"."}, {"id": 39, "string": "Consequently, this may limit how well a model trained on one dataset would perform on other datasets that may have different artifacts."}, {"id": 40, "string": "Consider an example where P and H are strings from {a, b, c}, and an environment where P en-tails H if and only if the first letters are the same, as in synthetic dataset A."}, {"id": 41, "string": "In such a setting, a model should be able to learn the correct condition for P to entail H. 4 Synthetic dataset A (a, a) \u2192 TRUE (a, b) \u2192 FALSE (b, b) \u2192 TRUE (b, a) \u2192 FALSE Imagine now that an artifact c is appended to every entailed H (synthetic dataset B)."}, {"id": 42, "string": "A model of y with access only to the hypothesis side can fit the data perfectly by detecting the presence or absence of c in H, ignoring the more general pattern."}, {"id": 43, "string": "Therefore, we hypothesize that a model that learns p \u03b8 (y | P, H) by training on such data would be misled by the bias c and would fail to learn the relationship between the premise and the hypothesis."}, {"id": 44, "string": "Consequently, the model would not perform well on the unbiased synthetic dataset A."}, {"id": 45, "string": "Synthetic dataset B (with artifact) (a, ac) \u2192 TRUE (a, b) \u2192 FALSE (b, bc) \u2192 TRUE (b, a) \u2192 FALSE Instead of maximizing the discriminative likelihood p \u03b8 (y | P, H) directly, we consider maximizing the likelihood of generating the premise P conditioned on the hypothesis H and the label y: p(P | H, y)."}, {"id": 46, "string": "This objective cannot be fooled by hypothesis-only features, and it requires taking the premise into account."}, {"id": 47, "string": "For example, a model that only looks for c in the above example cannot do better than chance on this objective."}, {"id": 48, "string": "However, as P comes from the space of all sentences, this objective is much more difficult to estimate."}, {"id": 49, "string": "Training Methods Our goal is to maximize log p(P | H, y) on the training data."}, {"id": 50, "string": "While we could in theory directly parameterize this distribution, for efficiency and simplicity we instead write it in terms of the standard p \u03b8 (y | P, H) and introduce a new term to approximate the normalization: log p(P | y, H) = log p \u03b8 (y | P, H)p(P | H) p(y | H) ."}, {"id": 51, "string": "Throughout we will assume p(P | H) is a fixed constant (justified by the dataset assumption that, lacking y, P and H are independent and drawn at random)."}, {"id": 52, "string": "Therefore, to approximately maximize this objective we need to estimate p(y | H)."}, {"id": 53, "string": "We propose two methods for doing so."}, {"id": 54, "string": "Method 1: Hypothesis-only Classifier Our first approach is to estimate the term p(y | H) directly."}, {"id": 55, "string": "In theory, if labels in an NLI dataset depend on both premises and hypothesis (which Poliak et al."}, {"id": 56, "string": "(2018b) call \"interesting NLI\"), this should be a uniform distribution."}, {"id": 57, "string": "However, as discussed above, it is often possible to correctly predict y based only on the hypothesis."}, {"id": 58, "string": "Intuitively, this model can be interpreted as training a classifier to identify the (latent) artifacts in the data."}, {"id": 59, "string": "We define this distribution using a shared representation between our new estimator p \u03c6,\u03b8 (y | H) and p \u03b8 (y | P, H)."}, {"id": 60, "string": "In particular, the two share an embedding of H from the hypothesis encoder f H,\u03b8 ."}, {"id": 61, "string": "The additional parameters \u03c6 are in the final layer g \u03c6 , which we call the hypothesis-only classifier."}, {"id": 62, "string": "The parameters of this layer \u03c6 are updated to fit p(y | H) whereas the rest of the parameters in \u03b8 are updated based on the gradients of log p(P | y, H)."}, {"id": 63, "string": "Training is illustrated in Figure 1b ."}, {"id": 64, "string": "This interplay is controlled by two hyper-parameters."}, {"id": 65, "string": "First, the negative term is scaled by a hyper-parameter \u03b1."}, {"id": 66, "string": "Second, the updates of g \u03c6 are weighted by \u03b2."}, {"id": 67, "string": "We therefore minimize the following multitask loss functions (shown for a single example): max \u03b8 L 1 (\u03b8) = log p \u03b8 (y | P, H) \u2212 \u03b1 log p \u03c6,\u03b8 (y | H) max \u03c6 L 2 (\u03c6) = \u03b2 log p \u03c6,\u03b8 (y | H) We implement these together with a gradient reversal layer (Ganin & Lempitsky, 2015) ."}, {"id": 68, "string": "As illustrated in Figure 1b , during back-propagation, we first pass gradients through the hypothesis-only classifier g \u03c6 and then reverse the gradients going to the hypothesis encoder g H,\u03b8 (potentially scaling them by \u03b2)."}, {"id": 69, "string": "5 Method 2: Negative Sampling As an alternative to the hypothesis-only classifier, our second method attempts to remove annotation artifacts from the representations by sampling alternative premises."}, {"id": 70, "string": "Consider instead writing the normalization term above as, \u2212 log p(y | H) = \u2212 log P p(P | H)p(y | P , H) = \u2212 log E P p(y | P , H) \u2265 \u2212E P log p(y | P , H), where the expectation is uniform and the last step is from Jensen's inequality."}, {"id": 71, "string": "6 As in Method 1, we define a separate p \u03c6,\u03b8 (y | P , H) which shares the embedding layers from \u03b8, f P,\u03b8 and f H,\u03b8 ."}, {"id": 72, "string": "However, as we are attempting to unlearn hypothesis bias, we block the gradients and do not let it update the premise encoder f P,\u03b8 ."}, {"id": 73, "string": "7 The full setting is shown in Figure 1c ."}, {"id": 74, "string": "To approximate the expectation, we use uniform samples P (from other training examples) to replace the premise in a (P , H)-pair, while keeping the label y."}, {"id": 75, "string": "We also maximize p \u03b8,\u03c6 (y | P , H) to learn the artifacts in the hypotheses."}, {"id": 76, "string": "We use \u03b1 \u2208 [0, 1] to control the fraction of randomly sampled P 's (so the total number of examples remains the same)."}, {"id": 77, "string": "As before, we implement this using gradient reversal scaled by \u03b2. max \u03b8 L 1 (\u03b8) = (1 \u2212 \u03b1) log p \u03b8 (y | P, H) \u2212 \u03b1 log p \u03b8,\u03c6 (y | P , H) max \u03c6 L 2 (\u03c6) = \u03b2 log p \u03b8,\u03c6 (y | P , H) Finally, we share the classifier weights between p \u03b8 (y | P, H) and p \u03c6,\u03b8 (y | P , H)."}, {"id": 78, "string": "In a sense this is counter-intuitive, since p \u03b8 is being trained to unlearn bias, while p \u03c6,\u03b8 is being trained to learn it."}, {"id": 79, "string": "However, if the models are trained separately, they may learn to co-adapt with each other (Elazar & Goldberg, 2018) ."}, {"id": 80, "string": "If p \u03c6,\u03b8 is not trained well, we might be fooled to think that the representation does not contain any biases, while in fact they are still hidden in the representation."}, {"id": 81, "string": "For some evidence that this indeed happens when the models are trained separately, see ."}, {"id": 82, "string": "8 6 There are more developed and principled approaches in language modeling for approximating this partition function without having to make this assumption."}, {"id": 83, "string": "These include importance sampling (Bengio & Senecal, 2003) , noisecontrastive estimation (Gutmann & Hyv\u00e4rinen, 2010) , and sublinear partition estimation ."}, {"id": 84, "string": "These are more difficult to apply in the setting of sampling full sentences from an unknown set."}, {"id": 85, "string": "We hope to explore methods for applying them in future work."}, {"id": 86, "string": "7 A reviewer asked about gradient blocking."}, {"id": 87, "string": "Our motivation was that, for a random premise, we do not have reliable information to update its encoder."}, {"id": 88, "string": "However, future work can explore different configurations of gradient blocking."}, {"id": 89, "string": "8 A similar situation arises in neural cryptography (Abadi , since it is known to contain significant annotation artifacts."}, {"id": 90, "string": "We evaluate the robustness of our methods on other, target datasets."}, {"id": 91, "string": "As target datasets, we use the 10 datasets investigated by Poliak et al."}, {"id": 92, "string": "(2018b) in their hypothesisonly study, plus two test sets: GLUE's diagnostic test set, which was carefully constructed to not contain hypothesis-biases (Wang et al., 2018) , and SNLI-hard, a subset of the SNLI test set that is thought to have fewer biases (Gururangan et al., 2018) ."}, {"id": 93, "string": "The target datasets include humanjudged datasets that used automatic methods to pair premises and hypotheses, and then relied on humans to label the pairs: SCITAIL , ADD-ONE-RTE (Pavlick & Callison-Burch, 2016) 50  50  50  50  50  0.5  50  50  50  50  50  1  50  50  50  50  50  1.5  50  50  50  50  50  2  50  50  50  50  50  2.5  50  50  50  50  50  3  50  50  100  50  50  3.5  50  50  100  50  50  4  50  100 100  50  50  5 50 50 100 100 50 * 10 75 100 100 100 50 * 20 100 100 100 50 * 50 * (b) Method 2 Reisinger et al., 2015) ."}, {"id": 94, "string": "9 As many of these datasets have different label spaces than SNLI, we define a mapping (Appendix A.1) from our models' predictions to each target dataset's labels."}, {"id": 95, "string": "Finally, we also test on the Multi-genre NLI dataset (MNLI; Williams et al., 2018) , a successor to SNLI."}, {"id": 96, "string": "10 Baseline & Implementation Details We use InferSent (Conneau et al., 2017) as our baseline model because it has been shown to work well on popular NLI datasets and is representative of many NLI models."}, {"id": 97, "string": "We use separate BiLSTM encoders to learn vector representations of P and H. 11 The vector representations are combined following Mou et al."}, {"id": 98, "string": "(2016) , 12 and passed to an MLP classifier with one hidden layer."}, {"id": 99, "string": "Our proposed 9 Detailed descriptions of these datasets can be found in Poliak et al."}, {"id": 100, "string": "(2018b) ."}, {"id": 101, "string": "10 We leave additional NLI datasets, such as the Diverse NLI Collection (Poliak et al., 2018a) , for future work."}, {"id": 102, "string": "11 Many NLI models encode P and H separately (Rockt\u00e4schel et al., 2016; Mou et al., 2016; Liu et al., 2016; Cheng et al., 2016; Chen et al., 2017) , although some share information between the encoders via attention Duan et al., 2018) ."}, {"id": 103, "string": "12 Specifically, representations are concatenated, subtracted, and multiplied element-wise."}, {"id": 104, "string": "methods for mitigating biases use the same technique for representing and combining sentences."}, {"id": 105, "string": "Additional implementation details are provided in Appendix A.2."}, {"id": 106, "string": "For both methods, we sweep hyper-parameters \u03b1, \u03b2 over {0.05, 0.1, 0.2, 0.4, 0.8, 1.0}."}, {"id": 107, "string": "For each target dataset, we choose the best-performing model on its development set and report results on the test set."}, {"id": 108, "string": "13 Results Synthetic Experiments To examine how well our methods work in a controlled setup, we train on the biased dataset (B), but evaluate on the unbiased test set (A)."}, {"id": 109, "string": "As expected, without a method to remove hypothesisonly biases, the baseline fails to generalize to the test set."}, {"id": 110, "string": "Examining its predictions, we found that the baseline model learned to rely on the presence/absence of the bias term c, always predicting TRUE/FALSE respectively."}, {"id": 111, "string": "Table 1 shows the results of our two proposed methods."}, {"id": 112, "string": "As we increase the hyper-parameters \u03b1 and \u03b2, our methods initially behave like the baseline, learning the training set but failing on the test set."}, {"id": 113, "string": "However, with strong enough hyperparameters (moving towards the bottom in the tables), they perform perfectly on both the biased training set and the unbiased test set."}, {"id": 114, "string": "For Method 1, stronger hyper-parameters work better."}, {"id": 115, "string": "Method 2, in particular, breaks down with too many random samples (increasing \u03b1), as expected."}, {"id": 116, "string": "We also found that Method 1 did not require as strong \u03b2 as Method 2."}, {"id": 117, "string": "From the synthetic experiments, it seems that Method 1 learns to ignore the bias c and learn the desired relationship between P and H across many configurations, while Method 2 requires much stronger \u03b2."}, {"id": 118, "string": "Results on existing NLI datasets Table 2 (left block) reports the results of our proposed methods compared to the baseline in application to the NLI datasets."}, {"id": 119, "string": "The method using the hypothesis-only classifier to remove hypothesis-only biases from the model (Method 1) outperforms the baseline in 9 out of 12 target datasets (\u2206 > 0), though most improvements are small."}, {"id": 120, "string": "The training method using negative sampling (Method 2) only outperforms the baseline in 5 datasets, 4 of which are cases where the other method also outperformed the baseline."}, {"id": 121, "string": "These gains are much larger than those of Method 1."}, {"id": 122, "string": "We also report results of the proposed methods on the SNLI test set (right block)."}, {"id": 123, "string": "As our results improve on the target datasets, we note that Method 1's performance on SNLI does not drastically decrease (small \u2206), even when the improvement on the target dataset is large (for example, in SPR)."}, {"id": 124, "string": "For this method, the performance on SNLI drops by just an average of 1.11 (0.65 STDV)."}, {"id": 125, "string": "For Method 2, there is a large decrease on SNLI as results drop by an average of 11.19 (12.71 STDV)."}, {"id": 126, "string": "For these models, when we see large improvement on a target dataset, we often see a large drop on SNLI."}, {"id": 127, "string": "For example, on ADD-ONE-RTE, Method 2 outperforms the baseline by roughly 17% but performs almost 50% lower on SNLI."}, {"id": 128, "string": "Based on this, as well as the results on the synthetic dataset, Method 2 seems to be much more unstable and highly dependent on the right hyper-parameters."}, {"id": 129, "string": "Analysis Our results demonstrate that our approaches may be robust to many datasets with different types of bias."}, {"id": 130, "string": "We next analyze our results and explore modifications to the experimental setup that may improve model transferability across NLI datasets."}, {"id": 131, "string": "Interplay with known biases A priori, we expect our methods to provide the most benefit when a target dataset has no hypothesis-only biases or such biases that differ from ones in the training data."}, {"id": 132, "string": "Previous work estimated the amount of bias in NLI datasets by comparing the performance of a hypothesis-only classifier with the majority baseline (Poliak et al., 2018b) ."}, {"id": 133, "string": "If the classifier outperforms the baseline, the dataset is said to have hypothesis-only biases."}, {"id": 134, "string": "We follow a similar idea for estimating how similar the biases in a target dataset are to those in the source dataset."}, {"id": 135, "string": "We compare the performance of a hypothesis-only classifier trained on SNLI and evaluated on each target dataset, to a majority baseline of the most frequent class in each target dataset's training set (Maj) ."}, {"id": 136, "string": "We also compare to a hypothesis-only classifier trained and tested on Figure 2 : Accuracies of majority and hypothesis-only baselines on each dataset (x-axis)."}, {"id": 137, "string": "The datasets are generally ordered by increasing difference between a hypothesis-only model trained on the target dataset (green) compared to trained on SNLI (yellow)."}, {"id": 138, "string": "each target dataset."}, {"id": 139, "string": "14 Figure 2 shows the results."}, {"id": 140, "string": "When the hypothesis-only model trained on SNLI is tested on the target datasets, the model performs below Maj (except for MNLI), indicating that these target datasets contain different biases than those in SNLI."}, {"id": 141, "string": "The largest difference is on SPR: a hypothesis-only model trained on SNLI performs over 50% worse than one trained on SPR."}, {"id": 142, "string": "Indeed, our methods lead to large improvements on SPR ( Table 2) , indicating that they are especially helpful when the target dataset contains different biases."}, {"id": 143, "string": "On MNLI, this hypothesis-only model performs 10% above Maj, and roughly 20% worse compared to when trained on MNLI, suggesting that MNLI and SNLI have similar biases."}, {"id": 144, "string": "This may explain why our methods only slightly outperform the baseline on MNLI ( Table 2) ."}, {"id": 145, "string": "The hypothesis-only model trained on each target dataset did not outperform Maj on DPR, ADD-ONE-RTE, SICK, and MPE, suggesting that these datasets do not have noticeable hypothesis-only biases."}, {"id": 146, "string": "Here, as expected, we observe improvements when our methods are tested on these datasets, to varying degrees (from 0.45 on MPE to 31.11 on SICK)."}, {"id": 147, "string": "We also see improvements on datasets with biases (high performance of training on each dataset compared to the corresponding majority baseline), most noticeably SPR."}, {"id": 148, "string": "The only exception seems to be SCITAIL, where we do not improve despite it having different biases than SNLI."}, {"id": 149, "string": "However, when we strengthen \u03b1 and \u03b2 (below), Method 1 outperforms the baseline."}, {"id": 150, "string": "14 A reviewer noted that this method may miss similar bias \"types\" that are achieved through different lexical items."}, {"id": 151, "string": "We note that our use of pre-trained word embeddings might mitigate this concern."}, {"id": 152, "string": "Dataset Base Method  Finally, both methods obtain improved results on the GLUE diagnostic set, designed to be biasfree."}, {"id": 153, "string": "We do not see improvements on SNLI-hard, indicating it may still have biases -a possibility acknowledged by Gururangan et al."}, {"id": 154, "string": "(2018) ."}, {"id": 155, "string": "Stronger hyper-parameters In the synthetic experiment, we found that increasing \u03b1 and \u03b2 improves the models' ability to generalize to the unbiased dataset."}, {"id": 156, "string": "Does the same apply to natural NLI datasets?"}, {"id": 157, "string": "We expect that strengthening the auxiliary losses (L 2 in our methods) during training will hurt performance on the original data (where biases are useful), but improve on the target data, which may have different or no biases (Figure 2) ."}, {"id": 158, "string": "To test this, we increase the hyperparameter values during training; we consider the range {1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0}."}, {"id": 159, "string": "15 While there are other ways to strengthen our methods, e.g., increasing the number or size of hidden layers (Elazar & Goldberg, 2018) , we are interested in the effect of \u03b1 and \u03b2 as they control how much bias is subtracted from our baseline model."}, {"id": 160, "string": "Table 3 shows the results of Method 1 with stronger hyper-parameters on the existing NLI datasets."}, {"id": 161, "string": "As expected, performance on SNLI test sets (SNLI and SNLI-hard in Table 3 ) decreases more, but many of the other datasets benefit from stronger hyper-parameters (compared with Table 2 )."}, {"id": 162, "string": "We see the largest improvement on SICK, achieving over 10% increase compared to the 1.8% gain in Table 2 ."}, {"id": 163, "string": "As for Method 2, we found large drops in quality even in our basic configurations (Appendix A.3), so we do not increase the hyper-parameters further."}, {"id": 164, "string": "This should not be too surprising, adding too many random premises will lead to a model's degradation."}, {"id": 165, "string": "Fine-tuning on target datasets Our main goal is to determine whether our methods help a model perform well across multiple datasets by ignoring dataset-specific artifacts."}, {"id": 166, "string": "In turn, we did not update the models' parameters on other datasets."}, {"id": 167, "string": "But, what if we are given different amounts of training data for a new NLI dataset?"}, {"id": 168, "string": "To determine if our approach is still helpful, we updated four models on increasing sizes of training data from two target datasets (MNLI and SICK)."}, {"id": 169, "string": "All three training approaches-the baseline, Method 1, and Method 2-are used to pretrain a model on SNLI and fine-tune on the target dataset."}, {"id": 170, "string": "The fourth model is the baseline trained only on the target dataset."}, {"id": 171, "string": "Both MNLI and SICK have the same label spaces as SNLI, allowing us to hold that variable constant."}, {"id": 172, "string": "We use SICK because our methods resulted in good gains on it (Table 2) ."}, {"id": 173, "string": "MNLI's large training set allows us to consider a wide range of training set sizes."}, {"id": 174, "string": "16 Figure 3 shows the results on the dev sets."}, {"id": 175, "string": "In MNLI, pre-training is very helpful when finetuning on a small amount of new training data, although there is little to no gain from pre-training with either of our methods compared to the baseline."}, {"id": 176, "string": "This is expected, as we saw relatively small gains with the proposed methods on MNLI, and can be explained by SNLI and MNLI having similar biases."}, {"id": 177, "string": "In SICK, pre-training with either of our 16 We hold out 10K examples from the training set for dev as gold labels for the MNLI test set are not publicly available."}, {"id": 178, "string": "We evaluate on MNLI's matched dev set to assure consistent domains when fine-tuning."}, {"id": 179, "string": "methods is better in most data regimes, especially with very small amounts of target training data."}, {"id": 180, "string": "17 Related Work Biases and artifacts in NLU datasets Many natural language undersrtanding (NLU) datasets contain annotation artifacts."}, {"id": 181, "string": "Early work on NLI, also known as recognizing textual entailment (RTE), found biases that allowed models to perform relatively well by focusing on syntactic clues alone (Snow et al., 2006; Vanderwende & Dolan, 2006) ."}, {"id": 182, "string": "Recent work also found artifacts in new NLI datasets (Tsuchiya, 2018; Gururangan et al., 2018; Poliak et al., 2018b) ."}, {"id": 183, "string": "Other NLU datasets also exhibit biases."}, {"id": 184, "string": "In ROC Stories (Mostafazadeh et al., 2016) , a story cloze dataset, Schwartz et al."}, {"id": 185, "string": "(2017b) obtained a high performance by only considering the candidate endings, without even looking at the story context."}, {"id": 186, "string": "In this case, stylistic features of the candidate endings alone, such as the length or certain words, were strong indicators of the correct ending (Schwartz et al., 2017a; Cai et al., 2017) ."}, {"id": 187, "string": "A similar phenomenon was observed in reading comprehension, where systems performed non-trivially well by using only the final sentence in the passage or ignoring the passage altogether (Kaushik & Lipton, 2018) ."}, {"id": 188, "string": "Finally, multiple studies found non-trivial performance in visual question answering (VQA) by using only the question, without access to the image, due to question biases Kafle & Kanan, 2016 , 2017 Goyal et al., 2017; Agrawal et al., 2017) ."}, {"id": 189, "string": "Transferability across NLI datasets It has been known that many NLI models do not transfer across NLI datasets."}, {"id": 190, "string": "Chen Zhang's thesis (Zhang, 2010) focused on this phenomena as he demonstrated that \"techniques developed for textual entailment\" datasets, e.g., RTE-3, do not transfer well to other domains, specifically conversational entailment (Zhang & Chai, 2009 , 2010 ."}, {"id": 191, "string": "Bowman et al."}, {"id": 192, "string": "(2015) and Williams et al."}, {"id": 193, "string": "(2018) demonstrated (specifically in their respective Tables 7 and 4) how models trained on SNLI and MNLI may not transfer well across other NLI datasets like SICK."}, {"id": 194, "string": "Talman & Chatzikyriakidis (2018) recently reported similar findings using many advanced deep-learning models."}, {"id": 195, "string": "Improving model robustness Neural networks are sensitive to adversarial examples, primarily in machine vision, but also in NLP (Jia & Liang, 2017; Belinkov & Bisk, 2018; Ebrahimi et al., 2018; Heigold et al., 2018; Mudrakarta et al., 2018; Ribeiro et al., 2018; Belinkov & Glass, 2019) ."}, {"id": 196, "string": "A common approach to improving robustness is to include adversarial examples in training (Szegedy et al., 2014; Goodfellow et al., 2015) ."}, {"id": 197, "string": "However, this may not generalize well to new types of examples (Xiaoyong Yuan, 2017; Tramr et al., 2018) ."}, {"id": 198, "string": "Domain-adversarial neural networks aim to increase robustness to domain change, by learning to be oblivious to the domain using gradient reversals (Ganin et al., 2016) ."}, {"id": 199, "string": "Our methods rely similarly on gradient reversals when encouraging models to ignore dataset-specific artifacts."}, {"id": 200, "string": "One distinction is that domain-adversarial networks require knowledge of the domain at training time, while our methods learn to ignore latent artifacts and do not require direct supervision in the form of a domain label."}, {"id": 201, "string": "Others have attempted to remove biases from learned representations, e.g., gender biases in word embeddings (Bolukbasi et al., 2016) or sensitive information like sex and age in text representations (Li et al., 2018) ."}, {"id": 202, "string": "However, removing such attributes from text representations may be difficult (Elazar & Goldberg, 2018) ."}, {"id": 203, "string": "In contrast to this line of work, our final goal is not the removal of such attributes per se; instead, we strive for more robust representations that better transfer to other datasets, similar to Li et al."}, {"id": 204, "string": "(2018) ."}, {"id": 205, "string": "Recent work has applied adversarial learning to NLI."}, {"id": 206, "string": "Minervini & Riedel (2018) generate ad-versarial examples that do not conform to logical rules and regularize models based on those examples."}, {"id": 207, "string": "Similarly, Kang et al."}, {"id": 208, "string": "(2018) incorporate external linguistic resources and use a GAN-style framework to adversarially train robust NLI models."}, {"id": 209, "string": "In contrast, we do not use external resources and we are interested in mitigating hypothesisonly biases."}, {"id": 210, "string": "Finally, a similar approach has recently been used to mitigate biases in VQA (Ramakrishnan et al., 2018; Grand & Belinkov, 2019) ."}, {"id": 211, "string": "Conclusion Biases in annotations are a major source of concern for the quality of NLI datasets and systems."}, {"id": 212, "string": "We presented a solution for combating annotation biases by proposing two training methods to predict the probability of a premise given an entailment label and a hypothesis."}, {"id": 213, "string": "We demonstrated that this discourages the hypothesis encoder from learning the biases to instead obtain a less biased representation."}, {"id": 214, "string": "When empirically evaluating our approaches, we found that in a synthetic setting, as well as on a wide-range of existing NLI datasets, our methods perform better than the traditional training method to predict a label given a premise-hypothesis pair."}, {"id": 215, "string": "Furthermore, we performed several analyses into the interplay of our methods with known biases in NLI datasets, the effects of stronger bias removal, and the possibility of fine-tuning on the target datasets."}, {"id": 216, "string": "Our methodology can be extended to handle biases in other tasks where one is concerned with finding relationships between two objects, such as visual question answering, story cloze completion, and reading comprehension."}, {"id": 217, "string": "We hope to encourage such investigation in the broader community."}, {"id": 218, "string": "A Appendix A.1 Mapping labels Each premise-hypothesis pair in SNLI is labeled as ENTAILMENT, NEUTRAL, or CONTRADIC-TION."}, {"id": 219, "string": "MNLI, SICK, and MPE use the same label space."}, {"id": 220, "string": "Examples in JOCI are labeled on a 5-way ordinal scale."}, {"id": 221, "string": "We follow Poliak et al."}, {"id": 222, "string": "(2018b) by converting it \"into 3-way NLI tags where 1 maps to CONTRADICTION, 2-4 maps to NEUTRAL, and 5 maps to ENTAILMENT.\""}, {"id": 223, "string": "Since examples in SCI-TAIL are labeled as ENTAILMENT or NEUTRAL, when evaluating on SCITAIL, we convert the model's CONTRADICTION to NEUTRAL."}, {"id": 224, "string": "ADD-ONE-RTE and the recast datasets also model NLI as a binary prediction task."}, {"id": 225, "string": "However, their label sets are ENTAILED and NOT-ENTAILED."}, {"id": 226, "string": "In these cases, when the models predict ENTAILMENT, we map the label to ENTAILED, and when the models predict NEUTRAL or CONTRADICTION, we map the label to NOT-ENTAILED."}, {"id": 227, "string": "A.2 Implementation details For our experiments on the synthetic dataset, the characters are embedded with 10-dimensional vectors."}, {"id": 228, "string": "Input strings are represented as a sum of character embeddings, and the premise-hypothesis pair is represented by a concatenation of these embeddings."}, {"id": 229, "string": "The classifiers are single-layer MLPs of size 20 dimensions."}, {"id": 230, "string": "We train these models with SGD until convergence."}, {"id": 231, "string": "For the traditional NLI datasets, we use pre-computed 300-dimensional GloVe embeddings (Pennington et al., 2014) ."}, {"id": 232, "string": "18 The sentence representations learned by the BiLSTM encoders and the MLP classifier's hidden layer have a dimensionality of 2048 and 512 respectively."}, {"id": 233, "string": "We follow InferSent's training regime, using SGD with an initial learning rate of 0.1 and optional early stopping."}, {"id": 234, "string": "See Conneau et al."}, {"id": 235, "string": "(2017) for details."}, {"id": 236, "string": "A.3 Hyper-parameter sweeps Here we provide 10-fold cross-validation results on a subset of the SNLI training data (50K sentences) with different settings of our hyperparameters."}, {"id": 237, "string": "Figure 4b shows the dev set results with different configurations of Method 2."}, {"id": 238, "string": "Notice that performance degrades quickly when we increase the fraction of random premises (large \u03b1)."}, {"id": 239, "string": "In contrast, the results with Method 1 (Figure 4a ) are more stable."}, {"id": 240, "string": "18 Specifically, glove.840B.300d.zip."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 30}, {"section": "Motivation", "n": "2", "start": 31, "end": 48}, {"section": "Training Methods", "n": "3", "start": 49, "end": 53}, {"section": "Method 1: Hypothesis-only Classifier", "n": "3.1", "start": 54, "end": 68}, {"section": "Method 2: Negative Sampling", "n": "3.2", "start": 69, "end": 107}, {"section": "Synthetic Experiments", "n": "5.1", "start": 108, "end": 117}, {"section": "Results on existing NLI datasets", "n": "5.2", "start": 118, "end": 127}, {"section": "Analysis", "n": "6", "start": 128, "end": 130}, {"section": "Interplay with known biases", "n": "6.1", "start": 131, "end": 154}, {"section": "Stronger hyper-parameters", "n": "6.2", "start": 155, "end": 164}, {"section": "Fine-tuning on target datasets", "n": "6.3", "start": 165, "end": 179}, {"section": "Related Work", "n": "7", "start": 180, "end": 210}, {"section": "Conclusion", "n": "8", "start": 211, "end": 240}], "figures": [{"filename": "../figure/image/1116-Table2-1.png", "caption": "Table 2: Accuracy results of transferring representations to new datasets. In all cases the models are trained on SNLI. Left: baseline results on target test sets and differences between the proposed methods and the baseline. Right: test results on SNLI with the models that performed best on each target dataset\u2019s dev set. \u2206 are absolute differences between the method and the baseline on each target test set (left) or between the method and the baseline performance (84.22) on SNLI test (right). Black rectangles show relative changes in each column.", "page": 5, "bbox": {"x1": 111.83999999999999, "x2": 486.24, "y1": 62.4, "y2": 225.12}}, {"filename": "../figure/image/1116-Figure4-1.png", "caption": "Figure 4: Cross-validation results.", "page": 14, "bbox": {"x1": 306.71999999999997, "x2": 526.0799999999999, "y1": 61.44, "y2": 405.12}}, {"filename": "../figure/image/1116-Figure1-1.png", "caption": "Figure 1: Illustration of (a) the baseline NLI architecture, and our two proposed methods to remove hypothesis only-biases from an NLI model: (b) uses a hypothesis-only classifier, and (c) samples a random premise. Arrows correspond to the direction of propagation. Green or red arrows respectively mean that the gradient sign is kept as is or reversed. Gray arrow indicates that the gradient is not back-propagated - this only occurs in (c) when we randomly sample a premise, otherwise the gradient is back-propagated. f and g represent encoders and classifiers.", "page": 1, "bbox": {"x1": 100.8, "x2": 497.28, "y1": 61.44, "y2": 176.16}}, {"filename": "../figure/image/1116-Table3-1.png", "caption": "Table 3: Results with stronger hyper-parameters for Method 1 vs. the baseline. \u2206\u2019s are absolute differences.", "page": 6, "bbox": {"x1": 307.68, "x2": 525.12, "y1": 62.4, "y2": 220.32}}, {"filename": "../figure/image/1116-Figure2-1.png", "caption": "Figure 2: Accuracies of majority and hypothesis-only baselines on each dataset (x-axis). The datasets are generally ordered by increasing difference between a hypothesis-only model trained on the target dataset (green) compared to trained on SNLI (yellow).", "page": 6, "bbox": {"x1": 72.0, "x2": 291.36, "y1": 61.44, "y2": 176.16}}, {"filename": "../figure/image/1116-Figure3-1.png", "caption": "Figure 3: Effect of fine-tuning with the baseline and the proposed methods on MNLI (left) and SICK (right).", "page": 7, "bbox": {"x1": 72.0, "x2": 526.0799999999999, "y1": 61.44, "y2": 210.23999999999998}}, {"filename": "../figure/image/1116-Table1-1.png", "caption": "Table 1: Accuracies on the synthetic dataset, when training on the biased training set and evaluating on the unbiased test set. Darker boxes represent higher accuracies. \u2217 indicates failure to learn the biased training set; all other configurations learned the training set perfectly.", "page": 4, "bbox": {"x1": 105.6, "x2": 480.47999999999996, "y1": 62.4, "y2": 233.76}}]}