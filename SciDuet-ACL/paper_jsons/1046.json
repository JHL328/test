{"title": "Reasoning with Sarcasm by Reading In-between", "abstract": "Sarcasm is a sophisticated speech act which commonly manifests on social communities such as Twitter and Reddit. The prevalence of sarcasm on the social web is highly disruptive to opinion mining systems due to not only its tendency of polarity flipping but also usage of figurative language. Sarcasm commonly manifests with a contrastive theme either between positive-negative sentiments or between literal-figurative scenarios. In this paper, we revisit the notion of modeling contrast in order to reason with sarcasm. More specifically, we propose an attention-based neural model that looks inbetween instead of across, enabling it to explicitly model contrast and incongruity. We conduct extensive experiments on six benchmark datasets from Twitter, Reddit and the Internet Argument Corpus. Our proposed model not only achieves stateof-the-art performance on all datasets but also enjoys improved interpretability.", "text": [{"id": 0, "string": "Introduction Sarcasm, commonly defined as 'An ironical taunt used to express contempt', is a challenging NLP problem due to its highly figurative nature."}, {"id": 1, "string": "The usage of sarcasm on the social web is prevalent and can be frequently observed in reviews, microblogs (tweets) and online forums."}, {"id": 2, "string": "As such, the battle against sarcasm is also regularly cited as one of the key challenges in sentiment analysis and opinion mining applications (Pang et al., 2008) ."}, {"id": 3, "string": "Hence, it is both imperative and intuitive that effective sarcasm detectors can bring about numerous benefits to opinion mining applications."}, {"id": 4, "string": "Sarcasm is often associated to several linguistic phenomena such as (1) an explicit contrast between sentiments or (2) disparity between the conveyed emotion and the author's situation (context)."}, {"id": 5, "string": "Prior work has considered sarcasm to be a contrast between a positive and negative sentiment (Riloff et al., 2013) ."}, {"id": 6, "string": "Consider the following examples: 1."}, {"id": 7, "string": "I absolutely love to be ignored!"}, {"id": 8, "string": "2."}, {"id": 9, "string": "Yay!!!"}, {"id": 10, "string": "The best thing to wake up to is my neighbor's drilling."}, {"id": 11, "string": "3."}, {"id": 12, "string": "Perfect movie for people who can't fall asleep."}, {"id": 13, "string": "Given the examples, we make a crucial observation -Sarcasm relies a lot on the semantic relationships (and contrast) between individual words and phrases in a sentence."}, {"id": 14, "string": "For instance, the relationships between phrases {love, ignored}, {best, drilling} and {movie, asleep} (in the examples above) richly characterize the nature of sarcasm conveyed, i.e., word pairs tend to be contradictory and more often than not, express a juxtaposition of positive and negative terms."}, {"id": 15, "string": "This concept is also explored in (Joshi et al., 2015) in which the authors refer to this phenomena as 'incongruity'."}, {"id": 16, "string": "Hence, it would be useful to capture the relationships between selected word pairs in a sentence, i.e., looking in-between."}, {"id": 17, "string": "State-of-the-art sarcasm detection systems mainly rely on deep and sequential neural networks (Ghosh and Veale, 2016; Zhang et al., 2016) ."}, {"id": 18, "string": "In these works, compositional encoders such as gated recurrent units (GRU)  or long short-term memory (LSTM) (Hochreiter and Schmidhuber, 1997) are often employed, with the input document being parsed one word at a time."}, {"id": 19, "string": "This has several shortcomings for the sarcasm detection task."}, {"id": 20, "string": "Firstly, there is no explicit interaction between word pairs, which hampers its ability to explicitly model contrast, incongruity or juxtaposition of situations."}, {"id": 21, "string": "Secondly, it is difficult to capture long-range dependencies."}, {"id": 22, "string": "In this case, contrastive situations (or sentiments) which are commonplace in sarcastic language may be hard to detect with simple sequential models."}, {"id": 23, "string": "To overcome the weaknesses of standard sequential models such as recurrent neural networks, our work is based on the intuition that modeling intra-sentence relationships can not only improve classification performance but also pave the way for more explainable neural sarcasm detection methods."}, {"id": 24, "string": "In other words, our key intuition manifests itself in the form of an attention-based neural network."}, {"id": 25, "string": "While the key idea of most neural attention mechanisms is to focus on relevant words and sub-phrases, it merely looks across and does not explicitly capture word-word relationships."}, {"id": 26, "string": "Hence, it suffers from the same shortcomings as sequential models."}, {"id": 27, "string": "In this paper, our aim is to combine the effectiveness of state-of-the-art recurrent models while harnessing the intuition of looking in-between."}, {"id": 28, "string": "We propose a multi-dimensional intra-attention recurrent network that models intricate similarities between each word pair in the sentence."}, {"id": 29, "string": "In other words, our novel deep learning model aims to capture 'contrast' (Riloff et al., 2013) and 'incongruity' (Joshi et al., 2015) within end-to-end neural networks."}, {"id": 30, "string": "Our model can be thought of selftargeted co-attention (Xiong et al., 2016) , which allows our model to not only capture word-word relationships but also long-range dependencies."}, {"id": 31, "string": "Finally, we show that our model produces interpretable attention maps which aid in the explainability of model outputs."}, {"id": 32, "string": "To the best of our knowledge, our model is the first attention model that can produce explainable results in the sarcasm detection task."}, {"id": 33, "string": "Briefly, the prime contributions of this work can be summarized as follows: \u2022 We propose a new state-of-the-art method for sarcasm detection."}, {"id": 34, "string": "Our proposed model, the Multi-dimensional Intra-Attention Recurrent Network (MIARN) is strongly based on the intuition of compositional learning by leveraging intra-sentence relationships."}, {"id": 35, "string": "To the best of our knowledge, none of the existing state-of-the-art models considered exploiting intra-sentence relationships, solely relying on sequential composition."}, {"id": 36, "string": "\u2022 We conduct extensive experiments on multiple benchmarks from Twitter, Reddit and the Internet Argument Corpus."}, {"id": 37, "string": "Our proposed MIARN achieves highly competitive performance on all benchmarks, outperforming existing state-of-the-art models such as GRNN (Zhang et al., 2016) and CNN-LSTM-DNN (Ghosh and Veale, 2016) ."}, {"id": 38, "string": "Related Work Sarcasm is a complex linguistic phenomena that have long fascinated both linguists and NLP researchers."}, {"id": 39, "string": "After all, a better computational understanding of this complicated speech act could potentially bring about numerous benefits to existing opinion mining applications."}, {"id": 40, "string": "Across the rich history of research on sarcasm, several theories such as the Situational Disparity Theory (Wilson, 2006 ) and the Negation Theory (Giora, 1995) have emerged."}, {"id": 41, "string": "In these theories, a common theme is a motif that is strongly grounded in contrast, whether in sentiment, intention, situation or context."}, {"id": 42, "string": "(Riloff et al., 2013) propagates this premise forward, presenting an algorithm strongly based on the intuition that sarcasm arises from a juxtaposition of positive and negative situations."}, {"id": 43, "string": "Sarcasm Detection Naturally, many works in this area have treated the sarcasm detection task as a standard text classification problem."}, {"id": 44, "string": "An extremely comprehensive overview can be found at (Joshi et al., 2017) ."}, {"id": 45, "string": "Feature engineering approaches were highly popular, exploiting a wide diverse range of features such as syntactic patterns (Tsur et al., 2010) , sentiment lexicons (Gonz\u00e1lez-Ib\u00e1nez et al., 2011), ngram (Reyes et al., 2013) , word frequency (Barbieri et al., 2014), word shape and pointedness features (Pt\u00e1\u010dek et al., 2014) , readability and flips (Rajadesingan et al., 2015) , etc."}, {"id": 46, "string": "Notably, there have been quite a reasonable number of works that propose features based on similarity and contrast."}, {"id": 47, "string": "(Hern\u00e1ndez-Far\u00edas et al., 2015) measured the Wordnet based semantic similarity between words."}, {"id": 48, "string": "(Joshi et al., 2015) proposed a framework based on explicit and implicit incongruity, utilizing features based on positive-negative patterns."}, {"id": 49, "string": "(Joshi et al., 2016) proposed similarity features based on word embeddings."}, {"id": 50, "string": "Deep Learning for Sarcasm Detection Deep learning based methods have recently garnered considerable interest in many areas of NLP research."}, {"id": 51, "string": "In our problem domain, (Zhang et al., 2016) proposed a recurrent-based model with a gated pooling mechanism for sarcasm detection on Twitter."}, {"id": 52, "string": "(Ghosh and Veale, 2016) proposed a convolutional long-short-term memory network (CNN-LSTM-DNN) that achieves state-of-the-art performance."}, {"id": 53, "string": "While our work focuses on document-only sarcasm detection, several notable works have proposed models that exploit personality information (Ghosh and Veale, 2017) and user context (Amir et al., 2016) ."}, {"id": 54, "string": "Novel methods for sarcasm detection such as gaze / cognitive features (Mishra et al., 2016 (Mishra et al., , 2017 have also been explored."}, {"id": 55, "string": "(Peled and Reichart, 2017) proposed a novel framework based on neural machine translation to convert a sequence from sarcastic to non-sarcastic."}, {"id": 56, "string": "(Felbo et al., 2017) proposed a layer-wise training scheme that utilizes emoji-based distant supervision for sentiment analysis and sarcasm detection tasks."}, {"id": 57, "string": "Attention Models for NLP In the context of NLP, the key idea of neural attention is to soft select a sequence of words based on their relative importance to the task at hand."}, {"id": 58, "string": "Early innovations in attentional paradigms mainly involve neural machine translation (Luong et al., 2015; for aligning sequence pairs."}, {"id": 59, "string": "Attention is also commonplace in many NLP applications such as sentiment classification (Chen et al., 2016; Yang et al., 2016) , aspect-level sentiment analysis (Tay et al., 2018s, 2017b Chen et al., 2017) and entailment classification (Rockt\u00e4schel et al., 2015) ."}, {"id": 60, "string": "Co-attention / Bi-Attention (Xiong et al., 2016; Seo et al., 2016) is a form of pairwise attention mechanism that was proposed to model query-document pairs."}, {"id": 61, "string": "Intraattention can be interpreted as a self-targetted coattention and is seeing a lot promising results in many recent works (Vaswani et al., 2017; Parikh et al., 2016; Tay et al., 2017a; Shen et al., 2017) ."}, {"id": 62, "string": "The key idea is to model a sequence against itself, learning to attend while capturing long term dependencies and word-word level interactions."}, {"id": 63, "string": "To the best of our knowledge, our work is not only the first work that only applies intra-attention to sarcasm detection but also the first attention model for sarcasm detection."}, {"id": 64, "string": "Our Proposed Approach In this section, we describe our proposed model."}, {"id": 65, "string": "Figure 1 illustrates our overall model architecture."}, {"id": 66, "string": "Input Encoding Layer Our model accepts a sequence of one-hot encoded vectors as an input."}, {"id": 67, "string": "Each one-hot encoded vector corresponds to a single word in the vocabulary."}, {"id": 68, "string": "In the input encoding layer, each one-hot vector is converted into a low-dimensional vector representation (word embedding)."}, {"id": 69, "string": "The word embeddings are parameterized by an embedding layer W \u2208 R n\u00d7|V | ."}, {"id": 70, "string": "As such, the output of this layer is a sequence of word embeddings, i.e., {w 1 , w 2 , \u00b7 \u00b7 \u00b7 w } where is a predefined maximum sequence length."}, {"id": 71, "string": "Multi-dimensional Intra-Attention In this section, we describe our multi-dimensional intra-attention mechanism for sarcasm detection."}, {"id": 72, "string": "We first begin by describing the standard single-dimensional intra-attention."}, {"id": 73, "string": "The multidimensional adaptation will be introduced later in this section."}, {"id": 74, "string": "The key idea behind this layer is to look in-between, i.e., modeling the semantics between each word in the input sequence."}, {"id": 75, "string": "We first begin by modeling the relationship of each word pair in the input sequence."}, {"id": 76, "string": "A simple way to achieve this is to use a linear 1 transformation layer to project the concatenation of each word embedding pair into a scalar score as follows: s ij = W a ([w i ; w j ]) + b a (1) where W a \u2208 R 2n\u00d71 , b a \u2208 R are the parameters of this layer."}, {"id": 77, "string": "[."}, {"id": 78, "string": "; .]"}, {"id": 79, "string": "is the vector concatenation operator and s ij is a scalar representing the affinity score between word pairs (w i , w j )."}, {"id": 80, "string": "We can easily observe that s is a symmetrical matrix of \u00d7 dimensions."}, {"id": 81, "string": "In order to learn attention vector a, we apply a row-wise max-pooling operator on matrix s. a = sof tmax(max row s) (2) where a \u2208 R is a vector representing the learned intra-attention weights."}, {"id": 82, "string": "Then, the vector a is employed to learn weighted representation of {w 1 , w 2 \u00b7 \u00b7 \u00b7 w } as follows: v a = i=1 w i a i (3) where v \u2208 R n is the intra-attentive representation of the input sequence."}, {"id": 83, "string": "While other choices of pooling operators may be also employed (e.g., mean-pooling over max-pooling), the choice of max-pooling is empirically motivated."}, {"id": 84, "string": "Intuitively, this attention layer learns to pay attention based on a word's largest contribution to all words in the sequence."}, {"id": 85, "string": "Since our objective is to highlight words that might contribute to the contrastive theories of sarcasm, a more discriminative pooling operator is desirable."}, {"id": 86, "string": "Notably, we also mask values of s where i = j such that we do not allow the relationship scores of a word with respect to itself to influence the overall attention weights."}, {"id": 87, "string": "Furthermore, our network can be considered as an 'inner' adaptation of neural attention, modeling intra-sentence relationships between the raw word representations instead of representations that have been compositionally manipulated."}, {"id": 88, "string": "This allows word-to-word similarity to be modeled 'as it is' and not be influenced by composition."}, {"id": 89, "string": "For example, when using the outputs of a compositional encoder (e.g., LSTM), matching words n and n + 1 might not be meaningful since they would be relatively similar in terms of semantic composition."}, {"id": 90, "string": "For relatively short documents (such as tweets), it is also intuitive that attention typically focuses on the last hidden representation."}, {"id": 91, "string": "Intuitively, the relationships between two words is often not straightforward."}, {"id": 92, "string": "Words are complex and often hold more than one meanings (or word senses)."}, {"id": 93, "string": "As such, it might be beneficial to model multiple views between two words."}, {"id": 94, "string": "This can be modeled by representing the word pair interaction with a vector instead of a scalar."}, {"id": 95, "string": "As such, we propose a multi-dimensional adaptation of the intra-attention mechanism."}, {"id": 96, "string": "The key idea here is that each word pair is projected down to a lowdimensional vector before we compute the affinity score, which allows it to not only capture one view (one scalar) but also multiple views."}, {"id": 97, "string": "A modification to Equation (1) constitutes our Multi-Dimensional Intra-Attention variant."}, {"id": 98, "string": "s ij = W p (ReLU (W q ([w i ; w j ]) + b q )) + b p (4) where W q \u2208 R n\u00d7k , W p \u2208 R k\u00d71 , b q \u2208 R k , b p \u2208 R are the parameters of this layer."}, {"id": 99, "string": "The final intraattentive representation is then learned with Equation (2) and Equation (3) which we do not repeat here for the sake of brevity."}, {"id": 100, "string": "Long Short-Term Memory Encoder While we are able to simply use the learned representation v for prediction, it is clear that v does not encode compositional information and may miss out on important compositional phrases such as 'not happy'."}, {"id": 101, "string": "Clearly, our intra-attention mechanism simply considers a word-by-word interaction and does not model the input document sequentially."}, {"id": 102, "string": "As such, it is beneficial to use a separate compositional encoder for this purpose, i.e., learning compositional representations."}, {"id": 103, "string": "To this end, we employ the standard Long Short-Term Memory (LSTM) encoder."}, {"id": 104, "string": "The output of an LSTM encoder at each time-step can be briefly defined as: h i = LSTM(w, i), \u2200i \u2208 [1, ."}, {"id": 105, "string": "."}, {"id": 106, "string": ". ]"}, {"id": 107, "string": "(5) where represents the maximum length of the sequence and h i \u2208 R d is the hidden output of the LSTM encoder at time-step i. d is the size of the hidden units of the LSTM encoder."}, {"id": 108, "string": "LSTM encoders are parameterized by gating mechanisms learned via nonlinear transformations."}, {"id": 109, "string": "Since LSTMs are commonplace in standard NLP applications, we omit the technical details for the sake of brevity."}, {"id": 110, "string": "Finally, to obtain a compositional representation of the input document, we use v c = h which is the last hidden output of the LSTM encoder."}, {"id": 111, "string": "Note that the inputs to the LSTM encoder are the word embeddings right after the input encoding layer and not the output of the intraattention layer."}, {"id": 112, "string": "We found that applying an LSTM on the intra-attentively scaled representations do not yield any benefits."}, {"id": 113, "string": "Prediction Layer The inputs to the final prediction layer are two representations, namely (1) the intra-attentive representation (v a \u2208 R n ) and (2) the compositional representation (v c \u2208 R d )."}, {"id": 114, "string": "This layer learns a joint representation of these two views using a nonlinear projection layer."}, {"id": 115, "string": "v = ReLU (W z ([v a ; v c ]) + b z ) (6) where W z \u2208 R (d+n)\u00d7d and b z \u2208 R d ."}, {"id": 116, "string": "Finally, we pass v into a Softmax classification layer."}, {"id": 117, "string": "y = Sof tmax(W f v + b f ) (7) where W f \u2208 R d\u00d72 , b f \u2208 R 2 are the parameters of this layer.\u0177 \u2208 R 2 is the output layer of our proposed model."}, {"id": 118, "string": "Optimization and Learning Our network is trained end-to-end, optimizing the standard binary cross-entropy loss function."}, {"id": 119, "string": "J = \u2212 N i=1 [yi log\u0177i + (1 \u2212 yi) log(1 \u2212\u0177i)] + R (8) where J is the cost function,\u0177 is the output of the network, R = ||\u03b8|| L2 is the L2 regularization and \u03bb is the weight of the regularizer."}, {"id": 120, "string": "Empirical Evaluation In this section, we describe our experimental setup and results."}, {"id": 121, "string": "Our experiments were designed to answer the following research questions (RQs)."}, {"id": 122, "string": "\u2022 RQ1 -Does our proposed approach outperform existing state-of-the-art models?"}, {"id": 123, "string": "\u2022 RQ2 -What are the impacts of some of the architectural choices of our model?"}, {"id": 124, "string": "How much does intra-attention contribute to the model performance?"}, {"id": 125, "string": "Is the Multi-Dimensional adaptation better than the Single-Dimensional adaptation?"}, {"id": 126, "string": "\u2022 RQ3 -What can we interpret from the intraattention layers?"}, {"id": 127, "string": "Does this align with our hypothesis about looking in-between and modeling contrast?"}, {"id": 128, "string": "Datasets We conduct our experiments on six publicly available benchmark datasets which span across three well-known sources."}, {"id": 129, "string": "\u2022 Tweets -Twitter 2 is a microblogging platform which allows users to post statuses of less than 140 characters."}, {"id": 130, "string": "We use two collections for sarcasm detection on tweets."}, {"id": 131, "string": "More specifically, we use the dataset obtained from (1) (Pt\u00e1\u010dek et al., 2014) in which tweets are trained via hashtag based semisupervised learning, i.e., hashtags such as #not, #sarcasm and #irony are marked as sarcastic tweets and (2) (Riloff et al., 2013) in which Tweets are hand annotated and manually checked for sarcasm."}, {"id": 132, "string": "For both datasets, we retrieve."}, {"id": 133, "string": "Tweets using the Twitter API using the provided tweet IDs."}, {"id": 134, "string": "\u2022 Reddit -Reddit 3 is a highly popular social forum and community."}, {"id": 135, "string": "Similar to Tweets, sarcastic posts are obtained via the tag '/s' which are marked by the authors themselves."}, {"id": 136, "string": "We use two Reddit datasets which are obtained from the subreddits /r/movies and /r/technology respectively."}, {"id": 137, "string": "Datasets are subsets from (Khodak et al., 2017) ."}, {"id": 138, "string": "\u2022 Debates -We use two datasets 4 from the Internet Argument Corpus (IAC) (Lukin and Walker, 2017) which have been hand annotated for sarcasm."}, {"id": 139, "string": "This dataset, unlike the first two, is mainly concerned with long text and provides a diverse comparison from the other datasets."}, {"id": 140, "string": "The IAC corpus was designed for research on political debates on online forums."}, {"id": 141, "string": "We use the V1 and V2 versions of the sarcasm corpus which are denoted as IAC-V1 and IAC-V2 respectively."}, {"id": 142, "string": "The statistics of the datasets used in our experiments is reported in Table 1 ."}, {"id": 143, "string": "Compared Methods We compare our proposed model with the following algorithms."}, {"id": 144, "string": "\u2022 NBOW is a simple neural bag-of-words baseline that sums all the word embeddings and passes the summed vector into a simple logistic regression layer."}, {"id": 145, "string": "\u2022 CNN is a vanilla Convolutional Neural Network with max-pooling."}, {"id": 146, "string": "CNNs are considered as compositional encoders that capture n-gram features by parameterized sliding windows."}, {"id": 147, "string": "The filter width is 3 and number of filters f = 100."}, {"id": 148, "string": "\u2022 LSTM is a vanilla Long Short-Term Memory Network."}, {"id": 149, "string": "The size of the LSTM cell is set to d = 100."}, {"id": 150, "string": "\u2022 ATT-LSTM (Attention-based LSTM) is a LSTM model with a neural attention mechanism applied to all the LSTM hidden outputs."}, {"id": 151, "string": "We use a similar adaptation to (Yang et al., 2016) , albeit only at the document-level."}, {"id": 152, "string": "\u2022 GRNN (Gated Recurrent Neural Network) is a Bidirectional Gated Recurrent Unit (GRU) model that was proposed for sarcasm detection by (Zhang et al., 2016) ."}, {"id": 153, "string": "GRNN uses a gated pooling mechanism to aggregate the hidden representations from a standard BiGRU model."}, {"id": 154, "string": "Since we only compare on document-level sarcasm detection, we do not use the variant of GRNN that exploits user context."}, {"id": 155, "string": "\u2022 CNN-LSTM-DNN (Convolutional LSTM + Deep Neural Network), proposed by (Ghosh and Veale, 2016) , is the state-of-theart model for sarcasm detection."}, {"id": 156, "string": "This model is a combination of a CNN, LSTM and Deep Neural Network via stacking."}, {"id": 157, "string": "It stacks two layers of 1D convolution with 2 LSTM layers."}, {"id": 158, "string": "The output passes through a deep neural network (DNN) for prediction."}, {"id": 159, "string": "Both CNN-LSTM-DNN (Ghosh and Veale, 2016) and GRNN (Zhang et al., 2016) are state-ofthe-art models for document-level sarcasm detection and have outperformed numerous neural and non-neural baselines."}, {"id": 160, "string": "In particular, both works have well surpassed feature-based models (Support Vector Machines, etc."}, {"id": 161, "string": "), as such we omit comparisons for the sake of brevity and focus comparisons with recent neural models instead."}, {"id": 162, "string": "Moreover, since our work focuses only on document-level sarcasm detection, we do not compare against models that use external information such as user profiles, context, personality information (Ghosh and Veale, 2017) or emoji-based distant supervision (Felbo et al., 2017) ."}, {"id": 163, "string": "For our model, we report results on both multi-dimensional and single-dimensional intraattention."}, {"id": 164, "string": "The two models are named as MIARN and SIARN respectively."}, {"id": 165, "string": "Implementation Details and Metrics We adopt standard the evaluation metrics for the sarcasm detection task, i.e., macro-averaged F1 and accuracy score."}, {"id": 166, "string": "Additionally, we also report precision and recall scores."}, {"id": 167, "string": "All deep learning models are implemented using Tensor-Flow (Abadi et al., 2015) and optimized on a NVIDIA GTX1070 GPU."}, {"id": 168, "string": "Text is preprocessed with NLTK 5 's Tweet tokenizer."}, {"id": 169, "string": "Words that only appear once in the entire corpus are removed and marked with the UNK token."}, {"id": 170, "string": "Document lengths are truncated at 40, 20, 80 tokens for Twitter, Reddit and Debates dataset respectively."}, {"id": 171, "string": "Mentions of other users on the Twitter dataset are replaced by '@USER'."}, {"id": 172, "string": "Documents with URLs (i.e., containing 'http') are removed from the corpus."}, {"id": 173, "string": "Documents with less than 5 tokens are also removed."}, {"id": 174, "string": "The learning optimizer used is the RMSProp with an initial learning rate of 0.001."}, {"id": 175, "string": "The L2 regularization is set to 10 \u22128 ."}, {"id": 176, "string": "We initialize the word embedding layer with GloVe (Pennington et al., 2014) ."}, {"id": 177, "string": "We use the GloVe model trained on 2B Tweets for the Tweets and Reddit dataset."}, {"id": 178, "string": "The Glove model trained on Common Crawl is used for the Debates corpus."}, {"id": 179, "string": "The size of the word embeddings is fixed at d = 100 and are fine-tuned during training."}, {"id": 180, "string": "In all experiments, we use a development set to select the best hyperparameters."}, {"id": 181, "string": "Each model is trained for a total of 30 epochs and the model is saved each time the performance Tweets (Pt\u00e1\u010dek et al., 2014) Tweets (Riloff et al., 2013 on the development set is topped."}, {"id": 182, "string": "The batch size is tuned amongst {128, 256, 512} for all datasets."}, {"id": 183, "string": "The only exception is the Tweets dataset from (Riloff et al., 2013) , in which a batch size of 16 is used in lieu of the much smaller dataset size."}, {"id": 184, "string": "For fair comparison, all models have the same hidden representation size and are set to 100 for both recurrent and convolutional based models (i.e., number of filters)."}, {"id": 185, "string": "For MIARN, the size of intraattention hidden representation is tuned amongst {4, 8, 10, 20}."}, {"id": 186, "string": "Experimental Results Table 2, Table 3 and Table 4 reports a performance comparison of all benchmarked models on the Tweets, Reddit and Debates datasets respectively."}, {"id": 187, "string": "We observe that our proposed SIARN and MIARN models achieve the best results across all six datasets."}, {"id": 188, "string": "The relative improvement differs across domain and datasets."}, {"id": 189, "string": "On the Tweets dataset from (Pt\u00e1\u010dek et al., 2014) , MIARN achieves about \u2248 2% \u2212 2.2% improvement in terms of F1 and accuracy score when compared against the best baseline."}, {"id": 190, "string": "On the other Tweets dataset from (Riloff et al., 2013) , the performance gain of our proposed model is larger, i.e., 3% \u2212 5% improvement on average over most baselines."}, {"id": 191, "string": "Our proposed SIARN and MIARN models achieve very competitive performance on the Reddit datasets, with an average of \u2248 2% margin improvement over the best baselines."}, {"id": 192, "string": "Notably, the baselines we compare against are extremely competitive state-of-the-art neural network models."}, {"id": 193, "string": "This further reinforces the effectiveness of our proposed approach."}, {"id": 194, "string": "Additionally, the performance improvement on Debates (long text) is significantly larger than short text (i.e., Twitter and Reddit)."}, {"id": 195, "string": "For example, MI-ARN outperforms GRNN and CNN-LSTM-DNN by \u2248 8% \u2212 10% on both IAC-V1 and IAC-V2."}, {"id": 196, "string": "At this note, we can safely put RQ1 to rest."}, {"id": 197, "string": "Overall, the performance of MIARN is often marginally better than SIARN (with some exceptions, e.g., Tweets dataset from (Riloff et al., 2013) )."}, {"id": 198, "string": "We believe that this is attributed to the fact that more complex word-word relationships can be learned by using multi-dimensional values instead of single-dimensional scalars."}, {"id": 199, "string": "The performance brought by our additional intra-attentive representations can be further observed by comparing against the vanilla LSTM model."}, {"id": 200, "string": "Clearly, removing the intra-attention network reverts our model to the standard LSTM."}, {"id": 201, "string": "The performance improvements are encouraging, leading to almost 10% improvement in terms of F1 and accuracy."}, {"id": 202, "string": "On datasets with short text, the performance improvement is often a modest \u2248 2% \u2212 3% (RQ2)."}, {"id": 203, "string": "Notably, our proposed models also perform much better on long text, which can be attributed to the intra-attentive representations explicitly modeling long range dependencies."}, {"id": 204, "string": "Intuitively, this is problematic for models that only capture sequential dependencies (e.g., word by word)."}, {"id": 205, "string": "Finally, the relative performance of competitor methods are as expected."}, {"id": 206, "string": "NBOW performs the worse, since it is just a naive bag-of-words model without any compositional or sequential information."}, {"id": 207, "string": "On short text, LSTMs are overall better than CNNs."}, {"id": 208, "string": "However, this trend is reversed on long text (i.e., Debates) since the LSTM model may be overburdened by overly long sequences."}, {"id": 209, "string": "On short text, we also found that attention (or the gated pooling mechanism from GRNN) did not really help make any significant improvements over the vanilla LSTM model and a qualitative explanation to why this is so is deferred to the next section."}, {"id": 210, "string": "However, attention helps for long text (such as debates), resulting in Attention LSTMs becoming the strongest baseline on the Debates datasets."}, {"id": 211, "string": "However, our proposed intra-attentive model is both effective on short text and long text, outperforming Attention LSTMs consistently on all datasets."}, {"id": 212, "string": "In-depth Model Analysis In this section, we present an in-depth analysis of our proposed model."}, {"id": 213, "string": "More specifically, we not only aim to showcase the interpretability of our model but also explain how representations are formed."}, {"id": 214, "string": "More specifically, we test our model (trained on Tweets dataset by (Pt\u00e1\u010dek et al., 2014) ) on two examples."}, {"id": 215, "string": "We extract the attention maps of three models, namely MIARN, Attention LSTM (ATT-LSTM) and applying Attention mechanism directly on the word embeddings without using a LSTM encoder (ATT-RAW)."}, {"id": 216, "string": "Table 5 shows the visualization of the attention maps."}, {"id": 217, "string": "In the first example (true label), we notice that the attention maps of MIARN are focusing on the words 'love' and 'ignored'."}, {"id": 218, "string": "This is in concert with our intuition about modeling contrast and incongruity."}, {"id": 219, "string": "On the other hand, both ATT-LSTM and ATT-RAW learn very different attention maps."}, {"id": 220, "string": "As for ATT-LSTM, the attention weight is focused completely on the last representation -the token '!!'."}, {"id": 221, "string": "Additionally, we also observed that this is true for many examples in the Tweets and Reddit dataset."}, {"id": 222, "string": "We believe that this is the reason why standard neural attention does not help as what the attention mechanism is learning is to select the last representation (i.e., vanilla LSTM)."}, {"id": 223, "string": "Without the LSTM encoder, the attention weights focus on 'love' but not 'ignored'."}, {"id": 224, "string": "This fails to capture any concept of contrast or incongruity."}, {"id": 225, "string": "Next, we consider the false labeled example."}, {"id": 226, "string": "This time, the attention maps of MIARN are not as distinct as before."}, {"id": 227, "string": "However, they focus on sentiment-bearing words, composing the words 'ignored sucks' to form the majority of the intraattentive representation."}, {"id": 228, "string": "This time, passing the vector made up of 'ignored sucks' allows the subsequent layers to recognize that there is no contrasting situation or sentiment."}, {"id": 229, "string": "Similarly, ATT-LSTM focuses on the last word time which is totally non-interpretable."}, {"id": 230, "string": "On the other hand, ATT-RAW focuses on relatively non-meaningful words such as 'big'."}, {"id": 231, "string": "Overall, we analyzed two cases (positive and negative labels) and found that MIARN produces very explainable attention maps."}, {"id": 232, "string": "In general, we found that MIARN is able to identify contrast and incongruity in sentences, allowing our model to better detect sarcasm."}, {"id": 233, "string": "This is facilitated by modeling intra-sentence relationships."}, {"id": 234, "string": "Notably, the standard vanilla attention is not explainable or interpretable."}, {"id": 235, "string": "Conclusion Based on the intuition of intra-sentence similarity (i.e., looking in-between), we proposed a new neural network architecture for sarcasm detection."}, {"id": 236, "string": "Our network incorporates a multi-dimensional intra-attention component that learns an intraattentive representation of the sentence, enabling it to detect contrastive sentiment, situations and incongruity."}, {"id": 237, "string": "Extensive experiments over six public benchmarks confirm the empirical effectiveness of our proposed model."}, {"id": 238, "string": "Our proposed MI-ARN model outperforms strong state-of-the-art baselines such as GRNN and CNN-LSTM-DNN."}, {"id": 239, "string": "Analysis of the intra-attention scores shows that our model learns highly interpretable attention weights, paving the way for more explainable neural sarcasm detection methods."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 37}, {"section": "Related Work", "n": "2", "start": 38, "end": 42}, {"section": "Sarcasm Detection", "n": "2.1", "start": 43, "end": 49}, {"section": "Deep Learning for Sarcasm Detection", "n": "2.2", "start": 50, "end": 56}, {"section": "Attention Models for NLP", "n": "2.3", "start": 57, "end": 63}, {"section": "Our Proposed Approach", "n": "3", "start": 64, "end": 65}, {"section": "Input Encoding Layer", "n": "3.1", "start": 66, "end": 70}, {"section": "Multi-dimensional Intra-Attention", "n": "3.2", "start": 71, "end": 99}, {"section": "Long Short-Term Memory Encoder", "n": "3.3", "start": 100, "end": 112}, {"section": "Prediction Layer", "n": "3.4", "start": 113, "end": 117}, {"section": "Optimization and Learning", "n": "3.5", "start": 118, "end": 119}, {"section": "Empirical Evaluation", "n": "4", "start": 120, "end": 127}, {"section": "Datasets", "n": "4.1", "start": 128, "end": 142}, {"section": "Compared Methods", "n": "4.2", "start": 143, "end": 164}, {"section": "Implementation Details and Metrics", "n": "4.3", "start": 165, "end": 185}, {"section": "Experimental Results", "n": "4.4", "start": 186, "end": 211}, {"section": "In-depth Model Analysis", "n": "4.5", "start": 212, "end": 234}, {"section": "Conclusion", "n": "5", "start": 235, "end": 239}], "figures": [{"filename": "../figure/image/1046-Table1-1.png", "caption": "Table 1: Statistics of datasets used in our experiments.", "page": 5, "bbox": {"x1": 72.0, "x2": 291.36, "y1": 62.879999999999995, "y2": 133.92}}, {"filename": "../figure/image/1046-Table5-1.png", "caption": "Table 5: Visualization of normalized attention weights on three different attention models (Best viewed in color). The intensity denotes the strength of the attention weight on the word.", "page": 7, "bbox": {"x1": 312.96, "x2": 519.36, "y1": 196.79999999999998, "y2": 269.28}}, {"filename": "../figure/image/1046-Figure1-1.png", "caption": "Figure 1: High level overview of our proposed MIARN architecture. MIARN learns two representations, one based on intra-sentence relationships (intra-attentive) and another based on sequential composition (LSTM). Both views are used for prediction.", "page": 3, "bbox": {"x1": 309.12, "x2": 525.6, "y1": 63.839999999999996, "y2": 375.84}}, {"filename": "../figure/image/1046-Table4-1.png", "caption": "Table 4: Experimental results on Debates datasets. Best result in is boldface and second best is underlined. Best performing baseline is in italics.", "page": 6, "bbox": {"x1": 94.56, "x2": 502.08, "y1": 362.88, "y2": 466.08}}, {"filename": "../figure/image/1046-Table2-1.png", "caption": "Table 2: Experimental Results on Tweets datasets. Best result in is boldface and second best is underlined. Best performing baseline is in italics.", "page": 6, "bbox": {"x1": 94.56, "x2": 502.08, "y1": 62.879999999999995, "y2": 165.12}}, {"filename": "../figure/image/1046-Table3-1.png", "caption": "Table 3: Experimental results on Reddit datasets. Best result in is boldface and second best is underlined. Best performing baseline is in italics.", "page": 6, "bbox": {"x1": 94.56, "x2": 503.03999999999996, "y1": 212.64, "y2": 315.36}}]}