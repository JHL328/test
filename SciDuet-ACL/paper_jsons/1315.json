{"title": "Distilling Knowledge for Search-based Structured Prediction", "abstract": "Many natural language processing tasks can be modeled into structured prediction and solved as a search problem. In this paper, we distill an ensemble of multiple models trained with different initialization into a single model. In addition to learning to match the ensemble's probability output on the reference states, we also use the ensemble to explore the search space and learn from the encountered states in the exploration. Experimental results on two typical search-based structured prediction tasks -transition-based dependency parsing and neural machine translation show that distillation can effectively improve the single model's performance and the final model achieves improvements of 1.32 in LAS and 2.65 in BLEU score on these two tasks respectively over strong baselines and it outperforms the greedy structured prediction models in previous literatures.", "text": [{"id": 0, "string": "Introduction Search-based structured prediction models the generation of natural language structure (part-ofspeech tags, syntax tree, translations, semantic graphs, etc.)"}, {"id": 1, "string": "as a search problem (Collins and Roark, 2004; Liang et al., 2006; Zhang and Clark, 2008; Huang et al., 2012; Sutskever et al., 2014; Goodman et al., 2016) ."}, {"id": 2, "string": "It has drawn a lot of research attention in recent years thanks to its competitive performance on both accuracy and running time."}, {"id": 3, "string": "A stochastic policy that controls the whole search process is usually learned by imitating a reference policy."}, {"id": 4, "string": "The imitation is usually addressed as training a classifier to predict the ref- erence policy's search action on the encountered states when performing the reference policy."}, {"id": 5, "string": "Such imitation process can sometimes be problematic."}, {"id": 6, "string": "One problem is the ambiguities of the reference policy, in which multiple actions lead to the optimal structure but usually, only one is chosen as training instance (Goldberg and Nivre, 2012 )."}, {"id": 7, "string": "Another problem is the discrepancy between training and testing, in which during the test phase, the learned policy enters non-optimal states whose search action is never learned (Ross and Bagnell, 2010; Ross et al., 2011) ."}, {"id": 8, "string": "All these problems harm the generalization ability of search-based structured prediction and lead to poor performance."}, {"id": 9, "string": "Previous works tackle these problems from two directions."}, {"id": 10, "string": "To overcome the ambiguities in data, techniques like ensemble are often adopted (Di-Dependency parsing Neural machine translation st (\u03c3, \u03b2, A), where \u03c3 is a stack, \u03b2 is a buffer, and A is the partially generated tree ($, y1, y2, ..., yt) , where $ is the start symbol."}, {"id": 11, "string": "A {SHIFT, LEFT, RIGHT} pick one word w from the target side vocabulary W. S0 {([ ], [1, .., n] , \u2205)} {($)} ST { ([ROOT] , [ ], A)} {($, y1, y2, ..., ym)} T (s, a) \u2022 SHIFT: (\u03c3, j|\u03b2) \u2192 (\u03c3|j, \u03b2) ($, y1, y2, ..., yt) \u2192 ($, y1, y2, ..., yt, yt+1 = w) \u2022 LEFT: (\u03c3|i j, \u03b2) \u2192 (\u03c3|j, \u03b2) A \u2190 A \u222a {i \u2190 j} \u2022 RIGHT: (\u03c3|i j, \u03b2) \u2192 (\u03c3|i, \u03b2) A \u2190 A \u222a {i \u2192 j} Table 1 : The search-based structured prediction view of transition-based dependency parsing (Nivre, 2008) and neural machine translation (Sutskever et al., 2014 (Sutskever et al., )."}, {"id": 12, "string": "etterich, 2000 ."}, {"id": 13, "string": "To mitigate the discrepancy, exploration is encouraged during the training process (Ross and Bagnell, 2010; Ross et al., 2011; Goldberg and Nivre, 2012; Bengio et al., 2015; Goodman et al., 2016) ."}, {"id": 14, "string": "In this paper, we propose to consider these two problems in an integrated knowledge distillation manner (Hinton et al., 2015) ."}, {"id": 15, "string": "We distill a single model from the ensemble of several baselines trained with different initialization by matching the ensemble's output distribution on the reference states."}, {"id": 16, "string": "We also let the ensemble randomly explore the search space and learn the single model to mimic ensemble's distribution on the encountered exploration states."}, {"id": 17, "string": "Combing the distillation from reference and exploration further improves our single model's performance."}, {"id": 18, "string": "The workflow of our method is shown in Figure 1 ."}, {"id": 19, "string": "We conduct experiments on two typical searchbased structured prediction tasks: transition-based dependency parsing and neural machine translation."}, {"id": 20, "string": "The results of both these two experiments show the effectiveness of our knowledge distillation method by outperforming strong baselines."}, {"id": 21, "string": "In the parsing experiments, an improvement of 1.32 in LAS is achieved and in the machine translation experiments, such improvement is 2.65 in BLEU."}, {"id": 22, "string": "Our model also outperforms the greedy models in previous works."}, {"id": 23, "string": "Major contributions of this paper include: \u2022 We study the knowledge distillation in search-based structured prediction and propose to distill the knowledge of an ensemble into a single model by learning to match its distribution on both the reference states ( \u00a73.2) and exploration states encountered when using the ensemble to explore the search space ( \u00a73.3)."}, {"id": 24, "string": "A further combination of these two methods is also proposed to improve the performance ( \u00a73.4)."}, {"id": 25, "string": "\u2022 We conduct experiments on two search-based structured prediction problems: transitionbased dependency parsing and neural machine translation."}, {"id": 26, "string": "In both these two problems, the distilled model significantly improves over strong baselines and outperforms other greedy structured prediction ( \u00a74.2)."}, {"id": 27, "string": "Comprehensive analysis empirically shows the feasibility of our distillation method ( \u00a74.3)."}, {"id": 28, "string": "Background Search-based Structured Prediction Structured prediction maps an input x = (x 1 , x 2 , ..., x n ) to its structural output y = (y 1 , y 2 , ..., y m ), where each component of y has some internal dependencies."}, {"id": 29, "string": "Search-based structured prediction (Collins and Roark, 2004; Daum\u00e9 III et al., 2005; Daum\u00e9 III et al., 2009; Ross and Bagnell, 2010; Ross et al., 2011; Doppa et al., 2014; Vlachos and Clark, 2014; Chang et al., 2015) models the generation of the structure as a search problem and it can be formalized as a tuple (S, A, T (s, a), S 0 , S T ), in which S is a set of states, A is a set of actions, T is a function that maps S \u00d7 A \u2192 S, S 0 is a set of initial states, and S T is a set of terminal states."}, {"id": 30, "string": "Starting from an initial state s 0 \u2208 S 0 , the structured prediction model repeatably chooses an action a t \u2208 A by following a policy \u03c0(s) and applies a t to s t and enter a new state s t+1 as s t+1 \u2190 T (s t , a t ), until a final state s T \u2208 S T is achieved."}, {"id": 31, "string": "Several natural language structured prediction problems can be modeled under the search-based framework including dependency parsing (Nivre, 2008) and neural machine translation (Liang et al., 2006; Sutskever et al., 2014) ."}, {"id": 32, "string": "Table 1 shows the search-based structured prediction view of these two problems."}, {"id": 33, "string": "In the data-driven settings, \u03c0(s) controls the whole search process and is usually parameterized by a classifier p(a | s) which outputs the proba-Algorithm 1: Generic learning algorithm for search-based structured prediction."}, {"id": 34, "string": "Input: training data: {x (n) , y (n) } N n=1 ; the reference policy: \u03c0 R (s, y)."}, {"id": 35, "string": "Output: classifier p(a|s)."}, {"id": 36, "string": "1 D \u2190 \u2205; 2 for n \u2190 1...N do 3 t \u2190 0; 4 s t \u2190 s 0 (x (n) ); 5 while s t / \u2208 S T do 6 a t \u2190 \u03c0 R (s t , y (n) ); 7 D \u2190 D \u222a {s t }; 8 s t+1 \u2190 T (s t , a t ); 9 t \u2190 t + 1; 10 end 11 end 12 optimize L N LL ; bility of choosing an action a on the given state s. The commonly adopted greedy policy can be formalized as choosing the most probable action with \u03c0(s) = argmax a p(a | s) at test stage."}, {"id": 37, "string": "To learn an optimal classifier, search-based structured prediction requires constructing a reference policy \u03c0 R (s, y), which takes an input state s, gold structure y and outputs its reference action a, and training p(a | s) to imitate the reference policy."}, {"id": 38, "string": "Algorithm 1 shows the common practices in training p(a | s), which involves: first, using \u03c0 R (s, y) to generate a sequence of reference states and actions on the training data (line 1 to line 11 in Algorithm 1); second, using the states and actions on the reference sequences as examples to train p(a | s) with negative log-likelihood (NLL) loss (line 12 in Algorithm 1), L N LL = s\u2208D a \u22121{a = \u03c0 R } \u00b7 log p(a | s) where D is a set of training data."}, {"id": 39, "string": "The reference policy is sometimes sub-optimal and ambiguous which means on one state, there can be more than one action that leads to the optimal prediction."}, {"id": 40, "string": "In transition-based dependency parsing, Goldberg and Nivre (2012) showed that one dependency tree can be reached by several search sequences using Nivre (2008)'s arcstandard algorithm."}, {"id": 41, "string": "In machine translation, the ambiguity problem also exists because one source language sentence usually has multiple semantically correct translations but only one reference translation is presented."}, {"id": 42, "string": "Similar problems have also been observed in semantic parsing (Goodman et al., 2016) ."}, {"id": 43, "string": "According to Fr\u00e9nay and Verleysen (2014) , the widely used NLL loss is vulnerable to ambiguous data which make it worse for searchbased structured prediction."}, {"id": 44, "string": "Besides the ambiguity problem, training and testing discrepancy is another problem that lags the search-based structured prediction performance."}, {"id": 45, "string": "Since the training process imitates the reference policy, all the states in the training data are optimal which means they are guaranteed to reach the optimal structure."}, {"id": 46, "string": "But during the test phase, the model can predict non-optimal states whose search action is never learned."}, {"id": 47, "string": "The greedy search which is prone to error propagation also worsens this problem."}, {"id": 48, "string": "Knowledge Distillation A cumbersome model, which could be an ensemble of several models or a single model with larger number of parameters, usually provides better generalization ability."}, {"id": 49, "string": "Knowledge distillation (Bucilu\u01ce et al., 2006; Ba and Caruana, 2014; Hinton et al., 2015) is a class of methods for transferring the generalization ability of the cumbersome teacher model into a small student model."}, {"id": 50, "string": "Instead of optimizing NLL loss, knowledge distillation uses the distribution q(y | x) outputted by the teacher model as \"soft target\" and optimizes the knowledge distillation loss, L KD = x\u2208D y \u2212q(y | x) \u00b7 log p(y | x)."}, {"id": 51, "string": "In search-based structured prediction scenario, x corresponds to the state s and y corresponds to the action a."}, {"id": 52, "string": "Through optimizing the distillation loss, knowledge of the teacher model is learned by the student model p(y | x)."}, {"id": 53, "string": "When correct label is presented, NLL loss can be combined with the distillation loss via simple interpolation as L = \u03b1L KD + (1 \u2212 \u03b1)L N LL (1) 3 Knowledge Distillation for Search-based Structured Prediction Ensemble As Hinton et al."}, {"id": 54, "string": "(2015) pointed out, although the real objective of a machine learning algorithm is to generalize well to new data, models are usually trained to optimize the performance on training data, which bias the model to the training data."}, {"id": 55, "string": "In search-based structured prediction, such biases can result from either the ambiguities in the training data or the discrepancy between training and testing."}, {"id": 56, "string": "It would be more problematic to train p(a | s) using the loss which is in-robust to ambiguities and only considering the optimal states."}, {"id": 57, "string": "The effect of ensemble on ambiguous data has been studied in Dietterich (2000) ."}, {"id": 58, "string": "They empirically showed that ensemble can overcome the ambiguities in the training data."}, {"id": 59, "string": "Daum\u00e9 III et al."}, {"id": 60, "string": "(2005) also use weighted ensemble of parameters from different iterations as their final structure prediction model."}, {"id": 61, "string": "In this paper, we consider to use ensemble technique to improve the generalization ability of our search-based structured prediction model following these works."}, {"id": 62, "string": "In practice, we train M search-based structured prediction models with different initialized weights and ensemble them by the average of their output distribution as q(a | s) = 1 M m q m (a | s)."}, {"id": 63, "string": "In Section 4.3.1, we empirically show that the ensemble has the ability to choose a good search action in the optimal-yetambiguous states and the non-optimal states."}, {"id": 64, "string": "Distillation from Reference As we can see in Section 4, ensemble indeed improves the performance of baseline models."}, {"id": 65, "string": "However, real world deployment is usually constrained by computation and memory resources."}, {"id": 66, "string": "Ensemble requires running the structured prediction models for multiple times, and that makes it less applicable in real-world problem."}, {"id": 67, "string": "To take the advantage of the ensemble model while avoid running the models multiple times, we use the knowledge distillation technique to distill a single model from the ensemble."}, {"id": 68, "string": "We started from changing the NLL learning objective in Algorithm 1 into the distillation loss (Equation 1) as shown in Algorithm 2."}, {"id": 69, "string": "Since such method learns the model on the states produced by the reference policy, we name it as distillation from reference."}, {"id": 70, "string": "Blocks connected by in dashed red lines in Figure 1 show the workflow of our distillation from reference."}, {"id": 71, "string": "Distillation from Exploration In the scenario of search-based structured prediction, transferring the teacher model's generalization ability into a student model not only includes matching the teacher model's soft targets on the reference search sequence, but also imitating the search decisions made by the teacher model."}, {"id": 72, "string": "One way to accomplish the imitation can be sampling Algorithm 2: Knowledge distillation for search-based structured prediction."}, {"id": 73, "string": "Input: training data: {x (n) , y (n) } N n=1 ; the reference policy: \u03c0 R (s, y); the exploration policy: \u03c0 E (s) which samples an action from the annealed ensemble q(a | s) 1 T Output: classifier p(a | s)."}, {"id": 74, "string": "1 D \u2190 \u2205; 2 for n \u2190 1...N do 3 t \u2190 0; 4 s t \u2190 s 0 (x (n) ); 5 while s t / \u2208 S T do 6 if distilling from reference then 7 a t \u2190 \u03c0 R (s t , y (n) ); 8 else 9 a t \u2190 \u03c0 E (s t ); search sequence from the ensemble and learn from the soft target on the sampled states."}, {"id": 75, "string": "More concretely, we change \u03c0 R (s, y) into a policy \u03c0 E (s) which samples an action a from q(a | s) 1 T , where T is the temperature that controls the sharpness of the distribution (Hinton et al., 2015) ."}, {"id": 76, "string": "The algorithm is shown in Algorithm 2."}, {"id": 77, "string": "Since such distillation generate training instances from exploration, we name it as distillation from exploration."}, {"id": 78, "string": "Blocks connected by in solid blue lines in Figure 1 show the workflow of our distillation from exploration."}, {"id": 79, "string": "On the sampled states, reference decision from \u03c0 R is usually non-trivial to achieve, which makes learning from NLL loss infeasible."}, {"id": 80, "string": "In Section 4, we empirically show that fully distilling from the soft target, i.e."}, {"id": 81, "string": "setting \u03b1 = 1 in Equation 1, achieves comparable performance with that both from distillation and NLL."}, {"id": 82, "string": "Distillation from Both Distillation from reference can encourage the model to predict the action made by the reference policy and distillation from exploration learns the model on arbitrary states."}, {"id": 83, "string": "They transfer the generalization ability of the ensemble from different aspects."}, {"id": 84, "string": "Hopefully combining them can further improve the performance."}, {"id": 85, "string": "In this paper, we combine distillation from reference and exploration with the following manner: we use \u03c0 R and \u03c0 E to generate a set of training states."}, {"id": 86, "string": "Then, we learn p(a | s) on the generated states."}, {"id": 87, "string": "If one state was generated by the reference policy, we minimize the interpretation of distillation and NLL loss."}, {"id": 88, "string": "Otherwise, we minimize the distillation loss only."}, {"id": 89, "string": "Experiments We perform experiments on two tasks: transitionbased dependency parsing and neural machine translation."}, {"id": 90, "string": "Both these two tasks are converted to search-based structured prediction as Section 2.1."}, {"id": 91, "string": "For the transition-based parsing, we use the stack-lstm parsing model proposed by Dyer et al."}, {"id": 92, "string": "(2015) to parameterize the classifier."}, {"id": 93, "string": "1 For the neural machine translation, we parameterize the classifier as an LSTM encoder-decoder model by following Luong et al."}, {"id": 94, "string": "(2015) ."}, {"id": 95, "string": "2 We encourage the reader of this paper to refer corresponding papers for more details."}, {"id": 96, "string": "Settings Transition-based Dependency Parsing We perform experiments on Penn Treebank (PTB) dataset with standard data split (Section 2-21 for training, Section 22 for development, and Section 23 for testing)."}, {"id": 97, "string": "Stanford dependencies are converted from the original constituent trees using Stanford CoreNLP 3.3.0 3 by following Dyer et al."}, {"id": 98, "string": "(2015) ."}, {"id": 99, "string": "Automatic part-of-speech tags are assigned by 10-way jackknifing whose accuracy is 97.5%."}, {"id": 100, "string": "Labeled attachment score (LAS) excluding punctuation are used in evaluation."}, {"id": 101, "string": "For the other hyper-parameters, we use the same settings as Dyer et al."}, {"id": 102, "string": "(2015) ."}, {"id": 103, "string": "The best iteration and \u03b1 is determined on the development set."}, {"id": 104, "string": "BLEU score on dev."}, {"id": 105, "string": "set Figure 2 : The effect of using different Ks when approximating distillation loss with K-most probable actions in the machine translation experiments."}, {"id": 106, "string": "Reimers and Gurevych (2017) and others have pointed out that neural network training is nondeterministic and depends on the seed for the random number generator."}, {"id": 107, "string": "To control for this effect, they suggest to report the average of M differentlyseeded runs."}, {"id": 108, "string": "In all our dependency parsing, we set n = 20."}, {"id": 109, "string": "Neural Machine Translation We conduct our experiments on a small machine translation dataset, which is the Germanto-English portion of the IWSLT 2014 machine translation evaluation campaign."}, {"id": 110, "string": "The dataset contains around 153K training sentence pairs, 7K development sentence pairs, and 7K testing sentence pairs."}, {"id": 111, "string": "We use the same preprocessing as Ranzato et al."}, {"id": 112, "string": "(2015) , which leads to a German vocabulary of about 30K entries and an English vocabulary of 25K entries."}, {"id": 113, "string": "One-layer LSTM for both encoder and decoder with 256 hidden units are used by following Wiseman and Rush (2016) ."}, {"id": 114, "string": "BLEU (Papineni et al., 2002) was used to evaluate the translator's performance."}, {"id": 115, "string": "4 Like in the dependency parsing experiments, we run M = 10 differentlyseeded runs and report the averaged score."}, {"id": 116, "string": "Optimizing the distillation loss in Equation 1 requires enumerating over the action space."}, {"id": 117, "string": "It is expensive for machine translation since the size of the action space (vocabulary) is considerably large (25K in our experiments)."}, {"id": 118, "string": "In this paper, we use the K-most probable actions (translations on target side) on one state to approximate the whole probability distribution of q(a | s) as a q(a | s) \u00b7 log p(a | s) \u2248 K k q(\u00e2 k | s) \u00b7 log p(\u00e2 k | s), where\u00e2 k is the k-th probable action."}, {"id": 119, "string": "We fix \u03b1 to Dozat and Manning (2016) 94.08 Kuncoro et al."}, {"id": 120, "string": "(2016) 92.06 Kuncoro et al."}, {"id": 121, "string": "(2017) 94.60 (Nilsson and Nivre, 2008) shows the improvement of our Distill (both) over Baseline is statistically significant with p < 0.01."}, {"id": 122, "string": "1 and vary K and evaluate the distillation model's performance."}, {"id": 123, "string": "These results are shown in Figure  2 where there is no significant difference between different Ks and in speed consideration, we set K to 1 in the following experiments."}, {"id": 124, "string": "We tune the temperature T during exploration and the results are shown in Figure 3 ."}, {"id": 125, "string": "Sharpen the distribution during the sampling process generally performs better on development set."}, {"id": 126, "string": "Our distillation from exploration model gets almost the same performance as that from reference, but simply combing these two sets of data outperform both models by achieving an LAS of 92.14."}, {"id": 127, "string": "Results Transition-based Dependency Parsing We also compare our parser with the other parsers in Table 2 ."}, {"id": 128, "string": "The second group shows the greedy transition-based parsers in previous literatures."}, {"id": 129, "string": "Andor et al."}, {"id": 130, "string": "(2016) presented an alternative state representation and explored both greedy and beam search decoding."}, {"id": 131, "string": "explores training the greedy parser with dynamic oracle."}, {"id": 132, "string": "Our distillation parser outperforms all these greedy counterparts."}, {"id": 133, "string": "The third group shows   parsers trained on different techniques including decoding with beam search (Buckman et al., 2016; Andor et al., 2016) , training transitionbased parser with beam search (Andor et al., 2016) , graph-based parsing (Dozat and Manning, 2016) , distilling a graph-based parser from the output of 20 parsers (Kuncoro et al., 2016) , and converting constituent parsing results to dependencies (Kuncoro et al., 2017) ."}, {"id": 134, "string": "Our distillation parser still outperforms its transition-based counterparts but lags the others."}, {"id": 135, "string": "We attribute the gap between our parser with the other parsers to the difference in parsing algorithms."}, {"id": 136, "string": "Table 3 shows the experimental results on IWSLT 2014 dataset."}, {"id": 137, "string": "Similar to the PTB parsing results, the ensemble 10 translators outperforms the baseline translator by 3.47 in BLEU score."}, {"id": 138, "string": "Distilling from the ensemble by following the reference leads to a single translator of 24.76 BLEU score."}, {"id": 139, "string": "Like in the parsing experiments, sharpen the distribution when exploring the search space is more helpful to the model's performance but the differences when T \u2264 0.2 is not significant as shown in Figure 3 ."}, {"id": 140, "string": "We set T = 0.1 in our distillation from exploration experiments since it achieves the best development score."}, {"id": 141, "string": "Table 3 shows the exploration result of a BLEU score of 24.64 and it slightly lags the best reference model."}, {"id": 142, "string": "Distilling from both the reference and exploration improves the single model's performance by a large margin and achieves a BLEU score of 25.44."}, {"id": 143, "string": "Neural Machine Translation We also compare our model with other translation models including the one trained with reinforcement learning (Ranzato et al., 2015) and that using beam search in training (Wiseman and Rush, 2016) ."}, {"id": 144, "string": "Our distillation translator outperforms these models."}, {"id": 145, "string": "Both the parsing and machine translation experiments confirm that it's feasible to distill a reasonable search-based structured prediction model by just exploring the search space."}, {"id": 146, "string": "Combining the reference and exploration further improves the model's performance and outperforms its greedy structured prediction counterparts."}, {"id": 147, "string": "Analysis In Section 4.2, improvements from distilling the ensemble have been witnessed in both the transition-based dependency parsing and neural machine translation experiments."}, {"id": 148, "string": "However, questions like \"Why the ensemble works better?"}, {"id": 149, "string": "Is it feasible to fully learn from the distillation loss without NLL?"}, {"id": 150, "string": "Is learning from distillation loss stable?\""}, {"id": 151, "string": "are yet to be answered."}, {"id": 152, "string": "In this section, we first study the ensemble's behavior on \"problematic\" states to show its generalization ability."}, {"id": 153, "string": "Then, we empirically study the feasibility of fully learning from the distillation loss by studying the effect of \u03b1 in the distillation from reference setting."}, {"id": 154, "string": "Finally, we show that learning from distillation loss is less sensitive to initialization and achieves a more stable model."}, {"id": 155, "string": "Table 4 : The ranking performance of parsers' output distributions evaluated in MAP on \"problematic\" states."}, {"id": 156, "string": "Ensemble on \"Problematic\" States As mentioned in previous sections, \"problematic\" states which is either ambiguous or non-optimal harm structured prediciton's performance."}, {"id": 157, "string": "Ensemble shows to improve the performance in Section 4.2, which indicates it does better on these states."}, {"id": 158, "string": "To empirically testify this, we use dependency parsing as a testbed and study the ensemble's output distribution using the dynamic oracle."}, {"id": 159, "string": "The dynamic oracle (Goldberg and Nivre, 2012; Goldberg et al., 2014) can be used to efficiently determine, given any state s, which transition action leads to the best achievable parse from s; if some errors may have already made, what is the best the parser can do, going forward?"}, {"id": 160, "string": "This allows us to analyze the accuracy of each parser's individual decisions, in the \"problematic\" states."}, {"id": 161, "string": "In this paper, we evaluate the output distributions of the baseline and ensemble parser against the reference actions suggested by the dynamic oracle."}, {"id": 162, "string": "Since dynamic oracle yields more than one reference actions due to ambiguities and previous mistakes and the output distribution can be treated as their scoring, we evaluate them as a ranking problem."}, {"id": 163, "string": "Intuitively, when multiple reference actions exist, a good parser should push probability mass to these actions."}, {"id": 164, "string": "We draw problematic states by sampling from our baseline parser."}, {"id": 165, "string": "The comparison in Table 4 shows that the ensemble model significantly outperforms the baseline on ambiguous and non-optimal states."}, {"id": 166, "string": "This observation indicates the ensemble's output distribution is more \"informative\", thus generalizes well on problematic states and achieves better performance."}, {"id": 167, "string": "We also observe that the distillation model perform better than both the baseline and ensemble."}, {"id": 168, "string": "We attribute this to the fact that the distillation model is learned from exploration."}, {"id": 169, "string": "Effect of \u03b1 Over our distillation from reference model, we study the effect of \u03b1 in Equation 1."}, {"id": 170, "string": "We vary \u03b1 from 0 to 1 by a step of 0.1 in both the transitionbased dependency parsing and neural machine translation experiments and plot the model's performance on development sets in Figure 4 ."}, {"id": 171, "string": "Similar trends are witnessed in both these two experiments that model that's configured with larger \u03b1 generally performs better than that with smaller \u03b1."}, {"id": 172, "string": "For the dependency parsing problem, the best development performance is achieved when we set \u03b1 = 1, and for the machine translation, the best \u03b1 is 0.8."}, {"id": 173, "string": "There is only 0.2 point of difference between the best \u03b1 model and the one with \u03b1 equals to 1."}, {"id": 174, "string": "Such observation indicates that when distilling from the reference policy paying more attention to the distillation loss rather than the NLL is more beneficial."}, {"id": 175, "string": "It also indicates that fully learning from the distillation loss outputted by the ensemble is reasonable because models configured with \u03b1 = 1 generally achieves good performance."}, {"id": 176, "string": "Learning Stability Besides the improved performance, knowledge distillation also leads to more stable learning."}, {"id": 177, "string": "The performance score distributions of differentlyseed runs are depicted as violin plot in Figure 5 ."}, {"id": 178, "string": "Table 5 also reveals the smaller standard derivations are achieved by our distillation methods."}, {"id": 179, "string": "As Keskar et al."}, {"id": 180, "string": "(2016) pointed out that the general-   ization gap is not due to overfit, but due to the network converge to sharp minimizer which generalizes worse, we attribute the more stable training from our distillation model as the distillation loss presents less sharp minimizers."}, {"id": 181, "string": "Related Work Several works have been proposed to applying knowledge distillation to NLP problems."}, {"id": 182, "string": "Kim and Rush (2016) presented a distillation model which focus on distilling the structured loss from a large model into a small one which works on sequencelevel."}, {"id": 183, "string": "In contrast to their work, we pay more attention to action-level distillation and propose to do better action-level distillation by both from reference and exploration."}, {"id": 184, "string": "Freitag et al."}, {"id": 185, "string": "(2017) used an ensemble of 6translators to generate training reference."}, {"id": 186, "string": "Exploration was tried in their work with beam-search."}, {"id": 187, "string": "We differ their work by training the single model to match the distribution of the ensemble."}, {"id": 188, "string": "Using ensemble in exploration was also studied in reinforcement learning community (Osband et al., 2016) ."}, {"id": 189, "string": "In addition to distilling the ensemble on the labeled training data, a line of semisupervised learning works show that it's effective to transfer knowledge of cumbersome model into a simple one on the unlabeled data (Liang et al., 2008; Li et al., 2014) ."}, {"id": 190, "string": "Their extensions to knowledge distillation call for further study."}, {"id": 191, "string": "Kuncoro et al."}, {"id": 192, "string": "(2016) proposed to compile the knowledge from an ensemble of 20 transitionbased parsers into a voting and distill the knowledge by introducing the voting results as a regularizer in learning a graph-based parser."}, {"id": 193, "string": "Different from their work, we directly do the distillation on the classifier of the transition-based parser."}, {"id": 194, "string": "Besides the attempts for directly using the knowledge distillation technique, Stahlberg and Byrne (2017) propose to first build the ensemble of several machine translators into one network by unfolding and then use SVD to shrink its parameters, which can be treated as another kind of knowledge distillation."}, {"id": 195, "string": "Conclusion In this paper, we study knowledge distillation for search-based structured prediction and propose to distill an ensemble into a single model both from reference and exploration states."}, {"id": 196, "string": "Experiments on transition-based dependency parsing and machine translation show that our distillation method significantly improves the single model's performance."}, {"id": 197, "string": "Comparison analysis gives empirically guarantee for our distillation method."}], "headers": [{"section": "Introduction", "n": "1", "start": 0, "end": 27}, {"section": "Search-based Structured Prediction", "n": "2.1", "start": 28, "end": 47}, {"section": "Knowledge Distillation", "n": "2.2", "start": 48, "end": 53}, {"section": "Ensemble", "n": "3.1", "start": 54, "end": 63}, {"section": "Distillation from Reference", "n": "3.2", "start": 64, "end": 70}, {"section": "Distillation from Exploration", "n": "3.3", "start": 71, "end": 81}, {"section": "Distillation from Both", "n": "3.4", "start": 82, "end": 88}, {"section": "Experiments", "n": "4", "start": 89, "end": 95}, {"section": "Transition-based Dependency Parsing", "n": "4.1.1", "start": 96, "end": 108}, {"section": "Neural Machine Translation", "n": "4.1.2", "start": 109, "end": 126}, {"section": "Transition-based Dependency Parsing", "n": "4.2.1", "start": 127, "end": 142}, {"section": "Neural Machine Translation", "n": "4.2.2", "start": 143, "end": 146}, {"section": "Analysis", "n": "4.3", "start": 147, "end": 155}, {"section": "Ensemble on \"Problematic\" States", "n": "4.3.1", "start": 156, "end": 168}, {"section": "Effect of \u03b1", "n": "4.3.2", "start": 169, "end": 175}, {"section": "Learning Stability", "n": "4.3.3", "start": 176, "end": 180}, {"section": "Related Work", "n": "5", "start": 181, "end": 193}, {"section": "Conclusion", "n": "6", "start": 194, "end": 197}], "figures": [{"filename": "../figure/image/1315-Figure1-1.png", "caption": "Figure 1: Workflow of our knowledge distillation for search-based structured prediction. The yellow bracket represents the ensemble of multiple models trained with different initialization. The dashed red line shows our distillation from reference (\u00a73.2). The solid blue line shows our distillation from exploration (\u00a73.3).", "page": 0, "bbox": {"x1": 306.71999999999997, "x2": 525.12, "y1": 221.76, "y2": 396.0}}, {"filename": "../figure/image/1315-Table2-1.png", "caption": "Table 2: The dependency parsing results. Significance test (Nilsson and Nivre, 2008) shows the improvement of our Distill (both) over Baseline is statistically significant with p < 0.01.", "page": 5, "bbox": {"x1": 74.88, "x2": 288.0, "y1": 62.879999999999995, "y2": 255.35999999999999}}, {"filename": "../figure/image/1315-Figure3-1.png", "caption": "Figure 3: The effect of T on PTB (above) and IWSLT 2014 (below) development set.", "page": 5, "bbox": {"x1": 310.08, "x2": 523.1999999999999, "y1": 304.8, "y2": 508.79999999999995}}, {"filename": "../figure/image/1315-Table3-1.png", "caption": "Table 3: The machine translation results. MIXER denotes that of Ranzato et al. (2015), BSO denotes that of Wiseman and Rush (2016). Significance test (Koehn, 2004) shows the improvement of our Distill (both) over Baseline is statistically significant with p < 0.01.", "page": 5, "bbox": {"x1": 329.76, "x2": 503.03999999999996, "y1": 62.879999999999995, "y2": 187.2}}, {"filename": "../figure/image/1315-Table1-1.png", "caption": "Table 1: The search-based structured prediction view of transition-based dependency parsing (Nivre, 2008) and neural machine translation (Sutskever et al., 2014).", "page": 1, "bbox": {"x1": 72.0, "x2": 526.0799999999999, "y1": 63.839999999999996, "y2": 159.35999999999999}}, {"filename": "../figure/image/1315-Table4-1.png", "caption": "Table 4: The ranking performance of parsers\u2019 output distributions evaluated in MAP on \u201cproblematic\u201d states.", "page": 6, "bbox": {"x1": 314.88, "x2": 518.4, "y1": 62.879999999999995, "y2": 132.0}}, {"filename": "../figure/image/1315-Figure4-1.png", "caption": "Figure 4: The effect of \u03b1 on PTB (above) and IWSLT 2014 (below) development set.", "page": 7, "bbox": {"x1": 74.88, "x2": 287.03999999999996, "y1": 65.75999999999999, "y2": 269.76}}, {"filename": "../figure/image/1315-Figure5-1.png", "caption": "Figure 5: The distributions of scores for the baseline model and our distillation from both on PTB test (left) and IWSLT 2014 test (right) on differently-seeded runs.", "page": 7, "bbox": {"x1": 319.68, "x2": 514.0799999999999, "y1": 68.64, "y2": 237.12}}, {"filename": "../figure/image/1315-Table5-1.png", "caption": "Table 5: The minimal, maximum, and standard derivation values on differently-seeded runs.", "page": 7, "bbox": {"x1": 312.0, "x2": 521.28, "y1": 327.84, "y2": 427.2}}, {"filename": "../figure/image/1315-Figure2-1.png", "caption": "Figure 2: The effect of using different Ks when approximating distillation loss with K-most probable actions in the machine translation experiments.", "page": 4, "bbox": {"x1": 310.56, "x2": 523.1999999999999, "y1": 65.75999999999999, "y2": 160.79999999999998}}]}